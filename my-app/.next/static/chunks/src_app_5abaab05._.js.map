{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/%C4%90%E1%BB%93%20%C3%A1n%20A/hospitality-website-main/hospitality-website-main/my-app/src/app/pharmacyPage/PatientList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { UserIcon, RefreshCw, AlertCircle, ClipboardList, Clock } from 'lucide-react';\nimport { PharmacyPatient, getPatientsWithPendingPrescriptions } from './pharmacyUtils';\nimport { useAuth } from '../context/AuthContext';\n\ninterface PatientListProps {\n  patients: PharmacyPatient[];\n  onPatientSelect: (patient: PharmacyPatient) => void;\n  onRefresh?: () => void;\n  isLoading?: boolean;\n  error?: string | null;\n}\n\nexport const PatientList = ({\n  patients,\n  onPatientSelect,\n  onRefresh,\n  isLoading = false,\n  error = null\n}: PatientListProps) => {\n  const { token } = useAuth();\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  \n  // Function to handle manual refresh\n  const handleRefresh = async () => {\n    if (isRefreshing || isLoading) return;\n    \n    setIsRefreshing(true);\n    try {\n      if (onRefresh) {\n        await onRefresh();\n      }\n    } catch (error) {\n      console.error(\"Error refreshing patient list:\", error);\n    } finally {\n      // Add a small delay for better UX\n      setTimeout(() => {\n        setIsRefreshing(false);\n      }, 800);\n    }\n  };\n  \n  return <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n      <div className=\"bg-blue-600 px-4 py-3 flex justify-between items-center\">\n        <div className=\"flex items-center\">\n          <ClipboardList className=\"h-5 w-5 text-white mr-2\" />\n          <h2 className=\"text-lg font-medium text-white\">\n            Danh Sách Chờ Phát Thuốc\n          </h2>\n          {patients.length > 0 && (\n            <span className=\"ml-2 bg-white text-blue-600 rounded-full px-2 py-0.5 text-xs font-medium\">\n              {patients.length}\n            </span>\n          )}\n        </div>\n        <button \n          onClick={handleRefresh} \n          className={`p-1.5 rounded-full text-white hover:bg-blue-700 transition-all focus:outline-none ${isRefreshing ? 'animate-spin' : ''}`}\n          disabled={isRefreshing || isLoading}\n          title=\"Làm mới danh sách\"\n        >\n          <RefreshCw size={18} />\n        </button>\n      </div>\n      <div className=\"divide-y divide-gray-200 max-h-96 overflow-y-auto\">\n        {isRefreshing || isLoading ? (\n          <div className=\"flex items-center justify-center p-8\">\n            <div className=\"text-center\">\n              <RefreshCw size={24} className=\"animate-spin mx-auto text-blue-600 mb-2\" />\n              <p className=\"text-sm text-gray-600\">{isRefreshing ? 'Đang cập nhật danh sách...' : 'Đang tải danh sách...'}</p>\n            </div>\n          </div>\n        ) : error ? (\n          <div className=\"p-6 text-center\">\n            <div className=\"rounded-full bg-red-100 p-3 w-12 h-12 mx-auto mb-4 flex items-center justify-center\">\n              <AlertCircle className=\"h-6 w-6 text-red-600\" />\n            </div>\n            <p className=\"text-red-600 font-medium\">Không thể tải dữ liệu</p>\n            <p className=\"text-sm text-gray-600 mt-2 mb-4\">{error}</p>\n            <button \n              onClick={handleRefresh}\n              className=\"inline-flex items-center px-4 py-2 border border-red-300 rounded-md shadow-sm text-sm font-medium text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n            >\n              <RefreshCw size={16} className=\"mr-2\" /> Thử lại\n            </button>\n          </div>\n        ) : patients.length > 0 ? (\n          patients.map(patient => (\n            <div key={patient.id} className=\"p-4 hover:bg-gray-50 transition-colors\">\n              <div className=\"flex justify-between items-center\">\n                <div className=\"flex items-center\">\n                  <div className=\"bg-blue-100 rounded-full p-2 mr-3\">\n                    <UserIcon className=\"h-5 w-5 text-blue-600\" />\n                  </div>\n                  <div>\n                    <div className=\"flex items-center\">\n                      <p className=\"font-medium text-gray-900\">\n                        {patient.fullName}\n                      </p>\n                      <span className=\"ml-2 px-2 py-0.5 bg-blue-100 text-blue-800 text-xs rounded-full\">\n                        {patient.serialNumber}\n                      </span>\n                    </div>\n                    <p className=\"text-sm text-gray-500\">\n                      {patient.phone || 'Không có SĐT'}\n                    </p>\n                    <div className=\"flex items-center text-xs text-blue-600 mt-1\">\n                      <span className=\"font-medium\">Bác sĩ:</span> \n                      <span className=\"ml-1\">{patient.doctor}</span>\n                    </div>\n                    <div className=\"flex flex-col mt-1\">\n                      {patient.diagnosis && (\n                        <div className=\"text-xs text-gray-700\">\n                          <span className=\"font-medium\">Chẩn đoán:</span> \n                          <span className=\"ml-1 line-clamp-1\">{patient.diagnosis}</span>\n                        </div>\n                      )}\n                      {patient.prescription && (\n                        <div className=\"flex items-center text-xs text-green-600 mt-0.5\">\n                          <Clock size={12} className=\"mr-1\" />\n                          <span className=\"font-medium\">{patient.prescription.length} loại thuốc cần phát</span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <button \n                  onClick={() => onPatientSelect(patient)} \n                  className=\"inline-flex items-center px-3 py-1.5 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors\"\n                >\n                  Phát thuốc\n                </button>\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"p-8 text-center\">\n            <div className=\"rounded-full bg-gray-100 p-3 w-12 h-12 mx-auto mb-4 flex items-center justify-center\">\n              <UserIcon className=\"h-6 w-6 text-gray-400\" />\n            </div>\n            <p className=\"text-gray-600 font-medium\">Không có bệnh nhân nào trong danh sách chờ.</p>\n            <p className=\"text-sm text-gray-500 mt-1\">Tất cả đơn thuốc đã được phát.</p>\n            <button \n              onClick={handleRefresh}\n              className=\"mt-4 inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              <RefreshCw size={16} className=\"mr-2\" /> Kiểm tra lại\n            </button>\n          </div>\n        )}\n      </div>\n    </div>;\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 458, "column": 0}, "map": {"version":3,"sources":["file:///D:/%C4%90%E1%BB%93%20%C3%A1n%20A/hospitality-website-main/hospitality-website-main/my-app/src/app/pharmacyPage/Invoice.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ArrowLeftIcon, PrinterIcon, AlertTriangle, Coins, DollarSign, CalendarRange } from 'lucide-react';\nimport { PharmacyPatient, PharmacyMedicine } from './pharmacyUtils';\nimport { calculatePrescriptionRevenue } from '../services/api.service';\nimport { useAuth } from '../context/AuthContext';\n\ninterface InvoiceProps {\n  patient: PharmacyPatient;\n  onClose: () => void;\n  onComplete: () => void;\n}\n\nexport const Invoice = ({\n  patient,\n  onClose,\n  onComplete\n}: InvoiceProps) => {\n  const { token, user } = useAuth(); // Get both token and user from auth context\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [revenueData, setRevenueData] = useState<any>(null);\n  const [isLoadingRevenue, setIsLoadingRevenue] = useState(false);\n  \n  // Get the current user's name for the invoice\n  const pharmacistName = user?.fullName || 'Chưa xác định';\n  const currentDate = new Date().toLocaleDateString('vi-VN');\n  \n  // Tính tổng tiền từ dữ liệu trong client\n  const calculateTotal = () => {\n    return patient.prescription.reduce((total: number, med: PharmacyMedicine) => {\n      return total + med.price * med.quantity;\n    }, 0);\n  };\n  \n  // Lấy doanh thu từ API khi component được mount\n  useEffect(() => {\n    const fetchRevenueData = async () => {\n      if (!token || !patient.id) {\n        console.log(\"Missing token or patient ID, cannot fetch revenue data\");\n        return;\n      }\n      \n      setIsLoadingRevenue(true);\n      try {\n        console.log(`Fetching revenue data for prescription ID: ${patient.id}`);\n        // Gọi API để tính doanh thu từ đơn thuốc này\n        const data = await calculatePrescriptionRevenue(patient.id, token);\n        console.log(\"Revenue data from API:\", data);\n        \n        if (data && data.totalAmount !== undefined) {\n          setRevenueData(data);\n          console.log(`Total revenue for this prescription: ${data.totalAmount.toLocaleString('vi-VN')} đ`);\n          \n          if (data.monthlyRevenue) {\n            console.log(`Monthly revenue: ${data.monthlyRevenue.toLocaleString('vi-VN')} đ`);\n          }\n          \n          if (data.yearlyRevenue) {\n            console.log(`Yearly revenue: ${data.yearlyRevenue.toLocaleString('vi-VN')} đ`);\n          }\n        } else {\n          console.warn(\"Revenue data is incomplete or undefined\");\n        }\n      } catch (err: any) {\n        console.error(\"Error fetching revenue data:\", err);\n        console.error(\"Error details:\", err.response?.data || err.message);\n      } finally {\n        setIsLoadingRevenue(false);\n      }\n    };\n    \n    fetchRevenueData();\n  }, [patient.id, token]);\n  \n  const handlePrint = async () => {\n    setIsProcessing(true);\n    setError(null);\n    \n    try {\n      console.log(\"Invoice: Starting print and complete process\");\n      \n      // Trước khi hoàn tất, kiểm tra nếu chưa có dữ liệu doanh thu, thử lấy lại\n      if (!revenueData && token) {\n        console.log(\"Invoice: Fetching revenue data before completing...\");\n        try {\n          const data = await calculatePrescriptionRevenue(patient.id, token);\n          setRevenueData(data);\n          console.log(\"Revenue data retrieved:\", data);\n        } catch (revError: any) {\n          console.error(\"Could not retrieve revenue data:\", revError);\n          // Continue even if we can't get revenue data\n        }\n      }\n      \n      // Xác định tổng tiền từ API hoặc tính toán cục bộ\n      const totalAmount = revenueData?.totalAmount || calculateTotal();\n      \n      // In ra thông tin cho biết chúng ta đang xử lý\n      console.log(\"Invoice: Printing invoice for patient:\", patient.fullName);\n      console.log(\"Invoice: Patient ID:\", patient.id);\n      console.log(\"Invoice: Prescription ID:\", patient.id); // In the pharmacy system, patient.id is actually the prescription ID\n      console.log(\"Invoice: Total amount (from API):\", revenueData?.totalAmount?.toLocaleString('vi-VN') || \"Not available\", \"đ\");\n      console.log(\"Invoice: Total amount (calculated):\", calculateTotal().toLocaleString('vi-VN'), \"đ\");\n      console.log(\"Invoice: Medicines:\", patient.prescription.length, \"items\");\n      \n      // Additional revenue information\n      if (revenueData) {\n        console.log(\"Invoice: Monthly revenue:\", revenueData.monthlyRevenue?.toLocaleString('vi-VN') || \"N/A\", \"đ\");\n        console.log(\"Invoice: Yearly revenue:\", revenueData.yearlyRevenue?.toLocaleString('vi-VN') || \"N/A\", \"đ\");\n      }\n      \n      // Hiển thị thông tin chi tiết về mỗi loại thuốc\n      patient.prescription.forEach((med, index) => {\n        const apiMedicineData = revenueData?.medicines?.find((m: any) => m.name === med.name);\n        \n        console.log(`Invoice: Medicine ${index + 1}:`, {\n          name: med.name,\n          quantity: med.quantity,\n          price: med.price,\n          calculatedTotal: med.quantity * med.price,\n          apiTotal: apiMedicineData?.total || 'N/A'\n        });\n      });\n      \n      // Giả lập thời gian chờ để UX tốt hơn\n      console.log(\"Invoice: Waiting 1 second before completing...\");\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Cập nhật trạng thái prescription thành DISPENSED\n      console.log(\"Invoice: Now calling onComplete() to mark prescription as DISPENSED\");\n      \n      // Gọi callback để thông báo cho component cha (handleComplete trong PatientDetails.tsx)\n      if (typeof onComplete === 'function') {\n        onComplete();\n        console.log(\"Invoice: Called onComplete() successfully\");\n      } else {\n        console.error(\"Invoice: onComplete is not a function!\", onComplete);\n        throw new Error(\"Lỗi kết nối: onComplete không phải là một hàm\");\n      }\n      \n      console.log(\"Invoice: Process completed successfully\");\n      \n      // Trong môi trường thực tế, đây là nơi có thể hiển thị thông báo thành công\n      // hoặc chuyển hướng người dùng đến danh sách bệnh nhân\n      \n      // Thông báo trực quan cho người dùng biết đang xử lý\n      alert(\"Hóa đơn đã được xử lý thành công!\\nTrạng thái đơn thuốc đã được cập nhật thành 'DISPENSED'.\");\n      \n      // Thực hiện yêu cầu in thực tế nếu cần\n      // window.print(); // Uncomment để cho phép in hóa đơn thực tế\n      \n    } catch (err: any) {\n      console.error(\"Error completing invoice:\", err);\n      setError(err.message || \"Không thể hoàn tất hóa đơn. Vui lòng thử lại.\");\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n      <div className=\"bg-blue-600 px-4 py-3 flex justify-between items-center\">\n        <div className=\"flex items-center\">\n          <button onClick={onClose} className=\"mr-2 text-white hover:text-blue-100\">\n            <ArrowLeftIcon className=\"h-5 w-5\" />\n          </button>\n          <h2 className=\"text-lg font-medium text-black bg-white px-2 py-1 rounded-md\">Hóa Đơn Thuốc</h2>\n        </div>\n        {error ? (\n          <div className=\"flex items-center text-red-600 bg-red-50 px-3 py-1 rounded-md border border-red-200\">\n            <AlertTriangle className=\"h-4 w-4 mr-1\" />\n            <span className=\"text-sm\">{error}</span>\n          </div>\n        ) : (\n          <button \n            onClick={handlePrint} \n            disabled={isProcessing}\n            className={`inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md transition-colors ${\n              isProcessing \n                ? 'bg-gray-400 text-white cursor-not-allowed' \n                : 'text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500'\n            }`}\n          >\n            {isProcessing ? (\n              <>\n                <span className=\"animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full mr-1\"></span>\n                Đang xử lý...\n              </>\n            ) : (\n              <>\n                <PrinterIcon className=\"h-4 w-4 mr-1\" /> In & hoàn tất\n              </>\n            )}\n          </button>\n        )}\n      </div>\n      <div className=\"p-6\">\n        <div className=\"border border-gray-200 rounded-lg p-6 mb-6\">\n          <div className=\"text-center mb-6\">\n            <h3 className=\"text-xl font-bold text-black\">\n              PHÒNG KHÁM ĐA KHOA\n            </h3>\n            <p className=\"text-black\">123 Nguyễn Huệ, Quận 1, TP.HCM</p>\n            <p className=\"text-black\">Điện thoại: (028) 3822 1234</p>\n            <div className=\"mt-4 border-t pt-4\">\n              <h2 className=\"text-xl font-bold text-black\">HÓA ĐƠN THUỐC</h2>\n              <p className=\"text-black\">Ngày: {currentDate}</p>\n              {isLoadingRevenue && (\n                <p className=\"text-blue-500 text-xs mt-1\">Đang tính toán doanh thu...</p>\n              )}\n            </div>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n            <div>\n              <p className=\"text-sm font-medium text-black\">Họ và tên bệnh nhân</p>\n              <p className=\"text-black\">{patient.fullName}</p>\n            </div>\n            <div>\n              <p className=\"text-sm font-medium text-black\">Số điện thoại</p>\n              <p className=\"text-black\">{patient.phone}</p>\n            </div>\n            <div>\n              <p className=\"text-sm font-medium text-black\">Mã đơn thuốc</p>\n              <p className=\"text-black\">{patient.serialNumber}</p>\n            </div>\n            <div>\n              <p className=\"text-sm font-medium text-black\">Chẩn đoán</p>\n              <p className=\"text-black\">{patient.diagnosis}</p>\n            </div>\n            <div>\n              <p className=\"text-sm font-medium text-black\">Bác sĩ kê đơn</p>\n              <p className=\"text-black\">{patient.doctor}</p>\n            </div>\n            <div>\n              <p className=\"text-sm font-medium text-black\">Nhân viên phát thuốc</p>\n              <p className=\"text-black\">{pharmacistName}</p>\n            </div>\n          </div>\n          <div className=\"overflow-x-auto mb-6\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">\n                    STT\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">\n                    Tên thuốc\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">\n                    Số lượng\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">\n                    Liều dùng\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">\n                    Đơn giá\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider\">\n                    Thành tiền\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {patient.prescription.map((medicine: PharmacyMedicine, index: number) => <tr key={index}>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {index + 1}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {medicine.name}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {medicine.quantity}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {medicine.dosage}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {medicine.price.toLocaleString('vi-VN')} đ\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {(medicine.price * medicine.quantity).toLocaleString('vi-VN')}{' '}\n                      đ\n                    </td>\n                  </tr>)}\n                <tr className=\"bg-gray-50\">\n                  <td colSpan={5} className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-black text-right\">\n                    <div className=\"flex items-center justify-end\">\n                      <DollarSign className=\"w-4 h-4 mr-1\" />\n                      <span>Tổng cộng:</span>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-black\">\n                    {revenueData?.totalAmount ? \n                      revenueData.totalAmount.toLocaleString('vi-VN') : \n                      calculateTotal().toLocaleString('vi-VN')} đ\n                  </td>\n                </tr>\n                {revenueData?.monthlyRevenue && (\n                  <tr className=\"bg-blue-50\">\n                    <td colSpan={5} className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-800 text-right\">\n                      <div className=\"flex items-center justify-end\">\n                        <CalendarRange className=\"w-4 h-4 mr-1\" />\n                        <span>Doanh thu tháng này:</span>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-800\">\n                      {revenueData.monthlyRevenue.toLocaleString('vi-VN')} đ\n                    </td>\n                  </tr>\n                )}\n                {revenueData?.yearlyRevenue && (\n                  <tr className=\"bg-green-50\">\n                    <td colSpan={5} className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-green-800 text-right\">\n                      <div className=\"flex items-center justify-end\">\n                        <Coins className=\"w-4 h-4 mr-1\" />\n                        <span>Doanh thu năm nay:</span>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-green-800\">\n                      {revenueData.yearlyRevenue.toLocaleString('vi-VN')} đ\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n          {revenueData && (\n            <div className=\"mb-8 p-4 border border-blue-200 rounded-lg bg-blue-50\">\n              <h4 className=\"font-medium text-blue-800 mb-2 flex items-center\">\n                <Coins className=\"h-5 w-5 mr-1\" /> Thông tin doanh thu\n              </h4>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div>\n                  <p className=\"text-sm text-blue-800\">Doanh thu từ đơn thuốc này:</p>\n                  <p className=\"text-lg font-bold text-blue-900\">{revenueData.totalAmount?.toLocaleString('vi-VN') || '0'} đ</p>\n                </div>\n                {revenueData.monthlyRevenue !== undefined && (\n                  <div>\n                    <p className=\"text-sm text-blue-800\">Doanh thu trong tháng:</p>\n                    <p className=\"text-lg font-bold text-blue-900\">{revenueData.monthlyRevenue?.toLocaleString('vi-VN') || '0'} đ</p>\n                  </div>\n                )}\n                {revenueData.yearlyRevenue !== undefined && (\n                  <div>\n                    <p className=\"text-sm text-blue-800\">Doanh thu trong năm:</p>\n                    <p className=\"text-lg font-bold text-blue-900\">{revenueData.yearlyRevenue?.toLocaleString('vi-VN') || '0'} đ</p>\n                  </div>\n                )}\n              </div>\n              \n              {/* Chi tiết các loại thuốc đóng góp vào doanh thu */}\n              {revenueData.medicines && revenueData.medicines.length > 0 && (\n                <div className=\"mt-4 pt-4 border-t border-blue-200\">\n                  <p className=\"text-sm font-medium text-blue-800 mb-2\">Phân tích chi tiết:</p>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-2\">\n                    {revenueData.medicines.map((med: any, idx: number) => (\n                      <div key={idx} className=\"text-xs bg-white p-2 rounded border border-blue-100 flex justify-between\">\n                        <span className=\"text-gray-700\">{med.name} <span className=\"text-gray-500\">({med.quantity} x {med.price?.toLocaleString('vi-VN')}đ)</span></span>\n                        <span className=\"font-medium text-blue-700\">{med.total?.toLocaleString('vi-VN')}đ</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n          \n          {isLoadingRevenue && (\n            <div className=\"mb-8 p-4 border border-blue-100 rounded-lg bg-blue-50\">\n              <div className=\"flex items-center justify-center\">\n                <span className=\"animate-spin h-5 w-5 border-2 border-blue-600 border-t-transparent rounded-full mr-2\"></span>\n                <p className=\"text-blue-600\">Đang tính toán doanh thu...</p>\n              </div>\n            </div>\n          )}\n          \n          <div className=\"grid grid-cols-2 gap-4 mt-8\">\n            <div className=\"text-center\">\n              <p className=\"font-medium text-black\">Người lập phiếu</p>\n              <p className=\"text-black text-sm\">(Ký, ghi rõ họ tên)</p>\n              <div className=\"h-16\"></div>\n              <p className=\"text-black\">{pharmacistName}</p>\n            </div>\n            <div className=\"text-center\">\n              <p className=\"font-medium text-black\">Người nhận thuốc</p>\n              <p className=\"text-black text-sm\">(Ký, ghi rõ họ tên)</p>\n              <div className=\"h-16\"></div>\n              <p className=\"text-black\">{patient.fullName}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1588, "column": 0}, "map": {"version":3,"sources":["file:///D:/%C4%90%E1%BB%93%20%C3%A1n%20A/hospitality-website-main/hospitality-website-main/my-app/src/app/datats/mockPatients.ts"],"sourcesContent":["// Dữ liệu được fetched từ API thay vì dùng static data\nimport axiosInstance from '../services/axios.customize.service';\n\n// Khai báo các interface\nexport interface User {\n  _id: string;\n  userId: string;\n  username: string;\n  email: string;\n  password: string;\n  fullName: string;\n  phone: string;\n  role: 'PATIENT' | 'DOCTOR' | 'PHARMACIST' | 'RECEPTIONIST' | 'ADMIN';\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n}\n\nexport interface Queue {\n  _id: string;\n  patient: string; // ObjectId của bệnh nhân\n  status: 'waiting' | 'in_progress' | 'completed' | 'canceled';\n  doctorId?: string; // ObjectId của bác sĩ được chỉ định (nếu có)\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n}\n\nexport interface Prescription {\n  _id: string;\n  customPrescriptionId: string;\n  patientId: string; // ObjectId\n  doctorId: string; // ObjectId\n  diagnosis: string;\n  date: string;\n  status: 'PENDING_DISPENSE' | 'DISPENSED' | 'CANCELED';\n  __v: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PrescriptionDetail {\n  _id: string;\n  customPrescriptionDetailId: string;\n  prescriptionId: string; // ObjectId\n  medicineId: string; // ObjectId\n  quantity: number;\n  dosage: string;\n  __v: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Medicine {\n  _id: string;\n  customMedicineId: string;\n  name: string;\n  totalPills: number;\n  price: number;\n  __v: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Invoice {\n  _id: string;\n  prescriptionId: string; // ObjectId\n  patientId: string; // ObjectId\n  totalAmount: number;\n  status: 'PAID' | 'UNPAID';\n  __v: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\n// Biến cache để lưu trữ dữ liệu từ API\nexport let mockUsers: User[] = [];\nexport let mockQueues: Queue[] = [];\nexport let mockMedicines: Medicine[] = [];\nexport let mockPrescriptions: Prescription[] = [];\nexport let mockPrescriptionDetails: PrescriptionDetail[] = [];\nexport let mockInvoices: Invoice[] = [];\n\n// Biến toàn cục để lưu token xác thực\nlet authToken: string | null = null;\n\n// Hàm thiết lập token khi người dùng đăng nhập\nexport const setAuthToken = (token: string) => {\n  authToken = token;\n  if (typeof window !== 'undefined') { // Kiểm tra nếu đang chạy trên browser\n    localStorage.setItem('authToken', token); // Lưu token vào localStorage để giữ qua refresh\n  }\n};\n\n// Hàm để lấy token hiện tại\nexport const getAuthToken = () => {\n  // Nếu không có token trong memory, thử lấy từ localStorage\n  if (!authToken && typeof window !== 'undefined') {\n    authToken = localStorage.getItem('authToken');\n  }\n  return authToken;\n};\n\n// Helper function để thực hiện API call có xác thực\nconst authenticatedGet = async (endpoint: string) => {\n  try {\n    // Lấy token từ localStorage hoặc cookies\n    let token = getAuthToken();\n    \n    // Thử lấy token từ cookies nếu không tìm thấy trong localStorage\n    if (!token && typeof document !== 'undefined') {\n      // Check browser cookies if localStorage doesn't have the token\n      const cookies = document.cookie.split(';');\n      const tokenCookie = cookies.find(c => c.trim().startsWith('token='));\n      if (tokenCookie) {\n        token = tokenCookie.split('=')[1];\n        console.log(\"Found token in cookies, using it for API calls\");\n        // Lưu lại vào authToken để sử dụng cho các lần sau\n        setAuthToken(token);\n      }\n    }\n    \n    if (!token) {\n      console.warn('No authentication token available for API call to:', endpoint);\n      console.warn('Please login first or check token storage.');\n      return null;\n    }\n\n    console.log(`Making authenticated request to ${endpoint}`);\n    console.log(`Using token (first 10 chars): ${token.substring(0, 10)}...`);\n\n    const response = await axiosInstance.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    \n    console.log(`Successful response from ${endpoint}:`, response.status);\n    if (Array.isArray(response.data)) {\n      console.log(`Got ${response.data.length} items from ${endpoint}`);\n    } else {\n      console.log(`Got data from ${endpoint}:`, response.data ? 'Object returned' : 'Empty response');\n    }\n    return response.data;\n  } catch (error: any) {\n    console.error(`Error fetching from ${endpoint}:`, error.message);\n    \n    // Log more detailed error info\n    if (error.response) {\n      console.error('Response status:', error.response.status);\n      console.error('Response data:', error.response.data);\n      \n      if (error.response.status === 403) {\n        console.error(`Access forbidden to ${endpoint} - check user permissions`);\n      } else if (error.response.status === 401) {\n        console.error(`Unauthorized access to ${endpoint} - token may be expired`);\n        // Thử xóa token để người dùng phải đăng nhập lại\n        if (typeof window !== 'undefined') {\n          localStorage.removeItem('authToken');\n          document.cookie = 'token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n          authToken = null;\n        }\n      }\n    } else if (error.request) {\n      console.error('No response received from request. Server may be down.');\n    } else {\n      console.error('Error setting up request:', error.message);\n    }\n    \n    return null;\n  }\n};\n\n// ============= FETCH DATA FUNCTIONS =============\n\n// Load users từ API\nexport const fetchUsers = async () => {\n  console.log('Fetching users from API...');\n  \n  // Đầu tiên thử lấy thông tin user hiện tại để biết role\n  try {\n    const currentUser = await authenticatedGet('/users/me');\n    \n    if (currentUser) {\n      console.log(`Current user role: ${currentUser.role}`);\n      \n      if (currentUser.role === 'ADMIN') {\n        // Nếu là ADMIN, có quyền lấy tất cả users\n        console.log('User is ADMIN, trying to fetch all users');\n        const data = await authenticatedGet('/users');\n        \n        if (data && Array.isArray(data)) {\n          console.log(`Successfully fetched ${data.length} users from API`);\n          mockUsers = data;\n          return data;\n        }\n      } \n      \n      // Dù là role nào, thử dùng endpoint mới để lấy danh sách bệnh nhân\n      if (['ADMIN', 'DOCTOR', 'PHARMACIST', 'RECEPTIONIST'].includes(currentUser.role)) {\n        console.log(`Trying to fetch patients using /users/patients endpoint for ${currentUser.role}`);\n        const patients = await authenticatedGet('/users/patients');\n        \n        if (patients && Array.isArray(patients)) {\n          console.log(`Successfully fetched ${patients.length} patients from API`);\n          \n          // Kết hợp với dữ liệu hiện có (nếu có)\n          // Giữ lại các user không phải bệnh nhân từ danh sách hiện có (nếu có)\n          const nonPatients = mockUsers.filter(user => user.role !== 'PATIENT');\n          mockUsers = [...nonPatients, ...patients];\n          \n          console.log(`Combined user data: ${mockUsers.length} users (${nonPatients.length} non-patients + ${patients.length} patients)`);\n          return mockUsers;\n        }\n      }\n      \n      // Nếu không thể lấy dữ liệu, giữ nguyên dữ liệu mockUsers hiện tại\n      console.log(`Using existing mock data with ${mockUsers.length} users`);\n      return [...mockUsers];\n    } else {\n      console.error('Could not fetch current user info, authentication may be invalid');\n      return mockUsers;\n    }\n  } catch (error) {\n    console.error('Error in fetchUsers:', error);\n    return mockUsers;\n  }\n};\n\n// Load queues từ API\nexport const fetchQueues = async () => {\n  const data = await authenticatedGet('/queues');\n  if (data && Array.isArray(data)) {\n    mockQueues = data;\n    return data;\n  }\n  return [];\n};\n\n// Load medicines từ API\nexport const fetchMedicines = async () => {\n  const data = await authenticatedGet('/medicines');\n  if (data && Array.isArray(data)) {\n    mockMedicines = data;\n    return data;\n  }\n  return [];\n};\n\n// Load prescriptions từ API\nexport const fetchPrescriptions = async () => {\n  const data = await authenticatedGet('/prescriptions');\n  if (data && Array.isArray(data)) {\n    mockPrescriptions = data;\n    return data;\n  }\n  return [];\n};\n\n// Load prescription details từ API\nexport const fetchPrescriptionDetails = async () => {\n  const data = await authenticatedGet('/prescription-details');\n  if (data && Array.isArray(data)) {\n    mockPrescriptionDetails = data;\n    return data;\n  }\n  return [];\n};\n\n// Load invoices từ API\nexport const fetchInvoices = async () => {\n  const data = await authenticatedGet('/invoices');\n  if (data && Array.isArray(data)) {\n    mockInvoices = data;\n    return data;\n  }\n  return [];\n};\n\n// Initialize all data (call when app starts)\nexport const initializeData = async () => {\n  console.log('Initializing data from API or mock sources...');\n  \n  try {\n    // Check if we have a valid token first\n    const token = getAuthToken();\n    if (!token) {\n      console.warn('No authentication token found, will use existing mock data');\n      return false;\n    }\n    \n    // Try to validate token\n    try {\n      console.log('Validating token before fetching data...');\n      const currentUser = await authenticatedGet('/users/me');\n      if (!currentUser) {\n        console.error('Token validation failed, cannot fetch data');\n        return false;\n      }\n      console.log(`Token valid, logged in as ${currentUser.username} (${currentUser.role})`);\n    } catch (error) {\n      console.error('Error validating token:', error);\n      return false;\n    }\n    \n    // Initialize with separate try/catch for each resource type\n    // This allows some data to load even if others fail\n    const results = {\n      users: false,\n      queues: false,\n      medicines: false,\n      prescriptions: false,\n      prescriptionDetails: false,\n      invoices: false\n    };\n    \n    try {\n      await fetchUsers();\n      results.users = true;\n      console.log(`Users loaded: ${mockUsers.length} items`);\n    } catch (error) {\n      console.error('Error loading users:', error);\n    }\n    \n    try {\n      await fetchQueues();\n      results.queues = true;\n      console.log(`Queues loaded: ${mockQueues.length} items`);\n    } catch (error) {\n      console.error('Error loading queues:', error);\n    }\n    \n    try {\n      await fetchMedicines();\n      results.medicines = true;\n      console.log(`Medicines loaded: ${mockMedicines.length} items`);\n    } catch (error) {\n      console.error('Error loading medicines:', error);\n    }\n    \n    try {\n      await fetchPrescriptions();\n      results.prescriptions = true;\n      console.log(`Prescriptions loaded: ${mockPrescriptions.length} items`);\n    } catch (error) {\n      console.error('Error loading prescriptions:', error);\n    }\n    \n    try {\n      await fetchPrescriptionDetails();\n      results.prescriptionDetails = true;\n      console.log(`Prescription details loaded: ${mockPrescriptionDetails.length} items`);\n    } catch (error) {\n      console.error('Error loading prescription details:', error);\n    }\n    \n    try {\n      await fetchInvoices();\n      results.invoices = true;\n      console.log(`Invoices loaded: ${mockInvoices.length} items`);\n    } catch (error) {\n      console.error('Error loading invoices:', error);\n    }\n    \n    const successCount = Object.values(results).filter(Boolean).length;\n    console.log(`Data initialization complete: ${successCount}/6 resource types loaded successfully`);\n    \n    return successCount > 0;\n  } catch (error) {\n    console.error('Error in data initialization:', error);\n    return false;\n  }\n};\n\n// ============= USER-RELATED FUNCTIONS =============\n\nexport const getAllUsers = async () => {\n  if (mockUsers.length === 0) {\n    await fetchUsers();\n  }\n  return [...mockUsers];\n};\n\nexport const getUserById = async (id: string) => {\n  if (mockUsers.length === 0) {\n    await fetchUsers();\n  }\n  return mockUsers.find(user => user._id === id);\n};\n\nexport const getUsersByRole = async (role: string) => {\n  if (mockUsers.length === 0) {\n    await fetchUsers();\n  }\n  return mockUsers.filter(user => user.role === role);\n};\n\nexport const searchUsers = async (searchTerm: string) => {\n  if (mockUsers.length === 0) {\n    await fetchUsers();\n  }\n  const term = searchTerm.toLowerCase();\n  return mockUsers.filter(user => \n    user.fullName.toLowerCase().includes(term) || \n    user.username.toLowerCase().includes(term) ||\n    user.email.toLowerCase().includes(term) ||\n    user.phone.includes(term) ||\n    user.userId.includes(term)\n  );\n};\n\n// ============= QUEUE-RELATED FUNCTIONS =============\n\nexport const getAllQueues = async () => {\n  if (mockQueues.length === 0) {\n    await fetchQueues();\n  }\n  return [...mockQueues];\n};\n\nexport const getQueuesByStatus = async (status: string) => {\n  if (mockQueues.length === 0) {\n    await fetchQueues();\n  }\n  return mockQueues.filter(queue => queue.status === status);\n};\n\nexport const getQueueByPatientId = async (patientId: string) => {\n  if (mockQueues.length === 0) {\n    await fetchQueues();\n  }\n  return mockQueues.find(queue => queue.patient === patientId);\n};\n\nexport const addQueue = async (patientId: string, status: 'waiting' | 'in_progress' | 'completed' | 'canceled' = 'waiting') => {\n  // Kiểm tra xem patientId có tồn tại và là bệnh nhân không\n  const patient = await getUserById(patientId);\n  if (!patient || patient.role !== 'PATIENT') {\n    console.error('Invalid patient ID or user is not a patient');\n    return null;\n  }\n\n  // Kiểm tra xem bệnh nhân đã có trong queue chưa\n  const existingQueue = await getQueueByPatientId(patientId);\n  if (existingQueue) {\n    console.warn('Patient already in queue');\n    return existingQueue;\n  }\n\n  // Tạo queue mới\n  const newQueue: Queue = {\n    _id: generateMongoId(),\n    patient: patientId,\n    status: status,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n    __v: 0\n  };\n\n  // Gọi API để tạo queue thực sự qua API\n  try {\n    // Đây là phần sẽ gọi API thực tế\n    // const response = await axiosInstance.post('/queues', newQueue, {\n    //   headers: { Authorization: `Bearer ${getAuthToken()}` }\n    // });\n    // if (response.data) {\n    //   mockQueues.push(response.data);\n    //   return response.data;\n    // }\n    \n    // Hiện tại, chúng ta chỉ thêm vào cache\n    mockQueues.push(newQueue);\n    return newQueue;\n  } catch (error) {\n    console.error('Error creating queue:', error);\n    return null;\n  }\n};\n\nexport const updateQueueStatus = async (\n  queueId: string, \n  status: 'waiting' | 'in_progress' | 'completed' | 'canceled', \n  doctorId?: string\n) => {\n  if (mockQueues.length === 0) {\n    await fetchQueues();\n  }\n  \n  const index = mockQueues.findIndex(queue => queue._id === queueId);\n  if (index !== -1) {\n    const updatedQueue = {\n      ...mockQueues[index],\n      status: status,\n      updatedAt: new Date().toISOString()\n    };\n    \n    if (doctorId && status === 'in_progress') {\n      updatedQueue.doctorId = doctorId;\n    }\n    \n    // Thực tế sẽ gọi API để cập nhật queue\n    // const response = await axiosInstance.put(`/queues/${queueId}`, updatedQueue, {\n    //   headers: { Authorization: `Bearer ${getAuthToken()}` }\n    // });\n    \n    // Hiện tại chỉ cập nhật trong cache\n    mockQueues[index] = updatedQueue;\n    return mockQueues[index];\n  }\n  return null;\n};\n\nexport const deleteQueue = async (queueId: string) => {\n  if (mockQueues.length === 0) {\n    await fetchQueues();\n  }\n  \n  const index = mockQueues.findIndex(queue => queue._id === queueId);\n  if (index !== -1) {\n    const deletedQueue = mockQueues[index];\n    \n    // Thực tế sẽ gọi API để xóa queue\n    // await axiosInstance.delete(`/queues/${queueId}`, {\n    //   headers: { Authorization: `Bearer ${getAuthToken()}` }\n    // });\n    \n    // Hiện tại chỉ xóa trong cache\n    mockQueues.splice(index, 1);\n    return deletedQueue;\n  }\n  return null;\n};\n\n// ============= MEDICINE-RELATED FUNCTIONS =============\n\nexport const getAllMedicines = async () => {\n  if (mockMedicines.length === 0) {\n    await fetchMedicines();\n  }\n  return [...mockMedicines];\n};\n\nexport const getMedicineById = async (id: string) => {\n  if (mockMedicines.length === 0) {\n    await fetchMedicines();\n  }\n  return mockMedicines.find(medicine => medicine._id === id);\n};\n\nexport const searchMedicines = async (searchTerm: string) => {\n  if (mockMedicines.length === 0) {\n    await fetchMedicines();\n  }\n  const term = searchTerm.toLowerCase();\n  return mockMedicines.filter(medicine => \n    medicine.name.toLowerCase().includes(term) || \n    medicine.customMedicineId.toLowerCase().includes(term)\n  );\n};\n\n// ============= PRESCRIPTION-RELATED FUNCTIONS =============\n\nexport const getAllPrescriptions = async () => {\n  if (mockPrescriptions.length === 0) {\n    await fetchPrescriptions();\n  }\n  return [...mockPrescriptions];\n};\n\nexport const getPrescriptionById = async (id: string) => {\n  if (mockPrescriptions.length === 0) {\n    await fetchPrescriptions();\n  }\n  return mockPrescriptions.find(prescription => prescription._id === id);\n};\n\nexport const getPrescriptionsByPatientId = async (patientId: string) => {\n  if (mockPrescriptions.length === 0) {\n    await fetchPrescriptions();\n  }\n  return mockPrescriptions.filter(prescription => prescription.patientId === patientId);\n};\n\nexport const getPrescriptionsByDoctorId = async (doctorId: string) => {\n  if (mockPrescriptions.length === 0) {\n    await fetchPrescriptions();\n  }\n  return mockPrescriptions.filter(prescription => prescription.doctorId === doctorId);\n};\n\nexport const getPrescriptionsByStatus = async (status: string) => {\n  if (mockPrescriptions.length === 0) {\n    await fetchPrescriptions();\n  }\n  return mockPrescriptions.filter(prescription => prescription.status === status);\n};\n\n// ============= PRESCRIPTION DETAIL-RELATED FUNCTIONS =============\n\nexport const getAllPrescriptionDetails = async () => {\n  if (mockPrescriptionDetails.length === 0) {\n    await fetchPrescriptionDetails();\n  }\n  return [...mockPrescriptionDetails];\n};\n\nexport const getPrescriptionDetailsByPrescriptionId = async (prescriptionId: string) => {\n  if (mockPrescriptionDetails.length === 0) {\n    await fetchPrescriptionDetails();\n  }\n  return mockPrescriptionDetails.filter(detail => detail.prescriptionId === prescriptionId);\n};\n\nexport const getMedicinesForPrescription = async (prescriptionId: string) => {\n  const details = await getPrescriptionDetailsByPrescriptionId(prescriptionId);\n  \n  const result = [];\n  for (const detail of details) {\n    const medicine = await getMedicineById(detail.medicineId);\n    result.push({\n      ...detail,\n      medicine: medicine || null\n    });\n  }\n  \n  return result;\n};\n\n// ============= INVOICE-RELATED FUNCTIONS =============\n\nexport const getAllInvoices = async () => {\n  if (mockInvoices.length === 0) {\n    await fetchInvoices();\n  }\n  return [...mockInvoices];\n};\n\nexport const getInvoiceById = async (id: string) => {\n  if (mockInvoices.length === 0) {\n    await fetchInvoices();\n  }\n  return mockInvoices.find(invoice => invoice._id === id);\n};\n\nexport const getInvoiceByPrescriptionId = async (prescriptionId: string) => {\n  if (mockInvoices.length === 0) {\n    await fetchInvoices();\n  }\n  return mockInvoices.find(invoice => invoice.prescriptionId === prescriptionId);\n};\n\nexport const getInvoicesByPatientId = async (patientId: string) => {\n  if (mockInvoices.length === 0) {\n    await fetchInvoices();\n  }\n  return mockInvoices.filter(invoice => invoice.patientId === patientId);\n};\n\nexport const getInvoicesByStatus = async (status: string) => {\n  if (mockInvoices.length === 0) {\n    await fetchInvoices();\n  }\n  return mockInvoices.filter(invoice => invoice.status === status);\n};\n\n// ============= UTILITY FUNCTIONS =============\n\nexport const getPatientFullPrescriptionDetails = async (patientId: string) => {\n  const prescriptions = await getPrescriptionsByPatientId(patientId);\n  \n  const result = [];\n  for (const prescription of prescriptions) {\n    // Lấy thông tin bác sĩ\n    const doctor = await getUserById(prescription.doctorId);\n    \n    // Lấy chi tiết đơn thuốc và thông tin thuốc\n    const details = await getPrescriptionDetailsByPrescriptionId(prescription._id);\n    const medicineDetails = [];\n    \n    for (const detail of details) {\n      const medicine = await getMedicineById(detail.medicineId);\n      medicineDetails.push({\n        ...detail,\n        medicineName: medicine ? medicine.name : 'Unknown',\n        medicinePrice: medicine ? medicine.price : 0\n      });\n    }\n    \n    // Lấy hóa đơn nếu có\n    const invoice = await getInvoiceByPrescriptionId(prescription._id);\n    \n    result.push({\n      ...prescription,\n      doctorName: doctor ? doctor.fullName : 'Unknown',\n      details: medicineDetails,\n      invoice: invoice || null\n    });\n  }\n  \n  return result;\n};\n\nexport const getAllPatients = async () => {\n  if (mockUsers.length === 0) {\n    await fetchUsers();\n  }\n  return mockUsers.filter(user => user.role === 'PATIENT');\n};\n\nexport const getAllDoctors = async () => {\n  if (mockUsers.length === 0) {\n    await fetchUsers();\n  }\n  return mockUsers.filter(user => user.role === 'DOCTOR');\n};\n\nexport type Patient = User;\nexport const mockPatients = getAllPatients;\n\nexport const getWaitingPatients = async () => {\n  const waitingQueues = await getQueuesByStatus('waiting');\n  \n  const result = [];\n  for (const queue of waitingQueues) {\n    const patient = await getUserById(queue.patient);\n    result.push({\n      queueInfo: queue,\n      patientInfo: patient || null\n    });\n  }\n  \n  return result;\n};\n\nexport const getAllQueuesWithPatientInfo = async () => {\n  if (mockQueues.length === 0) {\n    await fetchQueues();\n  }\n  \n  const result = [];\n  for (const queue of mockQueues) {\n    const patient = await getUserById(queue.patient);\n    result.push({\n      ...queue,\n      patientInfo: patient || null\n    });\n  }\n  \n  return result;\n};\n\n// Hàm tạo MongoDB-like ID\nexport const generateMongoId = () => {\n  // MongoDB ObjectId format: 24 hex characters\n  const timestamp = Math.floor(Date.now() / 1000).toString(16).padStart(8, '0');\n  const randomPart = Array(16).fill(0).map(() => Math.floor(Math.random() * 16).toString(16)).join('');\n  return timestamp + randomPart;\n};\n\n// Hàm để làm mới/reload dữ liệu từ API\nexport const reloadData = async (dataTypes?: ('users' | 'queues' | 'medicines' | 'prescriptions' | 'prescriptionDetails' | 'invoices')[]) => {\n  if (!dataTypes || dataTypes.length === 0) {\n    // Reload tất cả\n    return await initializeData();\n  }\n\n  const promises = [];\n  if (dataTypes.includes('users')) promises.push(fetchUsers());\n  if (dataTypes.includes('queues')) promises.push(fetchQueues());\n  if (dataTypes.includes('medicines')) promises.push(fetchMedicines());\n  if (dataTypes.includes('prescriptions')) promises.push(fetchPrescriptions());\n  if (dataTypes.includes('prescriptionDetails')) promises.push(fetchPrescriptionDetails());\n  if (dataTypes.includes('invoices')) promises.push(fetchInvoices());\n  \n  await Promise.all(promises);\n  return {\n    users: mockUsers.length,\n    queues: mockQueues.length,\n    medicines: mockMedicines.length,\n    prescriptions: mockPrescriptions.length,\n    prescriptionDetails: mockPrescriptionDetails.length,\n    invoices: mockInvoices.length\n  };\n};\n\n// Hàm thay thế để lấy dữ liệu khi không có quyền admin\nexport const fetchUsersAlternative = async () => {\n  console.log('Trying alternative method to fetch users...');\n  \n  try {\n    // Thử lấy thông tin người dùng hiện tại (me endpoint)\n    const currentUser = await authenticatedGet('/users/me');\n    if (!currentUser) {\n      console.warn('Could not fetch current user');\n      return [];\n    }\n    \n    console.log('Current user retrieved:', currentUser.role);\n    \n    if (currentUser.role === 'ADMIN') {\n      // Nếu là admin, thử lại với endpoint /users\n      return await fetchUsers();\n    }\n    \n    // Không phải admin, phải dùng cách khác\n    // 1. Nếu là bác sĩ, có thể lấy danh sách bệnh nhân được chỉ định\n    // 2. Nếu là receptionist, thử lấy dữ liệu theo cách khác\n    \n    // Endpoint hoặc API call thích hợp theo role\n    // Ví dụ: const patients = await authenticatedGet('/appointments/patients');\n    \n    // Tạm thời giữ nguyên dữ liệu hiện tại nếu có\n    return mockUsers.length > 0 ? mockUsers : [];\n  } catch (error) {\n    console.error('Alternative user fetch failed:', error);\n    return [];\n  }\n};\n\n// Mock function để gửi thông tin queue đến bác sĩ\nexport const sendQueueToDoctor = async (queueId: string): Promise<Queue | null> => {\n  try {\n    // Lấy thông tin queue\n    const queue = mockQueues.find(q => q._id === queueId);\n    \n    if (!queue) {\n      console.error(`Queue with ID ${queueId} not found.`);\n      return null;\n    }\n    \n    // Kiểm tra xem queue đã được gán cho bác sĩ chưa\n    if (!queue.doctorId) {\n      console.error(`Queue ${queueId} has no assigned doctor.`);\n      return null;\n    }\n    \n    // Trong môi trường thực tế, tại đây sẽ có logic gửi thông báo đến bác sĩ\n    // Trong mock data, ta chỉ cần đảm bảo trạng thái là in_progress\n    if (queue.status !== 'in_progress') {\n      queue.status = 'in_progress';\n      queue.updatedAt = new Date().toISOString();\n    }\n    \n    console.log(`Mock: Queue ${queueId} information sent to doctor ${queue.doctorId}`);\n    return queue;\n  } catch (error) {\n    console.error('Error sending queue information to doctor:', error);\n    throw error;\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2297, "column": 0}, "map": {"version":3,"sources":["file:///D:/%C4%90%E1%BB%93%20%C3%A1n%20A/hospitality-website-main/hospitality-website-main/my-app/src/app/pharmacyPage/pharmacyUtils.ts"],"sourcesContent":["import { \n  User, \n  Prescription, \n  PrescriptionDetail, \n  Medicine,\n  getPrescriptionsByStatus,\n  getUserById,\n  getPrescriptionDetailsByPrescriptionId,\n  getMedicineById,\n  getAllInvoices,\n  initializeData\n} from '../datats/mockPatients';\nimport * as apiService from '../services/api.service';\n\n// Type definitions to match the pharmacy page UI needs\nexport interface PharmacyPatient {\n  id: string; // Prescription ID\n  serialNumber: string;\n  fullName: string;\n  phone: string;\n  diagnosis: string;\n  doctor: string;\n  prescription: PharmacyMedicine[];\n}\n\nexport interface PharmacyMedicine {\n  name: string;\n  quantity: number;\n  dosage: string;\n  price: number;\n}\n\nexport interface PharmacyInvoice {\n  id: string;\n  date: string;\n  patientId: string;\n  pharmacistName: string;\n  totalAmount: number;\n}\n\n// Helper function to extract medicine ID properly\nconst extractMedicineId = (medicineId: any): string => {\n  if (typeof medicineId === 'object' && medicineId !== null) {\n    return medicineId._id || medicineId.id || '';\n  }\n  return medicineId || '';\n};\n\n// Function to get patients with pending prescriptions for the pharmacy\nexport const getPatientsWithPendingPrescriptions = async (): Promise<PharmacyPatient[]> => {\n  try {\n    // Try to get authentication token from localStorage\n    const tokenFromStorage = localStorage.getItem('token');\n    \n    if (tokenFromStorage) {\n      try {\n        console.log('Fetching pending prescriptions with status PENDING_DISPENSE from API');\n        // If we have a token, try to use the real API\n        const prescriptions = await apiService.getPrescriptions({ status: 'PENDING_DISPENSE' }, tokenFromStorage);\n        console.log(`Fetched ${prescriptions.length} prescriptions with status PENDING_DISPENSE`);\n        \n        const result: PharmacyPatient[] = [];\n        \n        for (const prescription of prescriptions) {\n          // The API already populates patientId and doctorId\n          const patient = prescription.patientId;\n          const doctor = prescription.doctorId;\n          \n          if (!patient || !doctor) {\n            console.warn(`Prescription ${prescription._id} is missing patient or doctor data, skipping`);\n            continue;\n          }\n          \n          try {\n            // Get prescription details\n            console.log(`Fetching prescription details for prescription ID: ${prescription._id}`);\n            const prescriptionDetails = await apiService.getPrescriptionDetails(prescription._id, tokenFromStorage);\n            console.log(`Fetched ${prescriptionDetails.length} prescription details`);\n            \n            // Map prescription details to medicines\n            const medicines: PharmacyMedicine[] = [];\n            \n            for (const detail of prescriptionDetails) {\n              // We need to get medicine details for each prescription detail\n              try {\n                // Extract medicine ID properly\n                const medicineId = extractMedicineId(detail.medicineId);\n                console.log(`Getting medicine details for ID: ${medicineId}`);\n                \n                const medicine = await apiService.getMedicineById(medicineId, tokenFromStorage);\n                medicines.push({\n                  name: medicine?.name || 'Unknown',\n                  quantity: detail.quantity,\n                  dosage: detail.dosage,\n                  price: medicine?.price || 0\n                });\n              } catch (medError) {\n                console.warn(`Error fetching medicine from API, falling back to mock data:`, medError);\n                // If we can't get the medicine from API, use mock data\n                // Extract medicine ID properly for mock data too\n                const medicineId = extractMedicineId(detail.medicineId);\n                const mockMedicine = await getMedicineById(medicineId);\n                medicines.push({\n                  name: mockMedicine?.name || 'Unknown',\n                  quantity: detail.quantity,\n                  dosage: detail.dosage,\n                  price: mockMedicine?.price || 0\n                });\n              }\n            }\n            \n            result.push({\n              id: prescription._id,\n              serialNumber: prescription.customPrescriptionId,\n              fullName: patient?.fullName || 'Unknown',\n              phone: patient?.phone || 'N/A',\n              diagnosis: prescription.diagnosis,\n              doctor: doctor?.fullName || 'Không xác định',\n              prescription: medicines\n            });\n          } catch (detailsError) {\n            console.error(`Error fetching prescription details for prescription ${prescription._id}:`, detailsError);\n          }\n        }\n        \n        console.log(`Prepared ${result.length} pharmacy patients with their prescription details`);\n        return result;\n      } catch (apiError) {\n        console.error(\"API error, falling back to mock data:\", apiError);\n        // Fall back to mock data if API fails\n        return fetchMockPendingPrescriptions();\n      }\n    } else {\n      console.log(\"No authentication token found, using mock data\");\n      // If no token, use mock data\n      return fetchMockPendingPrescriptions();\n    }\n  } catch (error) {\n    console.error(\"Error fetching pending prescriptions:\", error);\n    return [];\n  }\n};\n\n// Separate function for fetching mock data\nconst fetchMockPendingPrescriptions = async (): Promise<PharmacyPatient[]> => {\n  console.log('Fetching pending prescriptions from mock data');\n  // Initialize mock data if needed\n  await initializeData();\n  \n  const pendingPrescriptions = await getPrescriptionsByStatus('PENDING_DISPENSE');\n  console.log(`Fetched ${pendingPrescriptions.length} mock prescriptions with status PENDING_DISPENSE`);\n  \n  const result: PharmacyPatient[] = [];\n  \n  for (const prescription of pendingPrescriptions) {\n    try {\n      // Get patient details\n      const patient = await getUserById(prescription.patientId);\n      if (!patient) {\n        console.warn(`Mock patient with ID ${prescription.patientId} not found for prescription ${prescription._id}`);\n        continue;\n      }\n      \n      // Get doctor details\n      const doctor = await getUserById(prescription.doctorId);\n      if (!doctor) {\n        console.warn(`Mock doctor with ID ${prescription.doctorId} not found for prescription ${prescription._id}`);\n        continue;\n      }\n      \n      // Get prescription details\n      const prescriptionDetails = await getPrescriptionDetailsByPrescriptionId(prescription._id);\n      console.log(`Found ${prescriptionDetails.length} mock prescription details for prescription ${prescription._id}`);\n      \n      // Map prescription details to medicines\n      const medicines: PharmacyMedicine[] = [];\n      \n      for (const detail of prescriptionDetails) {\n        try {\n          // Extract medicine ID properly\n          const medicineId = extractMedicineId(detail.medicineId);\n          console.log(`Getting mock medicine details for ID: ${medicineId}`);\n          \n          const medicine = await getMedicineById(medicineId);\n          if (!medicine) {\n            console.warn(`Mock medicine with ID ${medicineId} not found`);\n            medicines.push({\n              name: 'Unknown Medicine',\n              quantity: detail.quantity,\n              dosage: detail.dosage,\n              price: 0\n            });\n            continue;\n          }\n          \n          medicines.push({\n            name: medicine.name,\n            quantity: detail.quantity,\n            dosage: detail.dosage,\n            price: medicine.price\n          });\n        } catch (medError) {\n          console.error(`Error processing mock medicine:`, medError);\n          medicines.push({\n            name: 'Error Loading Medicine',\n            quantity: detail.quantity,\n            dosage: detail.dosage,\n            price: 0\n          });\n        }\n      }\n      \n      result.push({\n        id: prescription._id,\n        serialNumber: prescription.customPrescriptionId,\n        fullName: patient.fullName,\n        phone: patient.phone || 'N/A',\n        diagnosis: prescription.diagnosis,\n        doctor: doctor.fullName || 'Không xác định',\n        prescription: medicines\n      });\n    } catch (error) {\n      console.error(`Error processing mock prescription ${prescription._id}:`, error);\n    }\n  }\n  \n  console.log(`Prepared ${result.length} pharmacy patients from mock data`);\n  return result;\n};\n\n// Function to get pharmacy invoice data\nexport const getPharmacyInvoices = async (): Promise<PharmacyInvoice[]> => {\n  try {\n    const invoices = await getAllInvoices();\n    const result: PharmacyInvoice[] = [];\n    \n    for (const invoice of invoices) {\n      // Get pharmacist information (default to a specific ID if needed)\n      const pharmacist = await getUserById('685face13fc4c04e1bd96c0a'); // Default pharmacist ID\n      \n      // Return formatted invoice data\n      result.push({\n        id: invoice._id,\n        date: invoice.createdAt, // Use createdAt as the invoice date\n        patientId: invoice.patientId,\n        pharmacistName: pharmacist?.fullName || 'Nhân viên phát thuốc',\n        totalAmount: invoice.totalAmount\n      });\n    }\n    \n    return result;\n  } catch (error) {\n    console.error(\"Error fetching pharmacy invoices:\", error);\n    return [];\n  }\n};\n\n// Function to get daily revenue data for statistics\nexport const getDailyRevenue = async () => {\n  try {\n    const today = new Date();\n    const result = [];\n    \n    // Try to get authentication token from localStorage\n    const tokenFromStorage = localStorage.getItem('token');\n    \n    if (tokenFromStorage) {\n      console.log('Using API to get daily revenue data');\n      \n      try {\n        // Get data for the last 7 days using API\n        for (let i = 0; i < 7; i++) {\n          const date = new Date(today);\n          date.setDate(today.getDate() - i);\n          const dateString = date.toISOString().split('T')[0];\n          \n          // Get start and end of the day\n          const startDate = dateString;\n          const endDate = dateString;\n          \n          // Use API to get revenue for this day\n          const dailyData = await apiService.calculateRevenue(tokenFromStorage, startDate, endDate);\n          \n          result.push({\n            date: dateString,\n            amount: dailyData.totalAmount || 0\n          });\n        }\n      } catch (apiError) {\n        console.error('Error fetching daily revenue from API, falling back to mock data:', apiError);\n        // Fall back to mock data if API fails\n        return getDailyRevenueMock();\n      }\n    } else {\n      console.log('No auth token, using mock data for daily revenue');\n      // No token, use mock data\n      return getDailyRevenueMock();\n    }\n    \n    // Sort by date ascending for easier chart rendering\n    return result.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n  } catch (error) {\n    console.error(\"Error getting daily revenue:\", error);\n    return [];\n  }\n};\n\n// Mock function for daily revenue when API is not available\nconst getDailyRevenueMock = async () => {\n  try {\n    const today = new Date();\n    const result = [];\n    \n    // Get all invoices\n    const allInvoices = await getAllInvoices();\n    \n    // Create revenue data for the last 7 days\n    for (let i = 0; i < 7; i++) {\n      const date = new Date(today);\n      date.setDate(today.getDate() - i);\n      const dateString = date.toISOString().split('T')[0];\n      \n      // Sum all invoices for this date\n      const dateInvoices = allInvoices.filter(invoice => {\n        const invoiceDate = new Date(invoice.createdAt);\n        return invoiceDate.toISOString().split('T')[0] === dateString;\n      });\n      \n      const totalAmount = dateInvoices.reduce((sum: number, invoice) => sum + invoice.totalAmount, 0);\n      \n      result.push({\n        date: dateString,\n        amount: totalAmount\n      });\n    }\n    \n    // Sort by date ascending for easier chart rendering\n    return result.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n  } catch (error) {\n    console.error(\"Error getting daily revenue mock data:\", error);\n    return [];\n  }\n};\n\n// Function to get yearly revenue data for statistics\nexport const getYearlyRevenue = async () => {\n  try {\n    const currentYear = new Date().getFullYear();\n    const result = [];\n    \n    // Try to get authentication token from localStorage\n    const tokenFromStorage = localStorage.getItem('token');\n    \n    if (tokenFromStorage) {\n      console.log('Using API to get yearly revenue data');\n      \n      try {\n        // Get data for the last 5 years using API\n        for (let i = 0; i < 5; i++) {\n          const year = currentYear - i;\n          \n          const yearlyData = await apiService.calculateYearlyRevenue(tokenFromStorage, year.toString());\n          result.push({\n            year: year.toString(),\n            amount: yearlyData.totalAmount || 0\n          });\n        }\n      } catch (apiError) {\n        console.error('Error fetching yearly revenue from API, falling back to mock data:', apiError);\n        // Fall back to mock data if API fails\n        return getYearlyRevenueMock();\n      }\n    } else {\n      console.log('No auth token, using mock data for yearly revenue');\n      // No token, use mock data\n      return getYearlyRevenueMock();\n    }\n    \n    // Sort by year ascending for easier chart rendering\n    return result.sort((a, b) => parseInt(a.year) - parseInt(b.year));\n  } catch (error) {\n    console.error(\"Error getting yearly revenue:\", error);\n    return [];\n  }\n};\n\n// Mock function for yearly revenue when API is not available\nconst getYearlyRevenueMock = async () => {\n  try {\n    const currentYear = new Date().getFullYear();\n    const result = [];\n    \n    // Get all invoices\n    const allInvoices = await getAllInvoices();\n    \n    // Calculate revenue for last 5 years\n    for (let i = 0; i < 5; i++) {\n      const year = currentYear - i;\n      \n      // Sum all invoices for this year\n      const yearInvoices = allInvoices.filter(invoice => {\n        const invoiceDate = new Date(invoice.createdAt);\n        return invoiceDate.getFullYear() === year;\n      });\n      \n      const totalAmount = yearInvoices.reduce((sum: number, invoice) => sum + invoice.totalAmount, 0);\n      \n      result.push({\n        year: year.toString(),\n        amount: totalAmount\n      });\n    }\n    \n    // Sort by year ascending for easier chart rendering\n    return result.sort((a, b) => parseInt(a.year) - parseInt(b.year));\n  } catch (error) {\n    console.error(\"Error getting yearly revenue mock data:\", error);\n    return [];\n  }\n};\n\n// Function to create a pharmacy invoice and mark prescription as dispensed\nexport const createPharmacyInvoice = async (\n  prescriptionId: string, \n  totalAmount: number, \n  token: string,\n  medicines: PharmacyMedicine[] = []\n): Promise<boolean> => {\n  console.log(`Creating pharmacy invoice for prescription ${prescriptionId} with amount ${totalAmount}`);\n  \n  try {\n    if (!token) {\n      console.error(\"No authentication token available\");\n      throw new Error(\"Authentication required\");\n    }\n    \n    // Step 1: Mark prescription as DISPENSED\n    console.log(`Updating prescription status to DISPENSED for ID: ${prescriptionId}`);\n    await apiService.updatePrescriptionStatus(prescriptionId, 'DISPENSED', token);\n    \n    // Step 2: Deduct medicines from inventory\n    if (medicines && medicines.length > 0) {\n      console.log(`Processing ${medicines.length} medicines to update inventory`);\n      \n      // Get all prescription details for this prescription to get medicine IDs\n      const prescriptionDetails = await apiService.getPrescriptionDetails(prescriptionId, token);\n      \n      // Create a map of medicine names to their IDs\n      const medicineNameToIdMap = new Map();\n      for (const detail of prescriptionDetails) {\n        // Extract medicine ID and name properly\n        if (detail.medicineId) {\n          const medicine = detail.medicineId;\n          const medicineName = typeof medicine === 'object' ? medicine.name : '';\n          const medicineId = extractMedicineId(medicine);\n          \n          if (medicineName && medicineId) {\n            medicineNameToIdMap.set(medicineName, medicineId);\n          }\n        }\n      }\n      \n      // Process each medicine and deduct from inventory\n      for (const med of medicines) {\n        const medicineId = medicineNameToIdMap.get(med.name);\n        \n        if (medicineId) {\n          console.log(`Deducting ${med.quantity} units of ${med.name} (ID: ${medicineId}) from inventory`);\n          try {\n            await apiService.deductMedicineStock(medicineId, med.quantity, token);\n          } catch (deductError) {\n            console.error(`Error deducting medicine ${med.name}:`, deductError);\n            // Continue with other medicines even if one fails\n          }\n        } else {\n          console.warn(`Could not find medicine ID for ${med.name}, skipping inventory update`);\n        }\n      }\n    } else {\n      console.log(\"No medicines to process for inventory update\");\n    }\n    \n    console.log(`Pharmacy invoice process completed successfully for prescription ${prescriptionId}`);\n    return true;\n  } catch (error: any) {\n    console.error(\"Error creating pharmacy invoice:\", error);\n    return false;\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2694, "column": 0}, "map": {"version":3,"sources":["file:///D:/%C4%90%E1%BB%93%20%C3%A1n%20A/hospitality-website-main/hospitality-website-main/my-app/src/app/pharmacyPage/PatientDetails.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ClipboardListIcon, PrinterIcon, UserIcon, PillIcon, AlertTriangle, RefreshCw } from 'lucide-react';\nimport { Invoice } from './Invoice';\nimport { PharmacyPatient, PharmacyMedicine, createPharmacyInvoice } from './pharmacyUtils';\nimport { useAuth } from '../context/AuthContext';\nimport { getPrescriptionDetails } from '../services/api.service';\n\ninterface PatientDetailsProps {\n  patient: PharmacyPatient;\n  onPatientComplete: (id: string) => void;\n}\n\ninterface PrescriptionDetailType {\n  _id: string;\n  prescriptionId: string;\n  medicineId: {\n    _id: string;\n    name: string;\n    price: number;\n  };\n  quantity: number;\n  dosage: string;\n}\n\nexport const PatientDetails = ({\n  patient,\n  onPatientComplete\n}: PatientDetailsProps) => {\n  const { token } = useAuth();\n  const [showInvoice, setShowInvoice] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [medicines, setMedicines] = useState<PharmacyMedicine[]>(patient.prescription);\n  const [isLoading, setIsLoading] = useState(false);\n  \n  // Reset medicines state when patient changes to avoid showing stale data\n  useEffect(() => {\n    setMedicines(patient.prescription);\n  }, [patient]);\n  \n  // Fetch prescription details from MongoDB when component loads or patient changes\n  useEffect(() => {\n    const fetchPrescriptionDetails = async () => {\n      if (!token) return;\n      \n      setIsLoading(true);\n      try {\n        // Get prescription details from the backend\n        const prescriptionDetails = await getPrescriptionDetails(patient.id, token);\n        console.log(`Fetched ${prescriptionDetails.length} prescription details from MongoDB for ID: ${patient.id}`);\n        \n        // Transform prescription details to match our UI format\n        if (prescriptionDetails && prescriptionDetails.length > 0) {\n          const updatedMedicines: PharmacyMedicine[] = prescriptionDetails.map((detail: PrescriptionDetailType) => ({\n            name: detail.medicineId?.name || 'Unknown', // medicineId is populated with name\n            quantity: detail.quantity,\n            dosage: detail.dosage,\n            price: detail.medicineId?.price || 0 // medicineId is populated with price\n          }));\n          \n          setMedicines(updatedMedicines);\n        } else {\n          // If no prescription details found, reset to an empty array\n          // This ensures we don't show old medicines when switching to a patient without prescriptions\n          setMedicines([]);\n        }\n      } catch (err: any) {\n        console.error(\"Error fetching prescription details:\", err);\n        // Reset medicines to what was passed in props if API fetch fails\n        setMedicines(patient.prescription);\n        setError(\"Không thể tải chi tiết đơn thuốc từ máy chủ. Đang hiển thị dữ liệu cục bộ.\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    fetchPrescriptionDetails();\n  }, [patient.id, token, patient.prescription]);\n  \n  // Handler for showing invoice\n  const handleShowInvoice = async () => {\n    setProcessing(true);\n    setError(null);\n    \n    try {\n      setShowInvoice(true);\n    } catch (err: any) {\n      console.error(\"Error preparing invoice:\", err);\n      setError(err.message || \"Không thể tạo hóa đơn. Vui lòng thử lại.\");\n    } finally {\n      setProcessing(false);\n    }\n  };\n  \n  // Tính tổng tiền của đơn thuốc\n  const calculateTotal = () => {\n    // Use our fetched medicines instead of patient.prescription\n    return medicines.reduce((total, med) => {\n      return total + med.price * med.quantity;\n    }, 0);\n  };\n  \n  // Handler for completing prescription\n  const handleComplete = async () => {\n    console.log(\"PatientDetails: handleComplete started\");\n    setProcessing(true);\n    setError(null);\n    \n    try {\n      if (!token) {\n        console.error(\"PatientDetails: No authentication token available\");\n        throw new Error(\"Bạn chưa đăng nhập hoặc phiên đăng nhập đã hết hạn.\");\n      }\n      \n      const totalAmount = medicines.length > 0 ? calculateTotal() : 0;\n      console.log(`PatientDetails: Processing completion for patient ${patient.fullName} (ID: ${patient.id})`);\n      console.log(`PatientDetails: Total amount to be recorded: ${totalAmount} VND`);\n      console.log(`PatientDetails: Medicines count: ${medicines.length}`);\n      \n      // Mark prescription as DISPENSED even if there are no medicines\n      console.log(\"PatientDetails: Calling createPharmacyInvoice...\");\n      // Pass medicines data to deduct quantities from inventory\n      const success = await createPharmacyInvoice(patient.id, totalAmount, token, medicines);\n      \n      if (success) {\n        console.log(\"PatientDetails: Invoice created successfully\");\n        // Close invoice and notify parent component\n        setShowInvoice(false);\n        console.log(\"PatientDetails: Notifying Dashboard of completion via onPatientComplete\");\n        // Thêm timeout nhỏ để đảm bảo UI cập nhật sau khi API hoàn tất\n        setTimeout(() => {\n          onPatientComplete(patient.id);\n          console.log(`PatientDetails: Patient ${patient.id} removed from waiting list`);\n        }, 300);\n      } else {\n        console.error(\"PatientDetails: Failed to create pharmacy invoice\");\n        throw new Error(\"Không thể cập nhật trạng thái đơn thuốc.\");\n      }\n    } catch (err: any) {\n      console.error(\"PatientDetails: Error completing prescription:\", err);\n      setError(err.message || \"Không thể hoàn thành phát thuốc. Vui lòng thử lại.\");\n    } finally {\n      setProcessing(false);\n      console.log(\"PatientDetails: handleComplete process finished\");\n    }\n  };\n  \n  if (showInvoice) {\n    // Pass our fetched medicines data to Invoice component\n    const patientWithUpdatedMeds = {\n      ...patient,\n      prescription: medicines\n    };\n    \n    return <Invoice \n      patient={patientWithUpdatedMeds} \n      onClose={() => setShowInvoice(false)} \n      onComplete={handleComplete} \n    />;\n  }\n  \n  // Định nghĩa calculateTotal đã được di chuyển lên trước hàm handleComplete\n  \n  return (\n    <div className=\"bg-white border border-gray-300 rounded-lg shadow-sm overflow-hidden\">\n      <div className=\"bg-gray-50 px-6 py-4 border-b border-gray-300 flex justify-between items-center\">\n        <h2 className=\"text-lg font-semibold text-black flex items-center\">\n          <PillIcon size={20} className=\"mr-2 text-black\" />\n          Chi Tiết Đơn Thuốc\n        </h2>\n        {error ? (\n          <div className=\"flex items-center text-red-600\">\n            <AlertTriangle size={16} className=\"mr-1\" />\n            <span className=\"text-sm\">{error}</span>\n          </div>\n        ) : (\n          <button \n            onClick={handleShowInvoice} \n            disabled={processing || isLoading}\n            className={`inline-flex items-center px-4 py-2 text-sm font-medium rounded-lg text-white transition-colors shadow-sm ${\n              processing || isLoading\n                ? 'bg-gray-400 cursor-not-allowed' \n                : 'bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2'\n            }`}\n            title=\"Xuất hóa đơn thuốc\"\n          >\n            {processing ? (\n              <>\n                <span className=\"animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full mr-2\"></span>\n                Đang xử lý...\n              </>\n            ) : (\n              <>\n                <PrinterIcon size={16} className=\"mr-2\" /> \n                Xuất hóa đơn thuốc\n              </>\n            )}\n          </button>\n        )}\n      </div>\n      \n      <div className=\"p-6 space-y-6\">\n        {/* Patient Information */}\n        <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-300\">\n          <div className=\"flex items-center mb-4\">\n            <UserIcon size={18} className=\"text-black mr-2\" />\n            <h3 className=\"text-lg font-medium text-black\">\n              Thông tin bệnh nhân\n            </h3>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5\">\n            <div>\n              <p className=\"text-sm font-medium text-black mb-1\">Họ và tên</p>\n              <p className=\"text-black\">{patient.fullName}</p>\n            </div>\n            <div>\n              <p className=\"text-sm font-medium text-black mb-1\">Số điện thoại</p>\n              <p className=\"text-black\">{patient.phone}</p>\n            </div>\n            <div>\n              <p className=\"text-sm font-medium text-black mb-1\">Mã đơn thuốc</p>\n              <p className=\"text-black\">{patient.serialNumber}</p>\n            </div>\n          </div>\n        </div>\n        \n        {/* Medical Information */}\n        <div className=\"border border-gray-300 rounded-lg p-4\">\n          <div className=\"flex items-center mb-4\">\n            <ClipboardListIcon size={18} className=\"text-black mr-2\" />\n            <h3 className=\"text-lg font-medium text-black\">\n              Thông tin y tế\n            </h3>\n          </div>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <p className=\"text-sm font-medium text-black mb-1\">Chẩn đoán</p>\n              <p className=\"text-black\">{patient.diagnosis}</p>\n            </div>\n            <div>\n              <p className=\"text-sm font-medium text-black mb-1\">Bác sĩ</p>\n              <p className=\"text-black\">{patient.doctor}</p>\n            </div>\n          </div>\n        </div>\n        \n        {/* Prescription */}\n        <div>\n          <h3 className=\"text-lg font-medium text-black mb-4 flex items-center\">\n            <PillIcon size={18} className=\"mr-2 text-black\" />\n            Đơn thuốc\n          </h3>\n          \n          <div className=\"overflow-x-auto border border-gray-300 rounded-lg\">\n            <table className=\"min-w-full divide-y divide-gray-300\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\n                    STT\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\n                    Tên thuốc\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\n                    Số lượng\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\n                    Liều dùng\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\n                    Đơn giá\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\n                    Thành tiền\n                  </th>\n                </tr>\n              </thead>\n              \n              <tbody className=\"bg-white divide-y divide-gray-300\">\n                {isLoading ? (\n                  <tr>\n                    <td colSpan={6} className=\"px-6 py-8 text-center\">\n                      <div className=\"flex flex-col items-center justify-center\">\n                        <RefreshCw size={24} className=\"animate-spin text-blue-600 mb-2\" />\n                        <p className=\"text-gray-600\">Đang tải chi tiết đơn thuốc...</p>\n                      </div>\n                    </td>\n                  </tr>\n                ) : medicines.length === 0 ? (\n                  <tr>\n                    <td colSpan={6} className=\"px-6 py-8 text-center\">\n                      <div className=\"flex flex-col items-center justify-center\">\n                        <AlertTriangle size={24} className=\"text-amber-500 mb-2\" />\n                        <p className=\"text-gray-600\">Bệnh nhân này không có đơn thuốc nào.</p>\n                      </div>\n                    </td>\n                  </tr>\n                ) : medicines.map((medicine, index) => (\n                  <tr key={index} className={index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\n                      {index + 1}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\n                      {medicine.name}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\n                      {medicine.quantity}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\n                      {medicine.dosage}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\n                      {medicine.price.toLocaleString('vi-VN')} đ\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\n                      {(medicine.price * medicine.quantity).toLocaleString('vi-VN')} đ\n                    </td>\n                  </tr>\n                ))}\n                \n                {medicines.length > 0 && (\n                  <tr className=\"bg-gray-100\">\n                    <td colSpan={5} className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-black text-right border-t border-gray-400\">\n                      Tổng cộng:\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-bold text-black border-t border-gray-400\">\n                      {calculateTotal().toLocaleString('vi-VN')} đ\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3473, "column": 0}, "map": {"version":3,"sources":["file:///D:/%C4%90%E1%BB%93%20%C3%A1n%20A/hospitality-website-main/hospitality-website-main/my-app/src/app/pharmacyPage/MedicineManager.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PlusCircle, Trash2, Edit, Save, XCircle, Search, AlertTriangle, RefreshCw, FileText } from 'lucide-react';\nimport { useAuth } from '../context/AuthContext';\nimport * as apiService from '../services/api.service';\nimport { Medicine } from './medicine.model';\n\ninterface MedicineManagerProps {\n  onClose: () => void;\n}\n\nexport const MedicineManager = ({ onClose }: MedicineManagerProps) => {\n  const { token } = useAuth();\n  const [medicines, setMedicines] = useState<Medicine[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [editingMedicine, setEditingMedicine] = useState<Medicine | null>(null);\n  const [newMedicine, setNewMedicine] = useState<Partial<Medicine>>({\n    customMedicineId: '',\n    name: '',\n    totalPills: 0,\n    price: 0\n  });\n  const [showAddForm, setShowAddForm] = useState<boolean>(false);\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const [filterEnabled, setFilterEnabled] = useState<boolean>(false);\n\n  const fetchMedicines = async () => {\n    if (!token) return;\n    \n    setLoading(true);\n    try {\n      const data = await apiService.getMedicines(token);\n      setMedicines(data);\n      setError(null);\n    } catch (err: any) {\n      console.error(\"Error fetching medicines:\", err);\n      setError(\"Không thể tải danh sách thuốc. Vui lòng thử lại.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchMedicines();\n  }, [token]);\n\n  const handleAddMedicine = async () => {\n    if (!token) return;\n    \n    // Validate form data\n    if (!newMedicine.customMedicineId || !newMedicine.name || newMedicine.totalPills === undefined || newMedicine.price === undefined) {\n      setError(\"Vui lòng điền đầy đủ thông tin thuốc.\");\n      return;\n    }\n    \n    setLoading(true);\n    try {\n      await apiService.createMedicine(newMedicine, token);\n      // Reset form\n      setNewMedicine({\n        customMedicineId: '',\n        name: '',\n        totalPills: 0,\n        price: 0\n      });\n      setShowAddForm(false);\n      fetchMedicines();\n      setError(null);\n    } catch (err: any) {\n      console.error(\"Error adding medicine:\", err);\n      setError(err.response?.data?.message || \"Không thể thêm thuốc. Vui lòng thử lại.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditMedicine = (medicine: Medicine) => {\n    setEditingMedicine(medicine);\n  };\n\n  const handleSaveEdit = async () => {\n    if (!token || !editingMedicine?._id) return;\n    \n    setLoading(true);\n    try {\n      await apiService.updateMedicine(editingMedicine._id, editingMedicine, token);\n      setEditingMedicine(null);\n      fetchMedicines();\n      setError(null);\n    } catch (err: any) {\n      console.error(\"Error updating medicine:\", err);\n      setError(err.response?.data?.message || \"Không thể cập nhật thuốc. Vui lòng thử lại.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteMedicine = async (medicineId: string) => {\n    if (!token) return;\n    \n    if (!window.confirm(\"Bạn có chắc chắn muốn xóa thuốc này không?\")) {\n      return;\n    }\n    \n    setLoading(true);\n    try {\n      await apiService.deleteMedicine(medicineId, token);\n      fetchMedicines();\n      setError(null);\n    } catch (err: any) {\n      console.error(\"Error deleting medicine:\", err);\n      setError(err.response?.data?.message || \"Không thể xóa thuốc. Vui lòng thử lại.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const filteredMedicines = filterEnabled && searchTerm\n    ? medicines.filter(med => \n        med.name.toLowerCase().includes(searchTerm.toLowerCase()) || \n        med.customMedicineId.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n    : medicines;\n\n  return (      <div className=\"bg-white border border-gray-300 rounded-lg shadow-lg\">\n      {/* Header */}\n      <div className=\"bg-blue-800 px-6 py-4 flex justify-between items-center rounded-t-lg\">\n        <h2 className=\"text-lg font-semibold text-white flex items-center\">\n          <FileText size={20} className=\"mr-2 text-white\" />\n          Quản Lý Thuốc\n        </h2>\n        <button \n          onClick={onClose}\n          className=\"text-white hover:text-gray-200 transition-colors\"\n        >\n          <XCircle size={20} />\n        </button>\n      </div>\n      \n      {/* Content */}\n      <div className=\"p-6\">\n        {/* Error message */}\n        {error && (\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-4 shadow-sm\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <div className=\"w-8 h-8 rounded-full bg-red-100 flex items-center justify-center\">\n                  <AlertTriangle className=\"h-5 w-5 text-red-600\" />\n                </div>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">Lỗi xảy ra</h3>\n                <div className=\"mt-1 text-sm text-red-700\">\n                  {error}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {/* Search and Controls */}\n        <div className=\"flex flex-wrap items-center justify-between mb-4 gap-2\">\n          <div className=\"flex items-center space-x-3\">\n            <button\n              onClick={() => setShowAddForm(!showAddForm)}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 shadow-sm\"\n            >\n              <PlusCircle size={16} className=\"mr-2\" />\n              Thêm thuốc mới\n            </button>\n            <button\n              onClick={fetchMedicines}\n              disabled={loading}\n              className={`inline-flex items-center px-4 py-2 border text-sm font-medium rounded-md shadow-sm ${\n                loading \n                  ? 'bg-gray-500 cursor-not-allowed text-gray-100 border-gray-500' \n                  : 'text-white bg-blue-600 hover:bg-blue-700 border-blue-600 hover:border-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500'\n              }`}\n            >\n              <RefreshCw size={16} className={`mr-2 ${loading ? 'animate-spin' : ''}`} />\n              Làm mới\n            </button>\n          </div>\n          \n          <div className=\"relative flex items-center\">\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <Search className=\"h-4 w-4 text-blue-600\" />\n            </div>\n            <input\n              type=\"text\"\n              placeholder=\"Tìm kiếm thuốc...\"\n              className=\"pl-10 pr-4 py-2 border border-blue-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 shadow-sm text-gray-800 bg-white\"\n              value={searchTerm}\n              onChange={(e) => {\n                setSearchTerm(e.target.value);\n                setFilterEnabled(true);\n              }}\n            />\n          </div>\n        </div>\n        \n        {/* Add Medicine Form */}\n        {showAddForm && (\n          <div className=\"bg-blue-50 p-5 mb-4 border border-blue-200 rounded-lg shadow-inner\">\n            <h3 className=\"text-md font-medium mb-3 text-blue-900 flex items-center\">\n              <PlusCircle size={16} className=\"mr-2\" />\n              Thêm thuốc mới\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Mã thuốc</label>\n                <input\n                  type=\"text\"\n                  value={newMedicine.customMedicineId}\n                  onChange={(e) => setNewMedicine({...newMedicine, customMedicineId: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-400 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white text-gray-800\"\n                  placeholder=\"m123\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Tên thuốc</label>\n                <input\n                  type=\"text\"\n                  value={newMedicine.name}\n                  onChange={(e) => setNewMedicine({...newMedicine, name: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-400 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white text-gray-800\"\n                  placeholder=\"Paracetamol 500mg\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Số lượng</label>\n                <input\n                  type=\"number\"\n                  value={newMedicine.totalPills}\n                  onChange={(e) => setNewMedicine({...newMedicine, totalPills: parseInt(e.target.value) || 0})}\n                  className=\"w-full px-3 py-2 border border-gray-400 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white text-gray-800\"\n                  placeholder=\"500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Đơn giá (VND)</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={newMedicine.price}\n                  onChange={(e) => setNewMedicine({...newMedicine, price: parseFloat(e.target.value) || 0})}\n                  className=\"w-full px-3 py-2 border border-gray-400 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white text-gray-800\"\n                  placeholder=\"10000\"\n                />\n              </div>\n            </div>\n            <div className=\"flex justify-end space-x-3 pt-2\">\n              <button\n                onClick={() => setShowAddForm(false)}\n                className=\"px-4 py-2 border border-gray-400 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 shadow-sm\"\n              >\n                Hủy\n              </button>\n              <button\n                onClick={handleAddMedicine}\n                disabled={loading}\n                className=\"px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 shadow-sm\"\n              >\n                {loading ? (\n                  <>\n                    <span className=\"animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full mr-2 inline-block\"></span>\n                    Đang xử lý...\n                  </>\n                ) : (\n                  <>\n                    <PlusCircle size={16} className=\"inline-block mr-1.5\" />\n                    Thêm thuốc\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        \n        {/* Medicines Table */}\n        <div className=\"overflow-x-auto border border-gray-300 rounded-lg shadow-sm bg-white\">\n          <table className=\"min-w-full divide-y divide-gray-300\">\n            <thead className=\"bg-blue-100\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-800 uppercase tracking-wider\">Mã thuốc</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-800 uppercase tracking-wider\">Tên thuốc</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-800 uppercase tracking-wider\">Số lượng</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-800 uppercase tracking-wider\">Đơn giá (VND)</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-blue-800 uppercase tracking-wider\">Thao tác</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {loading && filteredMedicines.length === 0 ? (\n                <tr>\n                  <td colSpan={5} className=\"px-6 py-12 text-center\">\n                    <div className=\"flex flex-col items-center\">\n                      <div className=\"w-12 h-12 rounded-full bg-blue-100 flex items-center justify-center mb-3\">\n                        <RefreshCw size={24} className=\"animate-spin text-blue-600\" />\n                      </div>\n                      <p className=\"text-blue-800 font-medium\">Đang tải danh sách thuốc...</p>\n                    </div>\n                  </td>\n                </tr>\n              ) : filteredMedicines.length === 0 ? (\n                <tr>\n                  <td colSpan={5} className=\"px-6 py-12 text-center\">\n                    <div className=\"flex flex-col items-center\">\n                      {searchTerm ? (\n                        <>\n                          <Search size={32} className=\"text-gray-600 mb-2\" />\n                          <p className=\"text-gray-800 font-medium\">Không tìm thấy thuốc phù hợp với từ khóa</p>\n                        </>\n                      ) : (\n                        <>\n                          <FileText size={32} className=\"text-gray-600 mb-2\" />\n                          <p className=\"text-gray-800 font-medium\">Chưa có thuốc nào trong hệ thống</p>\n                          <p className=\"text-gray-600 mt-1\">Hãy thêm thuốc mới để bắt đầu</p>\n                        </>\n                      )}\n                    </div>\n                  </td>\n                </tr>\n              ) : (\n                filteredMedicines.map((medicine) => (\n                  <tr key={medicine._id} className=\"hover:bg-gray-50 transition-colors\">\n                    {editingMedicine && editingMedicine._id === medicine._id ? (\n                      <>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <input\n                            type=\"text\"\n                            value={editingMedicine.customMedicineId}\n                            onChange={(e) => setEditingMedicine({...editingMedicine, customMedicineId: e.target.value})}\n                            className=\"w-full px-2 py-1 border border-gray-400 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white text-gray-800\"\n                          />\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <input\n                            type=\"text\"\n                            value={editingMedicine.name}\n                            onChange={(e) => setEditingMedicine({...editingMedicine, name: e.target.value})}\n                            className=\"w-full px-2 py-1 border border-gray-400 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white text-gray-800\"\n                          />\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <input\n                            type=\"number\"\n                            value={editingMedicine.totalPills}\n                            onChange={(e) => setEditingMedicine({...editingMedicine, totalPills: parseInt(e.target.value) || 0})}\n                            className=\"w-full px-2 py-1 border border-gray-400 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white text-gray-800\"\n                          />\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <input\n                            type=\"number\"\n                            step=\"0.01\"\n                            value={editingMedicine.price}\n                            onChange={(e) => setEditingMedicine({...editingMedicine, price: parseFloat(e.target.value) || 0})}\n                            className=\"w-full px-2 py-1 border border-gray-400 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white text-gray-800\"\n                          />\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"flex space-x-3\">\n                            <button\n                              onClick={handleSaveEdit}\n                              className=\"p-1 bg-green-100 text-green-700 hover:bg-green-200 rounded\"\n                              title=\"Lưu\"\n                            >\n                              <Save size={18} />\n                            </button>\n                            <button\n                              onClick={() => setEditingMedicine(null)}\n                              className=\"p-1 bg-gray-100 text-gray-700 hover:bg-gray-200 rounded\"\n                              title=\"Hủy\"\n                            >\n                              <XCircle size={18} />\n                            </button>\n                          </div>\n                        </td>\n                      </>\n                    ) : (\n                      <>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                          {medicine.customMedicineId}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-800\">\n                          {medicine.name}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-800\">\n                          {medicine.totalPills.toLocaleString()}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-800\">\n                          {medicine.price.toLocaleString('vi-VN')}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                          <div className=\"flex space-x-3\">\n                            <button\n                              onClick={() => handleEditMedicine(medicine)}\n                              className=\"p-1 bg-blue-100 text-blue-700 hover:bg-blue-200 rounded\"\n                              title=\"Sửa\"\n                            >\n                              <Edit size={18} />\n                            </button>\n                            <button\n                              onClick={() => medicine._id && handleDeleteMedicine(medicine._id)}\n                              className=\"p-1 bg-red-100 text-red-700 hover:bg-red-200 rounded\"\n                              title=\"Xóa\"\n                            >\n                              <Trash2 size={18} />\n                            </button>\n                          </div>\n                        </td>\n                      </>\n                    )}\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4454, "column": 0}, "map": {"version":3,"sources":["file:///D:/%C4%90%E1%BB%93%20%C3%A1n%20A/hospitality-website-main/hospitality-website-main/my-app/src/app/pharmacyPage/Dashboard.tsx"],"sourcesContent":["// Updated 2025-07-01: Removed Statistics tab and consolidated revenue features into InvoiceDetailModal\nimport React, { useState, useEffect } from 'react';\nimport { LogOutIcon, PillIcon, AlertTriangle, UserIcon, FileText } from 'lucide-react';\nimport { PatientList } from './PatientList';\nimport { PatientDetails } from './PatientDetails';\nimport { MedicineManager } from './MedicineManager';\nimport { PharmacyPatient, getPatientsWithPendingPrescriptions } from './pharmacyUtils';\nimport { useAuth } from '../context/AuthContext';\n\n// User interface for authentication context\ninterface User {\n  fullName: string; // Changed from 'name' to 'fullName' to match User in mockPatients\n  role: string;\n  // Other user properties (optional)\n  _id?: string;\n  username?: string;\n  email?: string;\n}\n\ninterface DashboardProps {\n  user: User | null; // Assuming user can be null if not logged in\n  onLogout: () => void;\n}\n\nexport const Dashboard = ({\n  user,\n  onLogout\n}: DashboardProps) => {\n  const { token } = useAuth(); // Get token from auth context\n  const [activeTab, setActiveTab] = useState('dispense'); // Only 'dispense' tab remains\n  const [selectedPatient, setSelectedPatient] = useState<PharmacyPatient | null>(null);\n  const [waitingPatients, setWaitingPatients] = useState<PharmacyPatient[]>([]);\n  const [showMedicineManager, setShowMedicineManager] = useState(false);\n  \n  // State cho loading và error\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Tải dữ liệu bệnh nhân chờ phát thuốc từ API\n  const fetchPatients = async () => {\n    setIsLoading(true);\n    setError(null);\n    \n    console.log(\"Dashboard: Starting fetchPatients function\");\n    console.log(\"Dashboard: Token available:\", !!token);\n    \n    try {\n      // Fetch prescriptions with status PENDING_DISPENSE\n      console.log(\"Dashboard: Calling getPatientsWithPendingPrescriptions...\");\n      const patients = await getPatientsWithPendingPrescriptions();\n      console.log(`Dashboard: Fetched ${patients.length} patients with pending prescriptions`);\n      console.log(\"Dashboard: Patient data:\", patients);\n      \n      setWaitingPatients(patients);\n      \n      if (patients.length === 0) {\n        // Reset selected patient if no patients are waiting\n        console.log(\"Dashboard: No patients in queue, resetting selected patient\");\n        setSelectedPatient(null);\n      }\n    } catch (error: any) {\n      console.error(\"Dashboard: Error fetching patients:\", error);\n      setError(error.message || \"Không thể tải danh sách bệnh nhân\");\n      setWaitingPatients([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // Fetch patients on mount and when user changes\n  // Initial fetch\n  useEffect(() => {\n    console.log(\"Dashboard: Initial useEffect - fetching patients\");\n    fetchPatients();\n  }, [user, token]); // Add token as dependency\n  \n  // Setup polling for auto-refresh\n  useEffect(() => {\n    console.log(\"Dashboard: Setting up polling interval\");\n    // Set up polling for real-time updates\n    const intervalId = setInterval(() => {\n      // Only auto-refresh if not viewing a patient's details\n      if (!selectedPatient && !isLoading) {\n        console.log(\"Dashboard: Auto-refreshing patient list...\");\n        fetchPatients();\n      }\n    }, 60000); // Poll every minute\n    \n    return () => {\n      console.log(\"Dashboard: Clearing polling interval\");\n      clearInterval(intervalId);\n    };\n  }, [selectedPatient, isLoading]);\n\n  const handlePatientSelect = (patient: PharmacyPatient) => {\n    console.log(\"Dashboard: Patient selected:\", patient.id, patient.fullName);\n    setSelectedPatient(patient);\n  };\n\n  const handlePatientRemove = (patientId: string) => {\n    console.log(`Dashboard: Removing patient ${patientId} from waiting list after dispensing`);\n    setWaitingPatients(prevPatients => prevPatients.filter(p => p.id !== patientId));\n    setSelectedPatient(null);\n    \n    // Also refresh the list to ensure our counts are accurate\n    setTimeout(() => {\n      fetchPatients();\n    }, 1000); // Give the backend a moment to update\n  };\n\n  // Add debug output for the render cycle\n  console.log(\"Dashboard: Rendering with state:\", {\n    activeTab,\n    selectedPatient: selectedPatient ? `${selectedPatient.id} - ${selectedPatient.fullName}` : \"none\",\n    waitingPatients: waitingPatients.length,\n    isLoading,\n    error\n  });\n\n  return <div className=\"min-h-screen bg-gray-50\">\n      {/* Medicine Manager Overlay */}\n      {showMedicineManager && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-70 z-50 flex items-center justify-center p-4 backdrop-blur-sm\">\n          <div className=\"w-full max-w-6xl max-h-[90vh] overflow-y-auto rounded-lg shadow-2xl\">\n            <MedicineManager onClose={() => setShowMedicineManager(false)} />\n          </div>\n        </div>\n      )}\n      \n      {/* Header */}\n      <header className=\"bg-blue-700 text-white shadow\">\n        <div className=\"max-w-7xl mx-auto px-4 py-4 sm:px-6 lg:px-8 flex justify-between items-center\">\n          <h1 className=\"text-2xl font-bold\">Hệ Thống Quản Lý Nhà Thuốc</h1>\n          <div className=\"flex items-center space-x-4\">\n            {/* Medicine Management Button */}\n            <button \n              onClick={() => setShowMedicineManager(true)} \n              className=\"inline-flex items-center px-3 py-1.5 border border-green-800 text-sm rounded-md text-white bg-green-600 hover:bg-green-700 transition-colors shadow-md font-medium\"\n              title=\"Quản lý danh mục thuốc\"\n            >\n              <FileText className=\"h-4 w-4 mr-1.5 text-white\" /> Quản Lý Thuốc\n            </button>\n            \n            <span className=\"text-sm\">\n              Xin chào, {user?.fullName || 'Nhân viên'}\n            </span>\n            <button onClick={onLogout} className=\"inline-flex items-center px-3 py-1 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-blue-800 hover:bg-blue-900 focus:outline-none focus:border-blue-900 focus:shadow-outline-blue active:bg-blue-900 transition duration-150 ease-in-out\">\n              <LogOutIcon className=\"h-4 w-4 mr-1\" /> Đăng Xuất\n            </button>\n          </div>\n        </div>\n      </header>\n      \n      {/* Navigation - Removed Statistics tab */}\n      <nav className=\"bg-white shadow\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-center h-16\">\n            <div className=\"flex\">\n              <button className={`inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium leading-5 focus:outline-none transition duration-150 ease-in-out border-blue-500 text-gray-900`}>\n                <PillIcon className=\"h-5 w-5 mr-1\" /> Phát Thuốc\n              </button>\n            </div>\n          </div>\n        </div>\n      </nav>\n      {/* Main Content - Removed Statistics component */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        <div className=\"flex flex-col md:flex-row gap-6\">\n          <div className=\"w-full md:w-1/3\">\n            <PatientList \n              patients={waitingPatients} \n              onPatientSelect={handlePatientSelect} \n              onRefresh={fetchPatients}\n              isLoading={isLoading}\n              error={error}\n            />\n          </div>\n          <div className=\"w-full md:w-2/3\">\n            {isLoading && !selectedPatient ? (\n              <div className=\"bg-white shadow rounded-lg p-6 h-96 flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <div className=\"animate-spin h-8 w-8 border-4 border-blue-500 border-t-transparent rounded-full mx-auto mb-4\"></div>\n                  <p className=\"text-gray-600\">Đang tải danh sách bệnh nhân...</p>\n                </div>\n              </div>\n            ) : error && !selectedPatient ? (\n              <div className=\"bg-white shadow rounded-lg p-6 h-96 flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <div className=\"bg-red-100 p-3 rounded-full mx-auto mb-4 w-16 h-16 flex items-center justify-center\">\n                    <AlertTriangle className=\"h-8 w-8 text-red-600\" />\n                  </div>\n                  <p className=\"text-red-600 font-medium mb-2\">Không thể tải dữ liệu</p>\n                  <p className=\"text-gray-600 mb-4\">{error}</p>\n                  <button \n                    onClick={fetchPatients}\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n                  >\n                    Thử lại\n                  </button>\n                </div>\n              </div>\n            ) : selectedPatient ? (\n              <PatientDetails patient={selectedPatient} onPatientComplete={handlePatientRemove} />\n            ) : (\n              <div className=\"bg-white shadow rounded-lg p-6 h-96 flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <div className=\"bg-blue-100 p-3 rounded-full mx-auto mb-4 w-16 h-16 flex items-center justify-center\">\n                    <UserIcon className=\"h-8 w-8 text-blue-600\" />\n                  </div>\n                  <p className=\"text-gray-700 font-medium mb-2\">Chưa có bệnh nhân nào được chọn</p>\n                  <p className=\"text-gray-500\">\n                    Vui lòng chọn bệnh nhân từ danh sách để xem chi tiết đơn thuốc.\n                  </p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n      {/* Footer */}\n      <footer className=\"bg-white border-t border-gray-200 py-4\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <p className=\"text-center text-sm text-gray-500\">\n             Hệ Thống Quản Lý Nhà Thuốc. Bản quyền thuộc về Phòng Khám.\n          </p>\n        </div>\n      </footer>\n    </div>;\n};"],"names":[],"mappings":"AAAA,uGAAuG;;;;;AACvG;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAiBO,MAAM,YAAY;QAAC,EACxB,IAAI,EACJ,QAAQ,EACO;;IACf,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,wIAAA,CAAA,UAAO,AAAD,KAAK,8BAA8B;IAC3D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,aAAa,8BAA8B;IACtF,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA0B;IAC/E,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAqB,EAAE;IAC5E,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/D,6BAA6B;IAC7B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,8CAA8C;IAC9C,MAAM,gBAAgB;QACpB,aAAa;QACb,SAAS;QAET,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAE7C,IAAI;YACF,mDAAmD;YACnD,QAAQ,GAAG,CAAC;YACZ,MAAM,WAAW,MAAM,CAAA,GAAA,8IAAA,CAAA,sCAAmC,AAAD;YACzD,QAAQ,GAAG,CAAC,AAAC,sBAAqC,OAAhB,SAAS,MAAM,EAAC;YAClD,QAAQ,GAAG,CAAC,4BAA4B;YAExC,mBAAmB;YAEnB,IAAI,SAAS,MAAM,KAAK,GAAG;gBACzB,oDAAoD;gBACpD,QAAQ,GAAG,CAAC;gBACZ,mBAAmB;YACrB;QACF,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,uCAAuC;YACrD,SAAS,MAAM,OAAO,IAAI;YAC1B,mBAAmB,EAAE;QACvB,SAAU;YACR,aAAa;QACf;IACF;IAEA,gDAAgD;IAChD,gBAAgB;IAChB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,QAAQ,GAAG,CAAC;YACZ;QACF;8BAAG;QAAC;QAAM;KAAM,GAAG,0BAA0B;IAE7C,iCAAiC;IACjC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,QAAQ,GAAG,CAAC;YACZ,uCAAuC;YACvC,MAAM,aAAa;kDAAY;oBAC7B,uDAAuD;oBACvD,IAAI,CAAC,mBAAmB,CAAC,WAAW;wBAClC,QAAQ,GAAG,CAAC;wBACZ;oBACF;gBACF;iDAAG,QAAQ,oBAAoB;YAE/B;uCAAO;oBACL,QAAQ,GAAG,CAAC;oBACZ,cAAc;gBAChB;;QACF;8BAAG;QAAC;QAAiB;KAAU;IAE/B,MAAM,sBAAsB,CAAC;QAC3B,QAAQ,GAAG,CAAC,gCAAgC,QAAQ,EAAE,EAAE,QAAQ,QAAQ;QACxE,mBAAmB;IACrB;IAEA,MAAM,sBAAsB,CAAC;QAC3B,QAAQ,GAAG,CAAC,AAAC,+BAAwC,OAAV,WAAU;QACrD,mBAAmB,CAAA,eAAgB,aAAa,MAAM,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QACrE,mBAAmB;QAEnB,0DAA0D;QAC1D,WAAW;YACT;QACF,GAAG,OAAO,sCAAsC;IAClD;IAEA,wCAAwC;IACxC,QAAQ,GAAG,CAAC,oCAAoC;QAC9C;QACA,iBAAiB,kBAAkB,AAAC,GAA0B,OAAxB,gBAAgB,EAAE,EAAC,OAA8B,OAAzB,gBAAgB,QAAQ,IAAK;QAC3F,iBAAiB,gBAAgB,MAAM;QACvC;QACA;IACF;IAEA,qBAAO,6LAAC;QAAI,WAAU;;YAEjB,qCACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,iJAAA,CAAA,kBAAe;wBAAC,SAAS,IAAM,uBAAuB;;;;;;;;;;;;;;;;0BAM7D,6LAAC;gBAAO,WAAU;0BAChB,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAqB;;;;;;sCACnC,6LAAC;4BAAI,WAAU;;8CAEb,6LAAC;oCACC,SAAS,IAAM,uBAAuB;oCACtC,WAAU;oCACV,OAAM;;sDAEN,6LAAC,iNAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;wCAA8B;;;;;;;8CAGpD,6LAAC;oCAAK,WAAU;;wCAAU;wCACb,CAAA,iBAAA,2BAAA,KAAM,QAAQ,KAAI;;;;;;;8CAE/B,6LAAC;oCAAO,SAAS;oCAAU,WAAU;;sDACnC,6LAAC,iNAAA,CAAA,aAAU;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;;;;;;;;;;;;;;;;;0BAO/C,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAO,WAAY;;kDAClB,6LAAC,yMAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAO/C,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,6IAAA,CAAA,cAAW;gCACV,UAAU;gCACV,iBAAiB;gCACjB,WAAW;gCACX,WAAW;gCACX,OAAO;;;;;;;;;;;sCAGX,6LAAC;4BAAI,WAAU;sCACZ,aAAa,CAAC,gCACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;;;;;;sDACf,6LAAC;4CAAE,WAAU;sDAAgB;;;;;;;;;;;;;;;;2EAG/B,SAAS,CAAC,gCACZ,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC,2NAAA,CAAA,gBAAa;gDAAC,WAAU;;;;;;;;;;;sDAE3B,6LAAC;4CAAE,WAAU;sDAAgC;;;;;;sDAC7C,6LAAC;4CAAE,WAAU;sDAAsB;;;;;;sDACnC,6LAAC;4CACC,SAAS;4CACT,WAAU;sDACX;;;;;;;;;;;;;;;;2EAKH,gCACF,6LAAC,gJAAA,CAAA,iBAAc;gCAAC,SAAS;gCAAiB,mBAAmB;;;;;yFAE7D,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC,yMAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;sDAEtB,6LAAC;4CAAE,WAAU;sDAAiC;;;;;;sDAC9C,6LAAC;4CAAE,WAAU;sDAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAUzC,6LAAC;gBAAO,WAAU;0BAChB,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAE,WAAU;kCAAoC;;;;;;;;;;;;;;;;;;;;;;AAM3D;GA5Ma;;QAIO,wIAAA,CAAA,UAAO;;;KAJd","debugId":null}},
    {"offset": {"line": 4947, "column": 0}, "map": {"version":3,"sources":["file:///D:/%C4%90%E1%BB%93%20%C3%A1n%20A/hospitality-website-main/hospitality-website-main/my-app/src/app/pharmacyPage/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useRouter } from 'next/navigation';\nimport { Dashboard } from './Dashboard';\n\nexport default function PharmacyPage() {\n  const { user, isAuthenticated, token, logout } = useAuth();\n  const router = useRouter();\n\n  // Add debug logging\n  console.log('PharmacyPage: Rendering page component');\n  console.log('PharmacyPage: Authentication state:', {\n    isAuthenticated,\n    hasUser: !!user,\n    userRole: user?.role || 'none',\n    hasToken: !!token,\n  });\n\n  useEffect(() => {\n    console.log('PharmacyPage: Authentication check effect running');\n\n    if (!isAuthenticated) {\n      console.log('PharmacyPage: Not authenticated, redirecting to login');\n      router.push('/login');\n    } else if (user?.role !== 'PHARMACIST') {\n      // Nếu người dùng không phải là dược sĩ, chuyển hướng về trang đăng nhập\n      console.log(`PharmacyPage: User role ${user?.role} is not PHARMACIST, logging out`);\n      logout();\n      router.push('/login');\n    } else {\n      console.log('PharmacyPage: Authentication check passed');\n    }\n  }, [isAuthenticated, router, user, logout]);\n\n  if (!isAuthenticated || !user) {\n    console.log('PharmacyPage: Rendering loading state');\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  console.log('PharmacyPage: Rendering Dashboard with user:', user.fullName);\n  console.log('PharmacyPage: Token available:', !!token);\n\n  // If token is available, store it in localStorage for API calls\n  if (token) {\n    console.log('PharmacyPage: Saving token to localStorage for API calls');\n    localStorage.setItem('token', token);\n  }\n\n  return (\n    <div className=\"flex flex-col w-full min-h-screen bg-gray-50\">\n      <Dashboard user={user} onLogout={logout} />\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOe,SAAS;;IACtB,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,wIAAA,CAAA,UAAO,AAAD;IACvD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,oBAAoB;IACpB,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC,uCAAuC;QACjD;QACA,SAAS,CAAC,CAAC;QACX,UAAU,CAAA,iBAAA,2BAAA,KAAM,IAAI,KAAI;QACxB,UAAU,CAAC,CAAC;IACd;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,QAAQ,GAAG,CAAC;YAEZ,IAAI,CAAC,iBAAiB;gBACpB,QAAQ,GAAG,CAAC;gBACZ,OAAO,IAAI,CAAC;YACd,OAAO,IAAI,CAAA,iBAAA,2BAAA,KAAM,IAAI,MAAK,cAAc;gBACtC,wEAAwE;gBACxE,QAAQ,GAAG,CAAC,AAAC,2BAAqC,OAAX,iBAAA,2BAAA,KAAM,IAAI,EAAC;gBAClD;gBACA,OAAO,IAAI,CAAC;YACd,OAAO;gBACL,QAAQ,GAAG,CAAC;YACd;QACF;iCAAG;QAAC;QAAiB;QAAQ;QAAM;KAAO;IAE1C,IAAI,CAAC,mBAAmB,CAAC,MAAM;QAC7B,QAAQ,GAAG,CAAC;QACZ,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,QAAQ,GAAG,CAAC,gDAAgD,KAAK,QAAQ;IACzE,QAAQ,GAAG,CAAC,kCAAkC,CAAC,CAAC;IAEhD,gEAAgE;IAChE,IAAI,OAAO;QACT,QAAQ,GAAG,CAAC;QACZ,aAAa,OAAO,CAAC,SAAS;IAChC;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,2IAAA,CAAA,YAAS;YAAC,MAAM;YAAM,UAAU;;;;;;;;;;;AAGvC;GApDwB;;QAC2B,wIAAA,CAAA,UAAO;QACzC,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}}]
}