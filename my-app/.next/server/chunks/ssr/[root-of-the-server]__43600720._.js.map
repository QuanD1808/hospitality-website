{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/pharmacyPage/PatientList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { UserIcon, RefreshCw, AlertCircle, ClipboardList, Clock } from 'lucide-react';\r\nimport { PharmacyPatient, getPatientsWithPendingPrescriptions } from './pharmacyUtils';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\ninterface PatientListProps {\r\n  patients: PharmacyPatient[];\r\n  onPatientSelect: (patient: PharmacyPatient) => void;\r\n  onRefresh?: () => void;\r\n  isLoading?: boolean;\r\n  error?: string | null;\r\n}\r\n\r\nexport const PatientList = ({\r\n  patients,\r\n  onPatientSelect,\r\n  onRefresh,\r\n  isLoading = false,\r\n  error = null\r\n}: PatientListProps) => {\r\n  const { token } = useAuth();\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  \r\n  // Function to handle manual refresh\r\n  const handleRefresh = async () => {\r\n    if (isRefreshing || isLoading) return;\r\n    \r\n    setIsRefreshing(true);\r\n    try {\r\n      if (onRefresh) {\r\n        await onRefresh();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error refreshing patient list:\", error);\r\n    } finally {\r\n      // Add a small delay for better UX\r\n      setTimeout(() => {\r\n        setIsRefreshing(false);\r\n      }, 800);\r\n    }\r\n  };\r\n  \r\n  return <div className=\"bg-white shadow rounded-lg overflow-hidden\">\r\n      <div className=\"bg-blue-600 px-4 py-3 flex justify-between items-center\">\r\n        <div className=\"flex items-center\">\r\n          <ClipboardList className=\"h-5 w-5 text-white mr-2\" />\r\n          <h2 className=\"text-lg font-medium text-white\">\r\n            Danh Sách Chờ Phát Thuốc\r\n          </h2>\r\n          {patients.length > 0 && (\r\n            <span className=\"ml-2 bg-white text-blue-600 rounded-full px-2 py-0.5 text-xs font-medium\">\r\n              {patients.length}\r\n            </span>\r\n          )}\r\n        </div>\r\n        <button \r\n          onClick={handleRefresh} \r\n          className={`p-1.5 rounded-full text-white hover:bg-blue-700 transition-all focus:outline-none ${isRefreshing ? 'animate-spin' : ''}`}\r\n          disabled={isRefreshing || isLoading}\r\n          title=\"Làm mới danh sách\"\r\n        >\r\n          <RefreshCw size={18} />\r\n        </button>\r\n      </div>\r\n      <div className=\"divide-y divide-gray-200 max-h-96 overflow-y-auto\">\r\n        {isRefreshing || isLoading ? (\r\n          <div className=\"flex items-center justify-center p-8\">\r\n            <div className=\"text-center\">\r\n              <RefreshCw size={24} className=\"animate-spin mx-auto text-blue-600 mb-2\" />\r\n              <p className=\"text-sm text-gray-600\">{isRefreshing ? 'Đang cập nhật danh sách...' : 'Đang tải danh sách...'}</p>\r\n            </div>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"p-6 text-center\">\r\n            <div className=\"rounded-full bg-red-100 p-3 w-12 h-12 mx-auto mb-4 flex items-center justify-center\">\r\n              <AlertCircle className=\"h-6 w-6 text-red-600\" />\r\n            </div>\r\n            <p className=\"text-red-600 font-medium\">Không thể tải dữ liệu</p>\r\n            <p className=\"text-sm text-gray-600 mt-2 mb-4\">{error}</p>\r\n            <button \r\n              onClick={handleRefresh}\r\n              className=\"inline-flex items-center px-4 py-2 border border-red-300 rounded-md shadow-sm text-sm font-medium text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\r\n            >\r\n              <RefreshCw size={16} className=\"mr-2\" /> Thử lại\r\n            </button>\r\n          </div>\r\n        ) : patients.length > 0 ? (\r\n          patients.map(patient => (\r\n            <div key={patient.id} className=\"p-4 hover:bg-gray-50 transition-colors\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"bg-blue-100 rounded-full p-2 mr-3\">\r\n                    <UserIcon className=\"h-5 w-5 text-blue-600\" />\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"flex items-center\">\r\n                      <p className=\"font-medium text-gray-900\">\r\n                        {patient.fullName}\r\n                      </p>\r\n                      <span className=\"ml-2 px-2 py-0.5 bg-blue-100 text-blue-800 text-xs rounded-full\">\r\n                        {patient.serialNumber}\r\n                      </span>\r\n                    </div>\r\n                    <p className=\"text-sm text-gray-500\">\r\n                      {patient.phone || 'Không có SĐT'}\r\n                    </p>\r\n                    <div className=\"flex items-center text-xs text-blue-600 mt-1\">\r\n                      <span className=\"font-medium\">Bác sĩ:</span> \r\n                      <span className=\"ml-1\">{patient.doctor}</span>\r\n                    </div>\r\n                    <div className=\"flex flex-col mt-1\">\r\n                      {patient.diagnosis && (\r\n                        <div className=\"text-xs text-gray-700\">\r\n                          <span className=\"font-medium\">Chẩn đoán:</span> \r\n                          <span className=\"ml-1 line-clamp-1\">{patient.diagnosis}</span>\r\n                        </div>\r\n                      )}\r\n                      {patient.prescription && (\r\n                        <div className=\"flex items-center text-xs text-green-600 mt-0.5\">\r\n                          <Clock size={12} className=\"mr-1\" />\r\n                          <span className=\"font-medium\">{patient.prescription.length} loại thuốc cần phát</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <button \r\n                  onClick={() => onPatientSelect(patient)} \r\n                  className=\"inline-flex items-center px-3 py-1.5 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors\"\r\n                >\r\n                  Phát thuốc\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"p-8 text-center\">\r\n            <div className=\"rounded-full bg-gray-100 p-3 w-12 h-12 mx-auto mb-4 flex items-center justify-center\">\r\n              <UserIcon className=\"h-6 w-6 text-gray-400\" />\r\n            </div>\r\n            <p className=\"text-gray-600 font-medium\">Không có bệnh nhân nào trong danh sách chờ.</p>\r\n            <p className=\"text-sm text-gray-500 mt-1\">Tất cả đơn thuốc đã được phát.</p>\r\n            <button \r\n              onClick={handleRefresh}\r\n              className=\"mt-4 inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n            >\r\n              <RefreshCw size={16} className=\"mr-2\" /> Kiểm tra lại\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>;\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/pharmacyPage/Invoice.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ArrowLeftIcon, PrinterIcon, AlertTriangle } from 'lucide-react';\r\nimport { PharmacyPatient, PharmacyMedicine } from './pharmacyUtils';\r\n\r\ninterface InvoiceProps {\r\n  patient: PharmacyPatient;\r\n  onClose: () => void;\r\n  onComplete: () => void;\r\n}\r\n\r\nexport const Invoice = ({\r\n  patient,\r\n  onClose,\r\n  onComplete\r\n}: InvoiceProps) => {\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  const currentDate = new Date().toLocaleDateString('vi-VN');\r\n  \r\n  const calculateTotal = () => {\r\n    return patient.prescription.reduce((total: number, med: PharmacyMedicine) => {\r\n      return total + med.price * med.quantity;\r\n    }, 0);\r\n  };\r\n  \r\n  const handlePrint = async () => {\r\n    setIsProcessing(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // In thực tế, ở đây sẽ gọi API để in và lưu hoá đơn\r\n      // Sau đó mới gọi onComplete để xác nhận đã phát thuốc\r\n      \r\n      // Giả lập thời gian chờ để UX tốt hơn\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      onComplete();\r\n    } catch (err: any) {\r\n      console.error(\"Error completing invoice:\", err);\r\n      setError(err.message || \"Không thể hoàn tất hóa đơn. Vui lòng thử lại.\");\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n  return <div className=\"bg-white shadow rounded-lg overflow-hidden\">\r\n      <div className=\"bg-blue-600 px-4 py-3 flex justify-between items-center\">\r\n        <div className=\"flex items-center\">\r\n          <button onClick={onClose} className=\"mr-2 text-white hover:text-blue-100\">\r\n            <ArrowLeftIcon className=\"h-5 w-5\" />\r\n          </button>\r\n          <h2 className=\"text-lg font-medium text-white\">Hóa Đơn Thuốc</h2>\r\n        </div>\r\n        {error ? (\r\n          <div className=\"flex items-center text-red-600 bg-red-50 px-3 py-1 rounded-md border border-red-200\">\r\n            <AlertTriangle className=\"h-4 w-4 mr-1\" />\r\n            <span className=\"text-sm\">{error}</span>\r\n          </div>\r\n        ) : (\r\n          <button \r\n            onClick={handlePrint} \r\n            disabled={isProcessing}\r\n            className={`inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md transition-colors ${\r\n              isProcessing \r\n                ? 'bg-gray-400 text-white cursor-not-allowed' \r\n                : 'text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500'\r\n            }`}\r\n          >\r\n            {isProcessing ? (\r\n              <>\r\n                <span className=\"animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full mr-1\"></span>\r\n                Đang xử lý...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <PrinterIcon className=\"h-4 w-4 mr-1\" /> In & hoàn tất\r\n              </>\r\n            )}\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"p-6\">\r\n        <div className=\"border border-gray-200 rounded-lg p-6 mb-6\">\r\n          <div className=\"text-center mb-6\">\r\n            <h3 className=\"text-xl font-bold text-blue-800\">\r\n              PHÒNG KHÁM ĐA KHOA\r\n            </h3>\r\n            <p className=\"text-gray-500\">123 Nguyễn Huệ, Quận 1, TP.HCM</p>\r\n            <p className=\"text-gray-500\">Điện thoại: (028) 3822 1234</p>\r\n            <div className=\"mt-4 border-t pt-4\">\r\n              <h2 className=\"text-xl font-bold\">HÓA ĐƠN THUỐC</h2>\r\n              <p className=\"text-gray-500\">Ngày: {currentDate}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Họ và tên bệnh nhân</p>\r\n              <p className=\"font-medium\">{patient.fullName}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Số điện thoại</p>\r\n              <p className=\"font-medium\">{patient.phone}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Mã đơn thuốc</p>\r\n              <p className=\"font-medium\">{patient.serialNumber}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Chẩn đoán</p>\r\n              <p className=\"font-medium\">{patient.diagnosis}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Bác sĩ kê đơn</p>\r\n              <p className=\"font-medium\">{patient.doctor}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Nhân viên phát thuốc</p>\r\n              <p className=\"font-medium\">Nguyễn Thị Hà</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"overflow-x-auto mb-6\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    STT\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Tên thuốc\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Số lượng\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Liều dùng\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Đơn giá\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Thành tiền\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {patient.prescription.map((medicine: PharmacyMedicine, index: number) => <tr key={index}>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {index + 1}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {medicine.name}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {medicine.quantity}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {medicine.dosage}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {medicine.price.toLocaleString('vi-VN')} đ\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {(medicine.price * medicine.quantity).toLocaleString('vi-VN')}{' '}\r\n                      đ\r\n                    </td>\r\n                  </tr>)}\r\n                <tr className=\"bg-gray-50\">\r\n                  <td colSpan={5} className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 text-right\">\r\n                    Tổng cộng:\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-700\">\r\n                    {calculateTotal().toLocaleString('vi-VN')} đ\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"grid grid-cols-2 gap-4 mt-8\">\r\n            <div className=\"text-center\">\r\n              <p className=\"font-medium\">Người lập phiếu</p>\r\n              <p className=\"text-gray-500 text-sm\">(Ký, ghi rõ họ tên)</p>\r\n              <div className=\"h-16\"></div>\r\n              <p>Nguyễn Thị Hà</p>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <p className=\"font-medium\">Người nhận thuốc</p>\r\n              <p className=\"text-gray-500 text-sm\">(Ký, ghi rõ họ tên)</p>\r\n              <div className=\"h-16\"></div>\r\n              <p>{patient.fullName}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>;\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1119, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/datats/mockPatients.ts"],"sourcesContent":["// Dữ liệu được fetched từ API thay vì dùng static data\r\nimport axiosInstance from '../services/axios.customize.service';\r\n\r\n// Khai báo các interface\r\nexport interface User {\r\n  _id: string;\r\n  userId: string;\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n  fullName: string;\r\n  phone: string;\r\n  role: 'PATIENT' | 'DOCTOR' | 'PHARMACIST' | 'RECEPTIONIST' | 'ADMIN';\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  __v: number;\r\n}\r\n\r\nexport interface Queue {\r\n  _id: string;\r\n  patient: string; // ObjectId của bệnh nhân\r\n  status: 'waiting' | 'in_progress' | 'completed' | 'canceled';\r\n  doctorId?: string; // ObjectId của bác sĩ được chỉ định (nếu có)\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  __v: number;\r\n}\r\n\r\nexport interface Prescription {\r\n  _id: string;\r\n  customPrescriptionId: string;\r\n  patientId: string; // ObjectId\r\n  doctorId: string; // ObjectId\r\n  diagnosis: string;\r\n  date: string;\r\n  status: 'PENDING_DISPENSE' | 'DISPENSED' | 'CANCELED';\r\n  __v: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nexport interface PrescriptionDetail {\r\n  _id: string;\r\n  customPrescriptionDetailId: string;\r\n  prescriptionId: string; // ObjectId\r\n  medicineId: string; // ObjectId\r\n  quantity: number;\r\n  dosage: string;\r\n  __v: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nexport interface Medicine {\r\n  _id: string;\r\n  customMedicineId: string;\r\n  name: string;\r\n  totalPills: number;\r\n  price: number;\r\n  __v: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nexport interface Invoice {\r\n  _id: string;\r\n  prescriptionId: string; // ObjectId\r\n  patientId: string; // ObjectId\r\n  totalAmount: number;\r\n  status: 'PAID' | 'UNPAID';\r\n  __v: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\n// Biến cache để lưu trữ dữ liệu từ API\r\nexport let mockUsers: User[] = [];\r\nexport let mockQueues: Queue[] = [];\r\nexport let mockMedicines: Medicine[] = [];\r\nexport let mockPrescriptions: Prescription[] = [];\r\nexport let mockPrescriptionDetails: PrescriptionDetail[] = [];\r\nexport let mockInvoices: Invoice[] = [];\r\n\r\n// Biến toàn cục để lưu token xác thực\r\nlet authToken: string | null = null;\r\n\r\n// Hàm thiết lập token khi người dùng đăng nhập\r\nexport const setAuthToken = (token: string) => {\r\n  authToken = token;\r\n  if (typeof window !== 'undefined') { // Kiểm tra nếu đang chạy trên browser\r\n    localStorage.setItem('authToken', token); // Lưu token vào localStorage để giữ qua refresh\r\n  }\r\n};\r\n\r\n// Hàm để lấy token hiện tại\r\nexport const getAuthToken = () => {\r\n  // Nếu không có token trong memory, thử lấy từ localStorage\r\n  if (!authToken && typeof window !== 'undefined') {\r\n    authToken = localStorage.getItem('authToken');\r\n  }\r\n  return authToken;\r\n};\r\n\r\n// Helper function để thực hiện API call có xác thực\r\nconst authenticatedGet = async (endpoint: string) => {\r\n  try {\r\n    // Lấy token từ localStorage hoặc cookies\r\n    let token = getAuthToken();\r\n    \r\n    // Thử lấy token từ cookies nếu không tìm thấy trong localStorage\r\n    if (!token && typeof document !== 'undefined') {\r\n      // Check browser cookies if localStorage doesn't have the token\r\n      const cookies = document.cookie.split(';');\r\n      const tokenCookie = cookies.find(c => c.trim().startsWith('token='));\r\n      if (tokenCookie) {\r\n        token = tokenCookie.split('=')[1];\r\n        console.log(\"Found token in cookies, using it for API calls\");\r\n        // Lưu lại vào authToken để sử dụng cho các lần sau\r\n        setAuthToken(token);\r\n      }\r\n    }\r\n    \r\n    if (!token) {\r\n      console.warn('No authentication token available for API call to:', endpoint);\r\n      console.warn('Please login first or check token storage.');\r\n      return null;\r\n    }\r\n\r\n    console.log(`Making authenticated request to ${endpoint}`);\r\n    console.log(`Using token (first 10 chars): ${token.substring(0, 10)}...`);\r\n\r\n    const response = await axiosInstance.get(endpoint, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    \r\n    console.log(`Successful response from ${endpoint}:`, response.status);\r\n    if (Array.isArray(response.data)) {\r\n      console.log(`Got ${response.data.length} items from ${endpoint}`);\r\n    } else {\r\n      console.log(`Got data from ${endpoint}:`, response.data ? 'Object returned' : 'Empty response');\r\n    }\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error(`Error fetching from ${endpoint}:`, error.message);\r\n    \r\n    // Log more detailed error info\r\n    if (error.response) {\r\n      console.error('Response status:', error.response.status);\r\n      console.error('Response data:', error.response.data);\r\n      \r\n      if (error.response.status === 403) {\r\n        console.error(`Access forbidden to ${endpoint} - check user permissions`);\r\n      } else if (error.response.status === 401) {\r\n        console.error(`Unauthorized access to ${endpoint} - token may be expired`);\r\n        // Thử xóa token để người dùng phải đăng nhập lại\r\n        if (typeof window !== 'undefined') {\r\n          localStorage.removeItem('authToken');\r\n          document.cookie = 'token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\r\n          authToken = null;\r\n        }\r\n      }\r\n    } else if (error.request) {\r\n      console.error('No response received from request. Server may be down.');\r\n    } else {\r\n      console.error('Error setting up request:', error.message);\r\n    }\r\n    \r\n    return null;\r\n  }\r\n};\r\n\r\n// ============= FETCH DATA FUNCTIONS =============\r\n\r\n// Load users từ API\r\nexport const fetchUsers = async () => {\r\n  console.log('Fetching users from API...');\r\n  \r\n  // Đầu tiên thử lấy thông tin user hiện tại để biết role\r\n  try {\r\n    const currentUser = await authenticatedGet('/users/me');\r\n    \r\n    if (currentUser) {\r\n      console.log(`Current user role: ${currentUser.role}`);\r\n      \r\n      if (currentUser.role === 'ADMIN') {\r\n        // Nếu là ADMIN, có quyền lấy tất cả users\r\n        console.log('User is ADMIN, trying to fetch all users');\r\n        const data = await authenticatedGet('/users');\r\n        \r\n        if (data && Array.isArray(data)) {\r\n          console.log(`Successfully fetched ${data.length} users from API`);\r\n          mockUsers = data;\r\n          return data;\r\n        }\r\n      } \r\n      \r\n      // Dù là role nào, thử dùng endpoint mới để lấy danh sách bệnh nhân\r\n      if (['ADMIN', 'DOCTOR', 'PHARMACIST', 'RECEPTIONIST'].includes(currentUser.role)) {\r\n        console.log(`Trying to fetch patients using /users/patients endpoint for ${currentUser.role}`);\r\n        const patients = await authenticatedGet('/users/patients');\r\n        \r\n        if (patients && Array.isArray(patients)) {\r\n          console.log(`Successfully fetched ${patients.length} patients from API`);\r\n          \r\n          // Kết hợp với dữ liệu hiện có (nếu có)\r\n          // Giữ lại các user không phải bệnh nhân từ danh sách hiện có (nếu có)\r\n          const nonPatients = mockUsers.filter(user => user.role !== 'PATIENT');\r\n          mockUsers = [...nonPatients, ...patients];\r\n          \r\n          console.log(`Combined user data: ${mockUsers.length} users (${nonPatients.length} non-patients + ${patients.length} patients)`);\r\n          return mockUsers;\r\n        }\r\n      }\r\n      \r\n      // Nếu không thể lấy dữ liệu, giữ nguyên dữ liệu mockUsers hiện tại\r\n      console.log(`Using existing mock data with ${mockUsers.length} users`);\r\n      return [...mockUsers];\r\n    } else {\r\n      console.error('Could not fetch current user info, authentication may be invalid');\r\n      return mockUsers;\r\n    }\r\n  } catch (error) {\r\n    console.error('Error in fetchUsers:', error);\r\n    return mockUsers;\r\n  }\r\n};\r\n\r\n// Load queues từ API\r\nexport const fetchQueues = async () => {\r\n  const data = await authenticatedGet('/queues');\r\n  if (data && Array.isArray(data)) {\r\n    mockQueues = data;\r\n    return data;\r\n  }\r\n  return [];\r\n};\r\n\r\n// Load medicines từ API\r\nexport const fetchMedicines = async () => {\r\n  const data = await authenticatedGet('/medicines');\r\n  if (data && Array.isArray(data)) {\r\n    mockMedicines = data;\r\n    return data;\r\n  }\r\n  return [];\r\n};\r\n\r\n// Load prescriptions từ API\r\nexport const fetchPrescriptions = async () => {\r\n  const data = await authenticatedGet('/prescriptions');\r\n  if (data && Array.isArray(data)) {\r\n    mockPrescriptions = data;\r\n    return data;\r\n  }\r\n  return [];\r\n};\r\n\r\n// Load prescription details từ API\r\nexport const fetchPrescriptionDetails = async () => {\r\n  const data = await authenticatedGet('/prescription-details');\r\n  if (data && Array.isArray(data)) {\r\n    mockPrescriptionDetails = data;\r\n    return data;\r\n  }\r\n  return [];\r\n};\r\n\r\n// Load invoices từ API\r\nexport const fetchInvoices = async () => {\r\n  const data = await authenticatedGet('/invoices');\r\n  if (data && Array.isArray(data)) {\r\n    mockInvoices = data;\r\n    return data;\r\n  }\r\n  return [];\r\n};\r\n\r\n// Initialize all data (call when app starts)\r\nexport const initializeData = async () => {\r\n  console.log('Initializing data from API or mock sources...');\r\n  \r\n  try {\r\n    // Check if we have a valid token first\r\n    const token = getAuthToken();\r\n    if (!token) {\r\n      console.warn('No authentication token found, will use existing mock data');\r\n      return false;\r\n    }\r\n    \r\n    // Try to validate token\r\n    try {\r\n      console.log('Validating token before fetching data...');\r\n      const currentUser = await authenticatedGet('/users/me');\r\n      if (!currentUser) {\r\n        console.error('Token validation failed, cannot fetch data');\r\n        return false;\r\n      }\r\n      console.log(`Token valid, logged in as ${currentUser.username} (${currentUser.role})`);\r\n    } catch (error) {\r\n      console.error('Error validating token:', error);\r\n      return false;\r\n    }\r\n    \r\n    // Initialize with separate try/catch for each resource type\r\n    // This allows some data to load even if others fail\r\n    const results = {\r\n      users: false,\r\n      queues: false,\r\n      medicines: false,\r\n      prescriptions: false,\r\n      prescriptionDetails: false,\r\n      invoices: false\r\n    };\r\n    \r\n    try {\r\n      await fetchUsers();\r\n      results.users = true;\r\n      console.log(`Users loaded: ${mockUsers.length} items`);\r\n    } catch (error) {\r\n      console.error('Error loading users:', error);\r\n    }\r\n    \r\n    try {\r\n      await fetchQueues();\r\n      results.queues = true;\r\n      console.log(`Queues loaded: ${mockQueues.length} items`);\r\n    } catch (error) {\r\n      console.error('Error loading queues:', error);\r\n    }\r\n    \r\n    try {\r\n      await fetchMedicines();\r\n      results.medicines = true;\r\n      console.log(`Medicines loaded: ${mockMedicines.length} items`);\r\n    } catch (error) {\r\n      console.error('Error loading medicines:', error);\r\n    }\r\n    \r\n    try {\r\n      await fetchPrescriptions();\r\n      results.prescriptions = true;\r\n      console.log(`Prescriptions loaded: ${mockPrescriptions.length} items`);\r\n    } catch (error) {\r\n      console.error('Error loading prescriptions:', error);\r\n    }\r\n    \r\n    try {\r\n      await fetchPrescriptionDetails();\r\n      results.prescriptionDetails = true;\r\n      console.log(`Prescription details loaded: ${mockPrescriptionDetails.length} items`);\r\n    } catch (error) {\r\n      console.error('Error loading prescription details:', error);\r\n    }\r\n    \r\n    try {\r\n      await fetchInvoices();\r\n      results.invoices = true;\r\n      console.log(`Invoices loaded: ${mockInvoices.length} items`);\r\n    } catch (error) {\r\n      console.error('Error loading invoices:', error);\r\n    }\r\n    \r\n    const successCount = Object.values(results).filter(Boolean).length;\r\n    console.log(`Data initialization complete: ${successCount}/6 resource types loaded successfully`);\r\n    \r\n    return successCount > 0;\r\n  } catch (error) {\r\n    console.error('Error in data initialization:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// ============= USER-RELATED FUNCTIONS =============\r\n\r\nexport const getAllUsers = async () => {\r\n  if (mockUsers.length === 0) {\r\n    await fetchUsers();\r\n  }\r\n  return [...mockUsers];\r\n};\r\n\r\nexport const getUserById = async (id: string) => {\r\n  if (mockUsers.length === 0) {\r\n    await fetchUsers();\r\n  }\r\n  return mockUsers.find(user => user._id === id);\r\n};\r\n\r\nexport const getUsersByRole = async (role: string) => {\r\n  if (mockUsers.length === 0) {\r\n    await fetchUsers();\r\n  }\r\n  return mockUsers.filter(user => user.role === role);\r\n};\r\n\r\nexport const searchUsers = async (searchTerm: string) => {\r\n  if (mockUsers.length === 0) {\r\n    await fetchUsers();\r\n  }\r\n  const term = searchTerm.toLowerCase();\r\n  return mockUsers.filter(user => \r\n    user.fullName.toLowerCase().includes(term) || \r\n    user.username.toLowerCase().includes(term) ||\r\n    user.email.toLowerCase().includes(term) ||\r\n    user.phone.includes(term) ||\r\n    user.userId.includes(term)\r\n  );\r\n};\r\n\r\n// ============= QUEUE-RELATED FUNCTIONS =============\r\n\r\nexport const getAllQueues = async () => {\r\n  if (mockQueues.length === 0) {\r\n    await fetchQueues();\r\n  }\r\n  return [...mockQueues];\r\n};\r\n\r\nexport const getQueuesByStatus = async (status: string) => {\r\n  if (mockQueues.length === 0) {\r\n    await fetchQueues();\r\n  }\r\n  return mockQueues.filter(queue => queue.status === status);\r\n};\r\n\r\nexport const getQueueByPatientId = async (patientId: string) => {\r\n  if (mockQueues.length === 0) {\r\n    await fetchQueues();\r\n  }\r\n  return mockQueues.find(queue => queue.patient === patientId);\r\n};\r\n\r\nexport const addQueue = async (patientId: string, status: 'waiting' | 'in_progress' | 'completed' | 'canceled' = 'waiting') => {\r\n  // Kiểm tra xem patientId có tồn tại và là bệnh nhân không\r\n  const patient = await getUserById(patientId);\r\n  if (!patient || patient.role !== 'PATIENT') {\r\n    console.error('Invalid patient ID or user is not a patient');\r\n    return null;\r\n  }\r\n\r\n  // Kiểm tra xem bệnh nhân đã có trong queue chưa\r\n  const existingQueue = await getQueueByPatientId(patientId);\r\n  if (existingQueue) {\r\n    console.warn('Patient already in queue');\r\n    return existingQueue;\r\n  }\r\n\r\n  // Tạo queue mới\r\n  const newQueue: Queue = {\r\n    _id: generateMongoId(),\r\n    patient: patientId,\r\n    status: status,\r\n    createdAt: new Date().toISOString(),\r\n    updatedAt: new Date().toISOString(),\r\n    __v: 0\r\n  };\r\n\r\n  // Gọi API để tạo queue thực sự qua API\r\n  try {\r\n    // Đây là phần sẽ gọi API thực tế\r\n    // const response = await axiosInstance.post('/queues', newQueue, {\r\n    //   headers: { Authorization: `Bearer ${getAuthToken()}` }\r\n    // });\r\n    // if (response.data) {\r\n    //   mockQueues.push(response.data);\r\n    //   return response.data;\r\n    // }\r\n    \r\n    // Hiện tại, chúng ta chỉ thêm vào cache\r\n    mockQueues.push(newQueue);\r\n    return newQueue;\r\n  } catch (error) {\r\n    console.error('Error creating queue:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const updateQueueStatus = async (\r\n  queueId: string, \r\n  status: 'waiting' | 'in_progress' | 'completed' | 'canceled', \r\n  doctorId?: string\r\n) => {\r\n  if (mockQueues.length === 0) {\r\n    await fetchQueues();\r\n  }\r\n  \r\n  const index = mockQueues.findIndex(queue => queue._id === queueId);\r\n  if (index !== -1) {\r\n    const updatedQueue = {\r\n      ...mockQueues[index],\r\n      status: status,\r\n      updatedAt: new Date().toISOString()\r\n    };\r\n    \r\n    if (doctorId && status === 'in_progress') {\r\n      updatedQueue.doctorId = doctorId;\r\n    }\r\n    \r\n    // Thực tế sẽ gọi API để cập nhật queue\r\n    // const response = await axiosInstance.put(`/queues/${queueId}`, updatedQueue, {\r\n    //   headers: { Authorization: `Bearer ${getAuthToken()}` }\r\n    // });\r\n    \r\n    // Hiện tại chỉ cập nhật trong cache\r\n    mockQueues[index] = updatedQueue;\r\n    return mockQueues[index];\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const deleteQueue = async (queueId: string) => {\r\n  if (mockQueues.length === 0) {\r\n    await fetchQueues();\r\n  }\r\n  \r\n  const index = mockQueues.findIndex(queue => queue._id === queueId);\r\n  if (index !== -1) {\r\n    const deletedQueue = mockQueues[index];\r\n    \r\n    // Thực tế sẽ gọi API để xóa queue\r\n    // await axiosInstance.delete(`/queues/${queueId}`, {\r\n    //   headers: { Authorization: `Bearer ${getAuthToken()}` }\r\n    // });\r\n    \r\n    // Hiện tại chỉ xóa trong cache\r\n    mockQueues.splice(index, 1);\r\n    return deletedQueue;\r\n  }\r\n  return null;\r\n};\r\n\r\n// ============= MEDICINE-RELATED FUNCTIONS =============\r\n\r\nexport const getAllMedicines = async () => {\r\n  if (mockMedicines.length === 0) {\r\n    await fetchMedicines();\r\n  }\r\n  return [...mockMedicines];\r\n};\r\n\r\nexport const getMedicineById = async (id: string) => {\r\n  if (mockMedicines.length === 0) {\r\n    await fetchMedicines();\r\n  }\r\n  return mockMedicines.find(medicine => medicine._id === id);\r\n};\r\n\r\nexport const searchMedicines = async (searchTerm: string) => {\r\n  if (mockMedicines.length === 0) {\r\n    await fetchMedicines();\r\n  }\r\n  const term = searchTerm.toLowerCase();\r\n  return mockMedicines.filter(medicine => \r\n    medicine.name.toLowerCase().includes(term) || \r\n    medicine.customMedicineId.toLowerCase().includes(term)\r\n  );\r\n};\r\n\r\n// ============= PRESCRIPTION-RELATED FUNCTIONS =============\r\n\r\nexport const getAllPrescriptions = async () => {\r\n  if (mockPrescriptions.length === 0) {\r\n    await fetchPrescriptions();\r\n  }\r\n  return [...mockPrescriptions];\r\n};\r\n\r\nexport const getPrescriptionById = async (id: string) => {\r\n  if (mockPrescriptions.length === 0) {\r\n    await fetchPrescriptions();\r\n  }\r\n  return mockPrescriptions.find(prescription => prescription._id === id);\r\n};\r\n\r\nexport const getPrescriptionsByPatientId = async (patientId: string) => {\r\n  if (mockPrescriptions.length === 0) {\r\n    await fetchPrescriptions();\r\n  }\r\n  return mockPrescriptions.filter(prescription => prescription.patientId === patientId);\r\n};\r\n\r\nexport const getPrescriptionsByDoctorId = async (doctorId: string) => {\r\n  if (mockPrescriptions.length === 0) {\r\n    await fetchPrescriptions();\r\n  }\r\n  return mockPrescriptions.filter(prescription => prescription.doctorId === doctorId);\r\n};\r\n\r\nexport const getPrescriptionsByStatus = async (status: string) => {\r\n  if (mockPrescriptions.length === 0) {\r\n    await fetchPrescriptions();\r\n  }\r\n  return mockPrescriptions.filter(prescription => prescription.status === status);\r\n};\r\n\r\n// ============= PRESCRIPTION DETAIL-RELATED FUNCTIONS =============\r\n\r\nexport const getAllPrescriptionDetails = async () => {\r\n  if (mockPrescriptionDetails.length === 0) {\r\n    await fetchPrescriptionDetails();\r\n  }\r\n  return [...mockPrescriptionDetails];\r\n};\r\n\r\nexport const getPrescriptionDetailsByPrescriptionId = async (prescriptionId: string) => {\r\n  if (mockPrescriptionDetails.length === 0) {\r\n    await fetchPrescriptionDetails();\r\n  }\r\n  return mockPrescriptionDetails.filter(detail => detail.prescriptionId === prescriptionId);\r\n};\r\n\r\nexport const getMedicinesForPrescription = async (prescriptionId: string) => {\r\n  const details = await getPrescriptionDetailsByPrescriptionId(prescriptionId);\r\n  \r\n  const result = [];\r\n  for (const detail of details) {\r\n    const medicine = await getMedicineById(detail.medicineId);\r\n    result.push({\r\n      ...detail,\r\n      medicine: medicine || null\r\n    });\r\n  }\r\n  \r\n  return result;\r\n};\r\n\r\n// ============= INVOICE-RELATED FUNCTIONS =============\r\n\r\nexport const getAllInvoices = async () => {\r\n  if (mockInvoices.length === 0) {\r\n    await fetchInvoices();\r\n  }\r\n  return [...mockInvoices];\r\n};\r\n\r\nexport const getInvoiceById = async (id: string) => {\r\n  if (mockInvoices.length === 0) {\r\n    await fetchInvoices();\r\n  }\r\n  return mockInvoices.find(invoice => invoice._id === id);\r\n};\r\n\r\nexport const getInvoiceByPrescriptionId = async (prescriptionId: string) => {\r\n  if (mockInvoices.length === 0) {\r\n    await fetchInvoices();\r\n  }\r\n  return mockInvoices.find(invoice => invoice.prescriptionId === prescriptionId);\r\n};\r\n\r\nexport const getInvoicesByPatientId = async (patientId: string) => {\r\n  if (mockInvoices.length === 0) {\r\n    await fetchInvoices();\r\n  }\r\n  return mockInvoices.filter(invoice => invoice.patientId === patientId);\r\n};\r\n\r\nexport const getInvoicesByStatus = async (status: string) => {\r\n  if (mockInvoices.length === 0) {\r\n    await fetchInvoices();\r\n  }\r\n  return mockInvoices.filter(invoice => invoice.status === status);\r\n};\r\n\r\n// ============= UTILITY FUNCTIONS =============\r\n\r\nexport const getPatientFullPrescriptionDetails = async (patientId: string) => {\r\n  const prescriptions = await getPrescriptionsByPatientId(patientId);\r\n  \r\n  const result = [];\r\n  for (const prescription of prescriptions) {\r\n    // Lấy thông tin bác sĩ\r\n    const doctor = await getUserById(prescription.doctorId);\r\n    \r\n    // Lấy chi tiết đơn thuốc và thông tin thuốc\r\n    const details = await getPrescriptionDetailsByPrescriptionId(prescription._id);\r\n    const medicineDetails = [];\r\n    \r\n    for (const detail of details) {\r\n      const medicine = await getMedicineById(detail.medicineId);\r\n      medicineDetails.push({\r\n        ...detail,\r\n        medicineName: medicine ? medicine.name : 'Unknown',\r\n        medicinePrice: medicine ? medicine.price : 0\r\n      });\r\n    }\r\n    \r\n    // Lấy hóa đơn nếu có\r\n    const invoice = await getInvoiceByPrescriptionId(prescription._id);\r\n    \r\n    result.push({\r\n      ...prescription,\r\n      doctorName: doctor ? doctor.fullName : 'Unknown',\r\n      details: medicineDetails,\r\n      invoice: invoice || null\r\n    });\r\n  }\r\n  \r\n  return result;\r\n};\r\n\r\nexport const getAllPatients = async () => {\r\n  if (mockUsers.length === 0) {\r\n    await fetchUsers();\r\n  }\r\n  return mockUsers.filter(user => user.role === 'PATIENT');\r\n};\r\n\r\nexport const getAllDoctors = async () => {\r\n  if (mockUsers.length === 0) {\r\n    await fetchUsers();\r\n  }\r\n  return mockUsers.filter(user => user.role === 'DOCTOR');\r\n};\r\n\r\nexport type Patient = User;\r\nexport const mockPatients = getAllPatients;\r\n\r\nexport const getWaitingPatients = async () => {\r\n  const waitingQueues = await getQueuesByStatus('waiting');\r\n  \r\n  const result = [];\r\n  for (const queue of waitingQueues) {\r\n    const patient = await getUserById(queue.patient);\r\n    result.push({\r\n      queueInfo: queue,\r\n      patientInfo: patient || null\r\n    });\r\n  }\r\n  \r\n  return result;\r\n};\r\n\r\nexport const getAllQueuesWithPatientInfo = async () => {\r\n  if (mockQueues.length === 0) {\r\n    await fetchQueues();\r\n  }\r\n  \r\n  const result = [];\r\n  for (const queue of mockQueues) {\r\n    const patient = await getUserById(queue.patient);\r\n    result.push({\r\n      ...queue,\r\n      patientInfo: patient || null\r\n    });\r\n  }\r\n  \r\n  return result;\r\n};\r\n\r\n// Hàm tạo MongoDB-like ID\r\nexport const generateMongoId = () => {\r\n  // MongoDB ObjectId format: 24 hex characters\r\n  const timestamp = Math.floor(Date.now() / 1000).toString(16).padStart(8, '0');\r\n  const randomPart = Array(16).fill(0).map(() => Math.floor(Math.random() * 16).toString(16)).join('');\r\n  return timestamp + randomPart;\r\n};\r\n\r\n// Hàm để làm mới/reload dữ liệu từ API\r\nexport const reloadData = async (dataTypes?: ('users' | 'queues' | 'medicines' | 'prescriptions' | 'prescriptionDetails' | 'invoices')[]) => {\r\n  if (!dataTypes || dataTypes.length === 0) {\r\n    // Reload tất cả\r\n    return await initializeData();\r\n  }\r\n\r\n  const promises = [];\r\n  if (dataTypes.includes('users')) promises.push(fetchUsers());\r\n  if (dataTypes.includes('queues')) promises.push(fetchQueues());\r\n  if (dataTypes.includes('medicines')) promises.push(fetchMedicines());\r\n  if (dataTypes.includes('prescriptions')) promises.push(fetchPrescriptions());\r\n  if (dataTypes.includes('prescriptionDetails')) promises.push(fetchPrescriptionDetails());\r\n  if (dataTypes.includes('invoices')) promises.push(fetchInvoices());\r\n  \r\n  await Promise.all(promises);\r\n  return {\r\n    users: mockUsers.length,\r\n    queues: mockQueues.length,\r\n    medicines: mockMedicines.length,\r\n    prescriptions: mockPrescriptions.length,\r\n    prescriptionDetails: mockPrescriptionDetails.length,\r\n    invoices: mockInvoices.length\r\n  };\r\n};\r\n\r\n// Hàm thay thế để lấy dữ liệu khi không có quyền admin\r\nexport const fetchUsersAlternative = async () => {\r\n  console.log('Trying alternative method to fetch users...');\r\n  \r\n  try {\r\n    // Thử lấy thông tin người dùng hiện tại (me endpoint)\r\n    const currentUser = await authenticatedGet('/users/me');\r\n    if (!currentUser) {\r\n      console.warn('Could not fetch current user');\r\n      return [];\r\n    }\r\n    \r\n    console.log('Current user retrieved:', currentUser.role);\r\n    \r\n    if (currentUser.role === 'ADMIN') {\r\n      // Nếu là admin, thử lại với endpoint /users\r\n      return await fetchUsers();\r\n    }\r\n    \r\n    // Không phải admin, phải dùng cách khác\r\n    // 1. Nếu là bác sĩ, có thể lấy danh sách bệnh nhân được chỉ định\r\n    // 2. Nếu là receptionist, thử lấy dữ liệu theo cách khác\r\n    \r\n    // Endpoint hoặc API call thích hợp theo role\r\n    // Ví dụ: const patients = await authenticatedGet('/appointments/patients');\r\n    \r\n    // Tạm thời giữ nguyên dữ liệu hiện tại nếu có\r\n    return mockUsers.length > 0 ? mockUsers : [];\r\n  } catch (error) {\r\n    console.error('Alternative user fetch failed:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Mock function để gửi thông tin queue đến bác sĩ\r\nexport const sendQueueToDoctor = async (queueId: string): Promise<Queue | null> => {\r\n  try {\r\n    // Lấy thông tin queue\r\n    const queue = mockQueues.find(q => q._id === queueId);\r\n    \r\n    if (!queue) {\r\n      console.error(`Queue with ID ${queueId} not found.`);\r\n      return null;\r\n    }\r\n    \r\n    // Kiểm tra xem queue đã được gán cho bác sĩ chưa\r\n    if (!queue.doctorId) {\r\n      console.error(`Queue ${queueId} has no assigned doctor.`);\r\n      return null;\r\n    }\r\n    \r\n    // Trong môi trường thực tế, tại đây sẽ có logic gửi thông báo đến bác sĩ\r\n    // Trong mock data, ta chỉ cần đảm bảo trạng thái là in_progress\r\n    if (queue.status !== 'in_progress') {\r\n      queue.status = 'in_progress';\r\n      queue.updatedAt = new Date().toISOString();\r\n    }\r\n    \r\n    console.log(`Mock: Queue ${queueId} information sent to doctor ${queue.doctorId}`);\r\n    return queue;\r\n  } catch (error) {\r\n    console.error('Error sending queue information to doctor:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1822, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/pharmacyPage/pharmacyUtils.ts"],"sourcesContent":["import { \r\n  User, \r\n  Prescription, \r\n  PrescriptionDetail, \r\n  Medicine,\r\n  getPrescriptionsByStatus,\r\n  getUserById,\r\n  getPrescriptionDetailsByPrescriptionId,\r\n  getMedicineById,\r\n  getAllInvoices,\r\n  initializeData\r\n} from '../datats/mockPatients';\r\nimport * as apiService from '../services/api.service';\r\n\r\n// Type definitions to match the pharmacy page UI needs\r\nexport interface PharmacyPatient {\r\n  id: string; // Prescription ID\r\n  serialNumber: string;\r\n  fullName: string;\r\n  phone: string;\r\n  diagnosis: string;\r\n  doctor: string;\r\n  prescription: PharmacyMedicine[];\r\n}\r\n\r\nexport interface PharmacyMedicine {\r\n  name: string;\r\n  quantity: number;\r\n  dosage: string;\r\n  price: number;\r\n}\r\n\r\nexport interface PharmacyInvoice {\r\n  id: string;\r\n  date: string;\r\n  patientId: string;\r\n  pharmacistName: string;\r\n  totalAmount: number;\r\n}\r\n\r\n// Function to get patients with pending prescriptions for the pharmacy\r\nexport const getPatientsWithPendingPrescriptions = async (): Promise<PharmacyPatient[]> => {\r\n  try {\r\n    // Try to get authentication token from localStorage\r\n    const tokenFromStorage = localStorage.getItem('token');\r\n    \r\n    if (tokenFromStorage) {\r\n      try {\r\n        console.log('Fetching pending prescriptions with status PENDING_DISPENSE from API');\r\n        // If we have a token, try to use the real API\r\n        const prescriptions = await apiService.getPrescriptions({ status: 'PENDING_DISPENSE' }, tokenFromStorage);\r\n        console.log(`Fetched ${prescriptions.length} prescriptions with status PENDING_DISPENSE`);\r\n        \r\n        const result: PharmacyPatient[] = [];\r\n        \r\n        for (const prescription of prescriptions) {\r\n          // The API already populates patientId and doctorId\r\n          const patient = prescription.patientId;\r\n          const doctor = prescription.doctorId;\r\n          \r\n          if (!patient || !doctor) {\r\n            console.warn(`Prescription ${prescription._id} is missing patient or doctor data, skipping`);\r\n            continue;\r\n          }\r\n          \r\n          try {\r\n            // Get prescription details\r\n            console.log(`Fetching prescription details for prescription ID: ${prescription._id}`);\r\n            const prescriptionDetails = await apiService.getPrescriptionDetails(prescription._id, tokenFromStorage);\r\n            console.log(`Fetched ${prescriptionDetails.length} prescription details`);\r\n            \r\n            // Map prescription details to medicines\r\n            const medicines: PharmacyMedicine[] = [];\r\n            \r\n            for (const detail of prescriptionDetails) {\r\n              // We need to get medicine details for each prescription detail\r\n              try {\r\n                const medicine = await apiService.getMedicineById(detail.medicineId, tokenFromStorage);\r\n                medicines.push({\r\n                  name: medicine?.name || 'Unknown',\r\n                  quantity: detail.quantity,\r\n                  dosage: detail.dosage,\r\n                  price: medicine?.price || 0\r\n                });\r\n              } catch (medError) {\r\n                console.warn(`Error fetching medicine ${detail.medicineId}, falling back to mock data:`, medError);\r\n                // If we can't get the medicine from API, use mock data\r\n                const mockMedicine = await getMedicineById(detail.medicineId);\r\n                medicines.push({\r\n                  name: mockMedicine?.name || 'Unknown',\r\n                  quantity: detail.quantity,\r\n                  dosage: detail.dosage,\r\n                  price: mockMedicine?.price || 0\r\n                });\r\n              }\r\n            }\r\n            \r\n            result.push({\r\n              id: prescription._id,\r\n              serialNumber: prescription.customPrescriptionId,\r\n              fullName: patient?.fullName || 'Unknown',\r\n              phone: patient?.phone || 'N/A',\r\n              diagnosis: prescription.diagnosis,\r\n              doctor: doctor?.fullName || 'Không xác định',\r\n              prescription: medicines\r\n            });\r\n          } catch (detailsError) {\r\n            console.error(`Error fetching prescription details for prescription ${prescription._id}:`, detailsError);\r\n          }\r\n        }\r\n        \r\n        console.log(`Prepared ${result.length} pharmacy patients with their prescription details`);\r\n        return result;\r\n      } catch (apiError) {\r\n        console.error(\"API error, falling back to mock data:\", apiError);\r\n        // Fall back to mock data if API fails\r\n        return fetchMockPendingPrescriptions();\r\n      }\r\n    } else {\r\n      console.log(\"No authentication token found, using mock data\");\r\n      // If no token, use mock data\r\n      return fetchMockPendingPrescriptions();\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching pending prescriptions:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Separate function for fetching mock data\r\nconst fetchMockPendingPrescriptions = async (): Promise<PharmacyPatient[]> => {\r\n  console.log('Fetching pending prescriptions from mock data');\r\n  // Initialize mock data if needed\r\n  await initializeData();\r\n  \r\n  const pendingPrescriptions = await getPrescriptionsByStatus('PENDING_DISPENSE');\r\n  console.log(`Fetched ${pendingPrescriptions.length} mock prescriptions with status PENDING_DISPENSE`);\r\n  \r\n  const result: PharmacyPatient[] = [];\r\n  \r\n  for (const prescription of pendingPrescriptions) {\r\n    try {\r\n      // Get patient details\r\n      const patient = await getUserById(prescription.patientId);\r\n      if (!patient) {\r\n        console.warn(`Mock patient with ID ${prescription.patientId} not found for prescription ${prescription._id}`);\r\n        continue;\r\n      }\r\n      \r\n      // Get doctor details\r\n      const doctor = await getUserById(prescription.doctorId);\r\n      if (!doctor) {\r\n        console.warn(`Mock doctor with ID ${prescription.doctorId} not found for prescription ${prescription._id}`);\r\n        continue;\r\n      }\r\n      \r\n      // Get prescription details\r\n      const prescriptionDetails = await getPrescriptionDetailsByPrescriptionId(prescription._id);\r\n      console.log(`Found ${prescriptionDetails.length} mock prescription details for prescription ${prescription._id}`);\r\n      \r\n      // Map prescription details to medicines\r\n      const medicines: PharmacyMedicine[] = [];\r\n      \r\n      for (const detail of prescriptionDetails) {\r\n        try {\r\n          const medicine = await getMedicineById(detail.medicineId);\r\n          if (!medicine) {\r\n            console.warn(`Mock medicine with ID ${detail.medicineId} not found`);\r\n            medicines.push({\r\n              name: 'Unknown Medicine',\r\n              quantity: detail.quantity,\r\n              dosage: detail.dosage,\r\n              price: 0\r\n            });\r\n            continue;\r\n          }\r\n          \r\n          medicines.push({\r\n            name: medicine.name,\r\n            quantity: detail.quantity,\r\n            dosage: detail.dosage,\r\n            price: medicine.price\r\n          });\r\n        } catch (medError) {\r\n          console.error(`Error processing mock medicine for detail ${detail._id}:`, medError);\r\n          medicines.push({\r\n            name: 'Error Loading Medicine',\r\n            quantity: detail.quantity,\r\n            dosage: detail.dosage,\r\n            price: 0\r\n          });\r\n        }\r\n      }\r\n      \r\n      result.push({\r\n        id: prescription._id,\r\n        serialNumber: prescription.customPrescriptionId,\r\n        fullName: patient.fullName,\r\n        phone: patient.phone || 'N/A',\r\n        diagnosis: prescription.diagnosis,\r\n        doctor: doctor.fullName || 'Không xác định',\r\n        prescription: medicines\r\n      });\r\n    } catch (error) {\r\n      console.error(`Error processing mock prescription ${prescription._id}:`, error);\r\n    }\r\n  }\r\n  \r\n  console.log(`Prepared ${result.length} pharmacy patients from mock data`);\r\n  return result;\r\n};\r\n\r\n// Function to get pharmacy invoice data\r\nexport const getPharmacyInvoices = async (): Promise<PharmacyInvoice[]> => {\r\n  try {\r\n    const invoices = await getAllInvoices();\r\n    const result: PharmacyInvoice[] = [];\r\n    \r\n    for (const invoice of invoices) {\r\n      // Get pharmacist information (default to a specific ID if needed)\r\n      const pharmacist = await getUserById('685face13fc4c04e1bd96c0a'); // Default pharmacist ID\r\n      \r\n      // Return formatted invoice data\r\n      result.push({\r\n        id: invoice._id,\r\n        date: invoice.createdAt, // Use createdAt as the invoice date\r\n        patientId: invoice.patientId,\r\n        pharmacistName: pharmacist?.fullName || 'Nhân viên phát thuốc',\r\n        totalAmount: invoice.totalAmount\r\n      });\r\n    }\r\n    \r\n    return result;\r\n  } catch (error) {\r\n    console.error(\"Error fetching pharmacy invoices:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Function to get daily revenue data for statistics\r\nexport const getDailyRevenue = async () => {\r\n  try {\r\n    const today = new Date();\r\n    const result = [];\r\n    \r\n    // Get all invoices\r\n    const allInvoices = await getAllInvoices();\r\n    \r\n    // Create revenue data for the last 7 days\r\n    for (let i = 0; i < 7; i++) {\r\n      const date = new Date(today);\r\n      date.setDate(today.getDate() - i);\r\n      const dateString = date.toISOString().split('T')[0];\r\n      \r\n      // Sum all invoices for this date\r\n      const dateInvoices = allInvoices.filter(invoice => {\r\n        const invoiceDate = new Date(invoice.createdAt);\r\n        return invoiceDate.toISOString().split('T')[0] === dateString;\r\n      });\r\n      \r\n      const totalAmount = dateInvoices.reduce((sum: number, invoice) => sum + invoice.totalAmount, 0);\r\n      \r\n      result.push({\r\n        date: dateString,\r\n        amount: totalAmount\r\n      });\r\n    }\r\n    \r\n    // Sort by date ascending for easier chart rendering\r\n    return result.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\r\n  } catch (error) {\r\n    console.error(\"Error getting daily revenue:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Function to create a new pharmacy invoice\r\nexport const createPharmacyInvoice = async (\r\n  prescriptionId: string, \r\n  totalAmount: number, \r\n  token: string\r\n): Promise<boolean> => {\r\n  try {\r\n    if (!token) {\r\n      console.error(\"No authentication token provided\");\r\n      return false;\r\n    }\r\n    \r\n    console.log(`Creating pharmacy invoice for prescription ${prescriptionId} with total amount ${totalAmount}`);\r\n    \r\n    // 1. Update prescription status to DISPENSED\r\n    try {\r\n      await apiService.updatePrescriptionStatus(prescriptionId, 'DISPENSED', token);\r\n      console.log(`Updated prescription ${prescriptionId} status to DISPENSED`);\r\n    } catch (statusError) {\r\n      console.error(\"Error updating prescription status:\", statusError);\r\n      // Even if status update fails, we'll try to continue with invoice creation\r\n    }\r\n    \r\n    // TODO: In a real implementation, we would also create an actual invoice record\r\n    // For now we just mark the prescription as dispensed\r\n    \r\n    // Simulate successful invoice creation\r\n    const now = new Date();\r\n    const invoiceDate = now.toISOString();\r\n    \r\n    console.log(`Simulated invoice created at ${invoiceDate} for prescription ${prescriptionId}`);\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error creating pharmacy invoice:\", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Function to get real-time pharmacy statistics\r\nexport const getPharmacyStats = async (token: string | null) => {\r\n  try {\r\n    console.log(\"Fetching pharmacy statistics\");\r\n    \r\n    if (token) {\r\n      try {\r\n        // Try to get real counts from the API\r\n        // Get all dispensed prescriptions today\r\n        const today = new Date();\r\n        const startOfDay = new Date(today.getFullYear(), today.getMonth(), today.getDate()).toISOString();\r\n        \r\n        // Count prescriptions by status\r\n        const dispensedToday = await getPrescriptionsCountByStatus('DISPENSED', token, startOfDay);\r\n        const pendingDispense = await getPrescriptionsCountByStatus('PENDING_DISPENSE', token);\r\n        \r\n        console.log(`API stats: ${dispensedToday} dispensed today, ${pendingDispense} pending`);\r\n        \r\n        return {\r\n          dispensedToday,\r\n          pendingDispense,\r\n          totalRevenue: calculateTotalRevenue(dispensedToday),\r\n          averageValue: dispensedToday > 0 ? calculateTotalRevenue(dispensedToday) / dispensedToday : 0\r\n        };\r\n      } catch (apiError) {\r\n        console.error(\"Error fetching pharmacy stats from API:\", apiError);\r\n        // Fall back to mock data\r\n      }\r\n    }\r\n    \r\n    // Return mock statistics\r\n    console.log(\"Using mock pharmacy statistics\");\r\n    return {\r\n      dispensedToday: 5,\r\n      pendingDispense: 3,\r\n      totalRevenue: 1250000,\r\n      averageValue: 250000\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error getting pharmacy stats:\", error);\r\n    return {\r\n      dispensedToday: 0,\r\n      pendingDispense: 0,\r\n      totalRevenue: 0,\r\n      averageValue: 0\r\n    };\r\n  }\r\n};\r\n\r\n// Helper function to get prescription counts by status\r\nasync function getPrescriptionsCountByStatus(status: string, token: string, startDate?: string): Promise<number> {\r\n  try {\r\n    const params: any = { status };\r\n    if (startDate) {\r\n      // If startDate is provided, we're looking for prescriptions created after this date\r\n      params.startDate = startDate;\r\n    }\r\n    \r\n    const prescriptions = await apiService.getPrescriptions(params, token);\r\n    return prescriptions.length;\r\n  } catch (error) {\r\n    console.error(`Error getting count for ${status} prescriptions:`, error);\r\n    return 0;\r\n  }\r\n}\r\n\r\n// Helper function to calculate estimated revenue\r\nfunction calculateTotalRevenue(dispensedCount: number): number {\r\n  // Simple estimation - average 250,000 VND per prescription\r\n  const averagePerPrescription = 250000;\r\n  return dispensedCount * averagePerPrescription;\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2134, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/pharmacyPage/PatientDetails.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ClipboardListIcon, PrinterIcon, UserIcon, PillIcon, AlertTriangle, RefreshCw } from 'lucide-react';\r\nimport { Invoice } from './Invoice';\r\nimport { PharmacyPatient, PharmacyMedicine, createPharmacyInvoice } from './pharmacyUtils';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { getPrescriptionDetails } from '../services/api.service';\r\n\r\ninterface PatientDetailsProps {\r\n  patient: PharmacyPatient;\r\n  onPatientComplete: (id: string) => void;\r\n}\r\n\r\ninterface PrescriptionDetailType {\r\n  _id: string;\r\n  prescriptionId: string;\r\n  medicineId: {\r\n    _id: string;\r\n    name: string;\r\n    price: number;\r\n  };\r\n  quantity: number;\r\n  dosage: string;\r\n}\r\n\r\nexport const PatientDetails = ({\r\n  patient,\r\n  onPatientComplete\r\n}: PatientDetailsProps) => {\r\n  const { token } = useAuth();\r\n  const [showInvoice, setShowInvoice] = useState(false);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [medicines, setMedicines] = useState<PharmacyMedicine[]>(patient.prescription);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  // Reset medicines state when patient changes to avoid showing stale data\r\n  useEffect(() => {\r\n    setMedicines(patient.prescription);\r\n  }, [patient]);\r\n  \r\n  // Fetch prescription details from MongoDB when component loads or patient changes\r\n  useEffect(() => {\r\n    const fetchPrescriptionDetails = async () => {\r\n      if (!token) return;\r\n      \r\n      setIsLoading(true);\r\n      try {\r\n        // Get prescription details from the backend\r\n        const prescriptionDetails = await getPrescriptionDetails(patient.id, token);\r\n        console.log(`Fetched ${prescriptionDetails.length} prescription details from MongoDB for ID: ${patient.id}`);\r\n        \r\n        // Transform prescription details to match our UI format\r\n        if (prescriptionDetails && prescriptionDetails.length > 0) {\r\n          const updatedMedicines: PharmacyMedicine[] = prescriptionDetails.map((detail: PrescriptionDetailType) => ({\r\n            name: detail.medicineId?.name || 'Unknown', // medicineId is populated with name\r\n            quantity: detail.quantity,\r\n            dosage: detail.dosage,\r\n            price: detail.medicineId?.price || 0 // medicineId is populated with price\r\n          }));\r\n          \r\n          setMedicines(updatedMedicines);\r\n        } else {\r\n          // If no prescription details found, reset to an empty array\r\n          // This ensures we don't show old medicines when switching to a patient without prescriptions\r\n          setMedicines([]);\r\n        }\r\n      } catch (err: any) {\r\n        console.error(\"Error fetching prescription details:\", err);\r\n        // Reset medicines to what was passed in props if API fetch fails\r\n        setMedicines(patient.prescription);\r\n        setError(\"Không thể tải chi tiết đơn thuốc từ máy chủ. Đang hiển thị dữ liệu cục bộ.\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchPrescriptionDetails();\r\n  }, [patient.id, token, patient.prescription]);\r\n  \r\n  // Handler for showing invoice\r\n  const handleShowInvoice = async () => {\r\n    setProcessing(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      setShowInvoice(true);\r\n    } catch (err: any) {\r\n      console.error(\"Error preparing invoice:\", err);\r\n      setError(err.message || \"Không thể tạo hóa đơn. Vui lòng thử lại.\");\r\n    } finally {\r\n      setProcessing(false);\r\n    }\r\n  };\r\n  \r\n  // Handler for completing prescription\r\n  const handleComplete = async () => {\r\n    setProcessing(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      if (!token) {\r\n        throw new Error(\"Bạn chưa đăng nhập hoặc phiên đăng nhập đã hết hạn.\");\r\n      }\r\n      \r\n      const totalAmount = calculateTotal();\r\n      \r\n      // Mark prescription as dispensed\r\n      const success = await createPharmacyInvoice(patient.id, totalAmount, token);\r\n      \r\n      if (success) {\r\n        // Close invoice and notify parent component\r\n        setShowInvoice(false);\r\n        onPatientComplete(patient.id);\r\n      } else {\r\n        throw new Error(\"Không thể cập nhật trạng thái đơn thuốc.\");\r\n      }\r\n    } catch (err: any) {\r\n      console.error(\"Error completing prescription:\", err);\r\n      setError(err.message || \"Không thể hoàn thành phát thuốc. Vui lòng thử lại.\");\r\n    } finally {\r\n      setProcessing(false);\r\n    }\r\n  };\r\n  \r\n  if (showInvoice) {\r\n    // Pass our fetched medicines data to Invoice component\r\n    const patientWithUpdatedMeds = {\r\n      ...patient,\r\n      prescription: medicines\r\n    };\r\n    \r\n    return <Invoice \r\n      patient={patientWithUpdatedMeds} \r\n      onClose={() => setShowInvoice(false)} \r\n      onComplete={handleComplete} \r\n    />;\r\n  }\r\n  \r\n  const calculateTotal = () => {\r\n    // Use our fetched medicines instead of patient.prescription\r\n    return medicines.reduce((total, med) => {\r\n      return total + med.price * med.quantity;\r\n    }, 0);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"bg-white border border-gray-300 rounded-lg shadow-sm overflow-hidden\">\r\n      <div className=\"bg-gray-50 px-6 py-4 border-b border-gray-300 flex justify-between items-center\">\r\n        <h2 className=\"text-lg font-semibold text-black flex items-center\">\r\n          <PillIcon size={20} className=\"mr-2 text-black\" />\r\n          Chi Tiết Đơn Thuốc\r\n        </h2>\r\n        {error ? (\r\n          <div className=\"flex items-center text-red-600\">\r\n            <AlertTriangle size={16} className=\"mr-1\" />\r\n            <span className=\"text-sm\">{error}</span>\r\n          </div>\r\n        ) : (\r\n          <button \r\n            onClick={handleShowInvoice} \r\n            disabled={processing || isLoading || medicines.length === 0}\r\n            className={`inline-flex items-center px-4 py-2 text-sm font-medium rounded-lg text-white transition-colors shadow-sm ${\r\n              processing || isLoading || medicines.length === 0\r\n                ? 'bg-gray-400 cursor-not-allowed' \r\n                : 'bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2'\r\n            }`}\r\n            title={medicines.length === 0 ? \"Không có thuốc nào để phát\" : \"Xuất hóa đơn thuốc\"}\r\n          >\r\n            {processing ? (\r\n              <>\r\n                <span className=\"animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full mr-2\"></span>\r\n                Đang xử lý...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <PrinterIcon size={16} className=\"mr-2\" /> \r\n                Xuất hóa đơn thuốc\r\n              </>\r\n            )}\r\n          </button>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"p-6 space-y-6\">\r\n        {/* Patient Information */}\r\n        <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-300\">\r\n          <div className=\"flex items-center mb-4\">\r\n            <UserIcon size={18} className=\"text-black mr-2\" />\r\n            <h3 className=\"text-lg font-medium text-black\">\r\n              Thông tin bệnh nhân\r\n            </h3>\r\n          </div>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-black mb-1\">Họ và tên</p>\r\n              <p className=\"text-black\">{patient.fullName}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-medium text-black mb-1\">Số điện thoại</p>\r\n              <p className=\"text-black\">{patient.phone}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-medium text-black mb-1\">Mã đơn thuốc</p>\r\n              <p className=\"text-black\">{patient.serialNumber}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Medical Information */}\r\n        <div className=\"border border-gray-300 rounded-lg p-4\">\r\n          <div className=\"flex items-center mb-4\">\r\n            <ClipboardListIcon size={18} className=\"text-black mr-2\" />\r\n            <h3 className=\"text-lg font-medium text-black\">\r\n              Thông tin y tế\r\n            </h3>\r\n          </div>\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-black mb-1\">Chẩn đoán</p>\r\n              <p className=\"text-black\">{patient.diagnosis}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-medium text-black mb-1\">Bác sĩ</p>\r\n              <p className=\"text-black\">{patient.doctor}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Prescription */}\r\n        <div>\r\n          <h3 className=\"text-lg font-medium text-black mb-4 flex items-center\">\r\n            <PillIcon size={18} className=\"mr-2 text-black\" />\r\n            Đơn thuốc\r\n          </h3>\r\n          \r\n          <div className=\"overflow-x-auto border border-gray-300 rounded-lg\">\r\n            <table className=\"min-w-full divide-y divide-gray-300\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                    STT\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                    Tên thuốc\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                    Số lượng\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                    Liều dùng\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                    Đơn giá\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                    Thành tiền\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              \r\n              <tbody className=\"bg-white divide-y divide-gray-300\">\r\n                {isLoading ? (\r\n                  <tr>\r\n                    <td colSpan={6} className=\"px-6 py-8 text-center\">\r\n                      <div className=\"flex flex-col items-center justify-center\">\r\n                        <RefreshCw size={24} className=\"animate-spin text-blue-600 mb-2\" />\r\n                        <p className=\"text-gray-600\">Đang tải chi tiết đơn thuốc...</p>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ) : medicines.length === 0 ? (\r\n                  <tr>\r\n                    <td colSpan={6} className=\"px-6 py-8 text-center\">\r\n                      <div className=\"flex flex-col items-center justify-center\">\r\n                        <AlertTriangle size={24} className=\"text-amber-500 mb-2\" />\r\n                        <p className=\"text-gray-600\">Bệnh nhân này không có đơn thuốc nào.</p>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ) : medicines.map((medicine, index) => (\r\n                  <tr key={index} className={index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                      {index + 1}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                      {medicine.name}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                      {medicine.quantity}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                      {medicine.dosage}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                      {medicine.price.toLocaleString('vi-VN')} đ\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                      {(medicine.price * medicine.quantity).toLocaleString('vi-VN')} đ\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n                \r\n                {medicines.length > 0 && (\r\n                  <tr className=\"bg-gray-100\">\r\n                    <td colSpan={5} className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-black text-right border-t border-gray-400\">\r\n                      Tổng cộng:\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-bold text-black border-t border-gray-400\">\r\n                      {calculateTotal().toLocaleString('vi-VN')} đ\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2871, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/pharmacyPage/InvoiceDetailModal.tsx"],"sourcesContent":["import React from 'react';\r\nimport { XIcon, FileTextIcon, PrinterIcon } from 'lucide-react';\r\nimport { PharmacyPatient, PharmacyMedicine, PharmacyInvoice } from './pharmacyUtils';\r\n\r\ninterface InvoiceDetailModalProps {\r\n  invoice: PharmacyInvoice;\r\n  patient: PharmacyPatient;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const InvoiceDetailModal = ({\r\n  invoice,\r\n  patient,\r\n  onClose\r\n}: InvoiceDetailModalProps) => {\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"bg-gray-50 border-b border-gray-300\">\r\n          <div className=\"px-6 py-4 flex items-center justify-between\">\r\n            <h2 className=\"text-xl font-bold text-black flex items-center\">\r\n              <FileTextIcon size={20} className=\"mr-2 text-black\" />\r\n              Chi Tiết Hóa Đơn #{invoice.id}\r\n            </h2>\r\n            <button \r\n              onClick={onClose} \r\n              className=\"p-1.5 rounded-full hover:bg-gray-200 text-black transition-colors\"\r\n            >\r\n              <XIcon size={20} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"p-6\">\r\n          <div className=\"border border-gray-300 rounded-lg p-6\">\r\n            <div className=\"text-center mb-6\">\r\n              <h3 className=\"text-xl font-bold text-black\">\r\n                PHÒNG KHÁM ĐA KHOA\r\n              </h3>\r\n              <p className=\"text-black mt-1\">123 Nguyễn Huệ, Quận 1, TP.HCM</p>\r\n              <p className=\"text-black\">Điện thoại: (028) 3822 1234</p>\r\n              <div className=\"mt-4 border-t border-gray-300 pt-4\">\r\n                <h2 className=\"text-xl font-bold text-black\">HÓA ĐƠN THUỐC</h2>\r\n                <p className=\"text-black mt-1\">\r\n                  Ngày: {new Date(invoice.date).toLocaleDateString('vi-VN')}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6 bg-gray-50 p-4 rounded-lg border border-gray-200\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-black mb-1\">Họ và tên bệnh nhân</p>\r\n                <p className=\"text-black\">{patient.fullName}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-black mb-1\">Số điện thoại</p>\r\n                <p className=\"text-black\">{patient.phone}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-black mb-1\">Mã đơn thuốc</p>\r\n                <p className=\"text-black\">{patient.serialNumber}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-black mb-1\">Chẩn đoán</p>\r\n                <p className=\"text-black\">{patient.diagnosis}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-black mb-1\">Bác sĩ kê đơn</p>\r\n                <p className=\"text-black\">{patient.doctor}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-black mb-1\">Nhân viên phát thuốc</p>\r\n                <p className=\"text-black\">{invoice.pharmacistName}</p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"overflow-x-auto mb-6 border border-gray-300 rounded-lg\">\r\n              <table className=\"min-w-full divide-y divide-gray-300\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                      STT\r\n                    </th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                      Tên thuốc\r\n                    </th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                      Số lượng\r\n                    </th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                      Liều dùng\r\n                    </th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                      Đơn giá\r\n                    </th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                      Thành tiền\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {patient.prescription.map((medicine: PharmacyMedicine, index: number) => (\r\n                    <tr key={index} className={index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                        {index + 1}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                        {medicine.name}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                        {medicine.quantity}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                        {medicine.dosage}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                        {medicine.price.toLocaleString('vi-VN')} đ\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                        {(medicine.price * medicine.quantity).toLocaleString('vi-VN')} đ\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                  <tr className=\"bg-gray-100\">\r\n                    <td colSpan={5} className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-black text-right border-t border-gray-400\">\r\n                      Tổng cộng:\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-bold text-black border-t border-gray-400\">\r\n                      {invoice.totalAmount.toLocaleString('vi-VN')} đ\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            \r\n            <div className=\"flex justify-end mt-6\">\r\n              <button className=\"px-5 py-2.5 bg-green-600 hover:bg-green-700 text-white rounded-lg flex items-center transition-colors shadow-sm\">\r\n                <PrinterIcon size={18} className=\"mr-2\" />\r\n                In hóa đơn\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3395, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/pharmacyPage/Statistics.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { CalendarIcon, SearchIcon, ChevronDownIcon } from 'lucide-react';\r\nimport { InvoiceDetailModal } from './InvoiceDetailModal';\r\nimport { \r\n  PharmacyPatient, \r\n  PharmacyInvoice, \r\n  getPharmacyInvoices, \r\n  getDailyRevenue,\r\n  getPatientsWithPendingPrescriptions\r\n} from './pharmacyUtils';\r\nimport { initializeData } from '../datats/mockPatients';\r\n\r\nexport const Statistics = () => {\r\n  const [selectedPeriod, setSelectedPeriod] = useState<string>('day');\r\n  const [showDetails, setShowDetails] = useState<boolean>(false);\r\n  const [selectedDate, setSelectedDate] = useState<string>('2025-06-29');\r\n  const [selectedInvoice, setSelectedInvoice] = useState<{invoice: PharmacyInvoice, patient: PharmacyPatient | undefined} | null>(null);\r\n  const [revenueData, setRevenueData] = useState<Array<{date: string, amount: number}>>([]);\r\n  const [invoicesData, setInvoicesData] = useState<PharmacyInvoice[]>([]);\r\n  const [patients, setPatients] = useState<PharmacyPatient[]>([]);\r\n  \r\n  // Tải dữ liệu doanh thu và hóa đơn từ API\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Khởi tạo dữ liệu từ API trước\r\n        await initializeData();\r\n        \r\n        // Sau đó lấy dữ liệu thống kê, hóa đơn, và danh sách bệnh nhân\r\n        const [revenue, invoices, patientsList] = await Promise.all([\r\n          getDailyRevenue(),\r\n          getPharmacyInvoices(),\r\n          getPatientsWithPendingPrescriptions()\r\n        ]);\r\n        \r\n        setRevenueData(revenue);\r\n        setInvoicesData(invoices);\r\n        setPatients(patientsList);\r\n        \r\n        // Mặc định chọn ngày hôm nay nếu có dữ liệu\r\n        if (revenue && revenue.length > 0) {\r\n          // Lấy ngày đầu tiên trong danh sách doanh thu (thường là ngày gần nhất)\r\n          setSelectedDate(revenue[0].date);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching statistics data:\", error);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, []);\r\n  \r\n  const formatDate = (dateString: string): string => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('vi-VN');\r\n  };\r\n  \r\n  const getTotalRevenue = (): number => {\r\n    return revenueData.find(item => item.date === selectedDate)?.amount || 0;\r\n  };\r\n  \r\n  const getInvoicesForDate = (): PharmacyInvoice[] => {\r\n    return invoicesData.filter(invoice => {\r\n      // Lấy phần ngày từ định dạng ISO\r\n      const invoiceDate = new Date(invoice.date).toISOString().split('T')[0];\r\n      return invoiceDate === selectedDate;\r\n    });\r\n  };\r\n  \r\n  const getPatientById = (id: string): PharmacyPatient | undefined => {\r\n    return patients.find(patient => patient.id === id);\r\n  };\r\n  // Render thống kê doanh thu và danh sách hóa đơn\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Bảng thống kê */}\r\n      <div className=\"bg-white shadow rounded-lg overflow-hidden\">\r\n        <div className=\"bg-blue-600 px-4 py-3\">\r\n          <h2 className=\"text-lg font-medium text-white\">\r\n            Xem Thống Kê Doanh Thu\r\n          </h2>\r\n        </div>\r\n        <div className=\"p-6\">\r\n          {/* Bộ lọc và công cụ */}\r\n          <div className=\"flex flex-wrap items-center gap-5 mb-6\">\r\n            {/* Chọn ngày */}\r\n            <div>\r\n              <label htmlFor=\"date\" className=\"block text-sm font-medium text-black mb-2\">\r\n                Chọn ngày\r\n              </label>\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <CalendarIcon size={18} className=\"text-black\" />\r\n                </div>\r\n                <input \r\n                  type=\"date\" \r\n                  id=\"date\" \r\n                  value={selectedDate} \r\n                  onChange={e => setSelectedDate(e.target.value)} \r\n                  className=\"pl-10 pr-4 py-2.5 block w-full rounded-lg border-gray-300 shadow-sm focus:ring-2 focus:ring-black focus:border-black text-black border\" \r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex-grow\"></div>\r\n            \r\n            {/* Nút xem chi tiết */}\r\n            <div className=\"flex items-end\">\r\n              <button \r\n                onClick={() => setShowDetails(!showDetails)} \r\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n              >\r\n                <SearchIcon className=\"h-4 w-4 mr-1\" /> \r\n                {showDetails ? 'Ẩn chi tiết' : 'Xem chi tiết'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Hiển thị tổng doanh thu */}\r\n          <div className=\"bg-blue-50 rounded-lg p-6 mb-6\">\r\n            <h3 className=\"text-lg font-medium text-blue-800 mb-2\">\r\n              Tổng doanh thu\r\n            </h3>\r\n            <div className=\"flex items-baseline\">\r\n              <span className=\"text-3xl font-bold text-blue-600\">\r\n                {getTotalRevenue().toLocaleString('vi-VN')} đ\r\n              </span>\r\n              <span className=\"ml-2 text-sm text-gray-500\">\r\n                Ngày {formatDate(selectedDate)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Bảng chi tiết hóa đơn */}\r\n          {showDetails && (\r\n            <div>\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n                Chi tiết hóa đơn\r\n              </h3>\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Mã hóa đơn\r\n                      </th>\r\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Tên bệnh nhân\r\n                      </th>\r\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Nhân viên phát thuốc\r\n                      </th>\r\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Tổng tiền\r\n                      </th>\r\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Thao tác\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {getInvoicesForDate().map(invoice => {\r\n                      // Lấy thông tin bệnh nhân từ ID\r\n                      const patient = getPatientById(invoice.patientId);\r\n                      \r\n                      return (\r\n                        <tr key={invoice.id}>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600\">\r\n                            #{invoice.id}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                            {patient?.fullName || 'N/A'}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                            {invoice.pharmacistName}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                            {invoice.totalAmount.toLocaleString('vi-VN')} đ\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                            <button \r\n                              onClick={() => setSelectedInvoice({ invoice, patient })} \r\n                              className=\"text-blue-600 hover:text-blue-800\"\r\n                              disabled={!patient}\r\n                            >\r\n                              Xem chi tiết\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                    \r\n                    {/* Hiển thị khi không có hóa đơn */}\r\n                    {getInvoicesForDate().length === 0 && (\r\n                      <tr>\r\n                        <td colSpan={5} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center\">\r\n                          Không có hóa đơn nào cho ngày đã chọn.\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Hiển thị modal chi tiết hóa đơn khi được chọn */}\r\n      {selectedInvoice && selectedInvoice.patient && (\r\n        <InvoiceDetailModal \r\n          invoice={selectedInvoice.invoice} \r\n          patient={selectedInvoice.patient} \r\n          onClose={() => setSelectedInvoice(null)} \r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3848, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/pharmacyPage/apiTest.js"],"sourcesContent":["// This file will help check the API connection with the backend\r\n// Import the key functions for testing\r\nimport { getPendingDispensePrescriptions } from '../services/api.service';\r\nimport { getPatientsWithPendingPrescriptions } from './pharmacyUtils';\r\n\r\n// Create test data for API testing\r\nexport const runApiTests = async (token) => {\r\n  console.group('------- API TEST: BEGIN -------');\r\n  console.log('Running API tests with token:', token ? `${token.substring(0, 10)}...` : 'No token');\r\n  \r\n  try {\r\n    // Test 1: Direct API call\r\n    console.log('Test 1: Calling getPendingDispensePrescriptions directly');\r\n    const prescriptions = await getPendingDispensePrescriptions(token);\r\n    console.log(`Result: Fetched ${prescriptions.length} prescriptions`);\r\n    if (prescriptions.length > 0) {\r\n      console.log('Sample prescription:', prescriptions[0]);\r\n    } else {\r\n      console.warn('No prescriptions found - this could be normal if there are none pending');\r\n    }\r\n    \r\n    // Test 2: Using the pharmacy utility function\r\n    console.log('Test 2: Calling getPatientsWithPendingPrescriptions');\r\n    const patients = await getPatientsWithPendingPrescriptions();\r\n    console.log(`Result: Got ${patients.length} patients with prescriptions`);\r\n    if (patients.length > 0) {\r\n      console.log('Sample patient:', patients[0]);\r\n    } else {\r\n      console.warn('No patients found - this could be normal if there are none pending');\r\n    }\r\n    \r\n    return {\r\n      success: true,\r\n      prescriptionCount: prescriptions.length,\r\n      patientCount: patients.length\r\n    };\r\n  } catch (error) {\r\n    console.error('API Test failed:', error);\r\n    return {\r\n      success: false,\r\n      error: error.message\r\n    };\r\n  } finally {\r\n    console.groupEnd();\r\n  }\r\n};\r\n\r\n// Function to check token in different storage locations\r\nexport const checkTokenAvailability = () => {\r\n  const locations = {\r\n    localStorage: localStorage.getItem('token'),\r\n    cookies: document.cookie.split('; ').find(row => row.startsWith('token=')),\r\n    sessionStorage: sessionStorage.getItem('token')\r\n  };\r\n  \r\n  console.group('------- TOKEN CHECK -------');\r\n  console.log('Token in localStorage:', locations.localStorage ? 'Present' : 'Missing');\r\n  console.log('Token in cookies:', locations.cookies ? 'Present' : 'Missing');\r\n  console.log('Token in sessionStorage:', locations.sessionStorage ? 'Present' : 'Missing');\r\n  console.groupEnd();\r\n  \r\n  return locations;\r\n};\r\n"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,uCAAuC;;;;;AACvC;AACA;;;AAGO,MAAM,cAAc,OAAO;IAChC,QAAQ,KAAK,CAAC;IACd,QAAQ,GAAG,CAAC,iCAAiC,QAAQ,GAAG,MAAM,SAAS,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG;IAEtF,IAAI;QACF,0BAA0B;QAC1B,QAAQ,GAAG,CAAC;QACZ,MAAM,gBAAgB,MAAM,CAAA,GAAA,wIAAA,CAAA,kCAA+B,AAAD,EAAE;QAC5D,QAAQ,GAAG,CAAC,CAAC,gBAAgB,EAAE,cAAc,MAAM,CAAC,cAAc,CAAC;QACnE,IAAI,cAAc,MAAM,GAAG,GAAG;YAC5B,QAAQ,GAAG,CAAC,wBAAwB,aAAa,CAAC,EAAE;QACtD,OAAO;YACL,QAAQ,IAAI,CAAC;QACf;QAEA,8CAA8C;QAC9C,QAAQ,GAAG,CAAC;QACZ,MAAM,WAAW,MAAM,CAAA,GAAA,2IAAA,CAAA,sCAAmC,AAAD;QACzD,QAAQ,GAAG,CAAC,CAAC,YAAY,EAAE,SAAS,MAAM,CAAC,4BAA4B,CAAC;QACxE,IAAI,SAAS,MAAM,GAAG,GAAG;YACvB,QAAQ,GAAG,CAAC,mBAAmB,QAAQ,CAAC,EAAE;QAC5C,OAAO;YACL,QAAQ,IAAI,CAAC;QACf;QAEA,OAAO;YACL,SAAS;YACT,mBAAmB,cAAc,MAAM;YACvC,cAAc,SAAS,MAAM;QAC/B;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oBAAoB;QAClC,OAAO;YACL,SAAS;YACT,OAAO,MAAM,OAAO;QACtB;IACF,SAAU;QACR,QAAQ,QAAQ;IAClB;AACF;AAGO,MAAM,yBAAyB;IACpC,MAAM,YAAY;QAChB,cAAc,aAAa,OAAO,CAAC;QACnC,SAAS,SAAS,MAAM,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAA,MAAO,IAAI,UAAU,CAAC;QAChE,gBAAgB,eAAe,OAAO,CAAC;IACzC;IAEA,QAAQ,KAAK,CAAC;IACd,QAAQ,GAAG,CAAC,0BAA0B,UAAU,YAAY,GAAG,YAAY;IAC3E,QAAQ,GAAG,CAAC,qBAAqB,UAAU,OAAO,GAAG,YAAY;IACjE,QAAQ,GAAG,CAAC,4BAA4B,UAAU,cAAc,GAAG,YAAY;IAC/E,QAAQ,QAAQ;IAEhB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 3914, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/pharmacyPage/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { LogOutIcon, PillIcon, BarChartIcon, AlertTriangle, UserIcon } from 'lucide-react';\r\nimport { PatientList } from './PatientList';\r\nimport { PatientDetails } from './PatientDetails';\r\nimport { Statistics } from './Statistics';\r\nimport { PharmacyPatient, getPatientsWithPendingPrescriptions } from './pharmacyUtils';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { runApiTests, checkTokenAvailability } from './apiTest';\r\n\r\n// User interface for authentication context\r\ninterface User {\r\n  fullName: string; // Changed from 'name' to 'fullName' to match User in mockPatients\r\n  role: string;\r\n  // Other user properties (optional)\r\n  _id?: string;\r\n  username?: string;\r\n  email?: string;\r\n}\r\n\r\ninterface DashboardProps {\r\n  user: User | null; // Assuming user can be null if not logged in\r\n  onLogout: () => void;\r\n}\r\n\r\nexport const Dashboard = ({\r\n  user,\r\n  onLogout\r\n}: DashboardProps) => {\r\n  const { token } = useAuth(); // Get token from auth context\r\n  const [activeTab, setActiveTab] = useState('dispense'); // 'dispense' or 'statistics'\r\n  const [selectedPatient, setSelectedPatient] = useState<PharmacyPatient | null>(null);\r\n  const [waitingPatients, setWaitingPatients] = useState<PharmacyPatient[]>([]);\r\n  \r\n  // State cho loading và error\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [testResults, setTestResults] = useState<any>(null);\r\n  \r\n  // Function to run API tests for debugging\r\n  const runTests = async () => {\r\n    checkTokenAvailability();\r\n    const result = await runApiTests(token);\r\n    setTestResults(result);\r\n    console.log(\"Test results:\", result);\r\n    \r\n    // If tests were successful and found data, try to refresh the patient list\r\n    if (result.success && ((result.prescriptionCount && result.prescriptionCount > 0) || \r\n        (result.patientCount && result.patientCount > 0))) {\r\n      fetchPatients();\r\n    }\r\n  };\r\n  \r\n  // Tải dữ liệu bệnh nhân chờ phát thuốc từ API\r\n  const fetchPatients = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    console.log(\"Dashboard: Starting fetchPatients function\");\r\n    console.log(\"Dashboard: Token available:\", !!token);\r\n    \r\n    try {\r\n      // Fetch prescriptions with status PENDING_DISPENSE\r\n      console.log(\"Dashboard: Calling getPatientsWithPendingPrescriptions...\");\r\n      const patients = await getPatientsWithPendingPrescriptions();\r\n      console.log(`Dashboard: Fetched ${patients.length} patients with pending prescriptions`);\r\n      console.log(\"Dashboard: Patient data:\", patients);\r\n      \r\n      setWaitingPatients(patients);\r\n      \r\n      if (patients.length === 0) {\r\n        // Reset selected patient if no patients are waiting\r\n        console.log(\"Dashboard: No patients in queue, resetting selected patient\");\r\n        setSelectedPatient(null);\r\n      }\r\n    } catch (error: any) {\r\n      console.error(\"Dashboard: Error fetching patients:\", error);\r\n      setError(error.message || \"Không thể tải danh sách bệnh nhân\");\r\n      setWaitingPatients([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Fetch patients on mount and when user changes\r\n  // Initial fetch\r\n  useEffect(() => {\r\n    console.log(\"Dashboard: Initial useEffect - fetching patients\");\r\n    fetchPatients();\r\n  }, [user, token]); // Add token as dependency\r\n  \r\n  // Setup polling for auto-refresh\r\n  useEffect(() => {\r\n    console.log(\"Dashboard: Setting up polling interval\");\r\n    // Set up polling for real-time updates\r\n    const intervalId = setInterval(() => {\r\n      // Only auto-refresh if not viewing a patient's details\r\n      if (!selectedPatient && !isLoading) {\r\n        console.log(\"Dashboard: Auto-refreshing patient list...\");\r\n        fetchPatients();\r\n      }\r\n    }, 60000); // Poll every minute\r\n    \r\n    return () => {\r\n      console.log(\"Dashboard: Clearing polling interval\");\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [selectedPatient, isLoading]);\r\n\r\n  const handlePatientSelect = (patient: PharmacyPatient) => {\r\n    console.log(\"Dashboard: Patient selected:\", patient.id, patient.fullName);\r\n    setSelectedPatient(patient);\r\n  };\r\n\r\n  const handlePatientRemove = (patientId: string) => {\r\n    console.log(`Dashboard: Removing patient ${patientId} from waiting list after dispensing`);\r\n    setWaitingPatients(prevPatients => prevPatients.filter(p => p.id !== patientId));\r\n    setSelectedPatient(null);\r\n    \r\n    // Also refresh the list to ensure our counts are accurate\r\n    setTimeout(() => {\r\n      fetchPatients();\r\n    }, 1000); // Give the backend a moment to update\r\n  };\r\n\r\n  // Add debug output for the render cycle\r\n  console.log(\"Dashboard: Rendering with state:\", {\r\n    activeTab,\r\n    selectedPatient: selectedPatient ? `${selectedPatient.id} - ${selectedPatient.fullName}` : \"none\",\r\n    waitingPatients: waitingPatients.length,\r\n    isLoading,\r\n    error\r\n  });\r\n\r\n  return <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-blue-700 text-white shadow\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-4 sm:px-6 lg:px-8 flex justify-between items-center\">\r\n          <h1 className=\"text-2xl font-bold\">Hệ Thống Quản Lý Nhà Thuốc</h1>\r\n          <div className=\"flex items-center space-x-4\">\r\n            {/* Debug button for admins/developers */}\r\n            <button \r\n              onClick={runTests} \r\n              className=\"inline-flex items-center px-2 py-1 border border-transparent text-xs rounded-md text-white bg-purple-800 hover:bg-purple-900\"\r\n              title=\"Debug API Connections\"\r\n            >\r\n              Debug\r\n            </button>\r\n            \r\n            <span className=\"text-sm\">\r\n              Xin chào, {user?.fullName || 'Nhân viên'}\r\n            </span>\r\n            <button onClick={onLogout} className=\"inline-flex items-center px-3 py-1 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-blue-800 hover:bg-blue-900 focus:outline-none focus:border-blue-900 focus:shadow-outline-blue active:bg-blue-900 transition duration-150 ease-in-out\">\r\n              <LogOutIcon className=\"h-4 w-4 mr-1\" /> Đăng Xuất\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      {/* Display test results if any */}\r\n      {testResults && (\r\n        <div className={`bg-${testResults.success ? 'green' : 'red'}-100 border-l-4 border-${testResults.success ? 'green' : 'red'}-500 text-${testResults.success ? 'green' : 'red'}-700 p-4 mb-4 mx-4 mt-2`}>\r\n          <div className=\"flex\">\r\n            <div className=\"flex-shrink-0\">\r\n              {testResults.success ? '✅' : '❌'}\r\n            </div>\r\n            <div className=\"ml-3\">\r\n              <p className=\"text-sm\">\r\n                {testResults.success \r\n                  ? `API Test Success: Found ${testResults.prescriptionCount} prescriptions and ${testResults.patientCount} patients` \r\n                  : `API Test Failed: ${testResults.error}`}\r\n              </p>\r\n            </div>\r\n            <button \r\n              onClick={() => setTestResults(null)}\r\n              className=\"ml-auto text-sm text-gray-500\"\r\n            >\r\n              Dismiss\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Navigation */}\r\n      <nav className=\"bg-white shadow\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-center h-16\">\r\n            <div className=\"flex space-x-8\">\r\n              <button onClick={() => {\r\n              setActiveTab('dispense');\r\n              setSelectedPatient(null);\r\n            }} className={`inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium leading-5 focus:outline-none transition duration-150 ease-in-out ${activeTab === 'dispense' ? 'border-blue-500 text-gray-900' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`}>\r\n                <PillIcon className=\"h-5 w-5 mr-1\" /> Phát Thuốc\r\n              </button>\r\n              <button onClick={() => {\r\n              setActiveTab('statistics');\r\n              setSelectedPatient(null);\r\n            }} className={`inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium leading-5 focus:outline-none transition duration-150 ease-in-out ${activeTab === 'statistics' ? 'border-blue-500 text-gray-900' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`}>\r\n                <BarChartIcon className=\"h-5 w-5 mr-1\" /> Xem Thống Kê Doanh Thu\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      {/* Main Content */}\r\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\r\n        {activeTab === 'dispense' ? <div className=\"flex flex-col md:flex-row gap-6\">\r\n            <div className=\"w-full md:w-1/3\">\r\n              <PatientList \r\n                patients={waitingPatients} \r\n                onPatientSelect={handlePatientSelect} \r\n                onRefresh={fetchPatients}\r\n                isLoading={isLoading}\r\n                error={error}\r\n              />\r\n            </div>\r\n            <div className=\"w-full md:w-2/3\">\r\n              {isLoading && !selectedPatient ? (\r\n                <div className=\"bg-white shadow rounded-lg p-6 h-96 flex items-center justify-center\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"animate-spin h-8 w-8 border-4 border-blue-500 border-t-transparent rounded-full mx-auto mb-4\"></div>\r\n                    <p className=\"text-gray-600\">Đang tải danh sách bệnh nhân...</p>\r\n                  </div>\r\n                </div>\r\n              ) : error && !selectedPatient ? (\r\n                <div className=\"bg-white shadow rounded-lg p-6 h-96 flex items-center justify-center\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"bg-red-100 p-3 rounded-full mx-auto mb-4 w-16 h-16 flex items-center justify-center\">\r\n                      <AlertTriangle className=\"h-8 w-8 text-red-600\" />\r\n                    </div>\r\n                    <p className=\"text-red-600 font-medium mb-2\">Không thể tải dữ liệu</p>\r\n                    <p className=\"text-gray-600 mb-4\">{error}</p>\r\n                    <button \r\n                      onClick={fetchPatients}\r\n                      className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\r\n                    >\r\n                      Thử lại\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ) : selectedPatient ? (\r\n                <PatientDetails patient={selectedPatient} onPatientComplete={handlePatientRemove} />\r\n              ) : (\r\n                <div className=\"bg-white shadow rounded-lg p-6 h-96 flex items-center justify-center\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"bg-blue-100 p-3 rounded-full mx-auto mb-4 w-16 h-16 flex items-center justify-center\">\r\n                      <UserIcon className=\"h-8 w-8 text-blue-600\" />\r\n                    </div>\r\n                    <p className=\"text-gray-700 font-medium mb-2\">Chưa có bệnh nhân nào được chọn</p>\r\n                    <p className=\"text-gray-500\">\r\n                      Vui lòng chọn bệnh nhân từ danh sách để xem chi tiết đơn thuốc.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div> : <Statistics />}\r\n          {/* API Testing Section - Hidden by default, for debugging only */}\r\n          <div className=\"mt-8 p-4 bg-white rounded-lg shadow\">\r\n            <h2 className=\"text-lg font-semibold mb-4\">API Testing</h2>\r\n            <button \r\n              onClick={runTests}\r\n              className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors\"\r\n            >\r\n              Chạy Kiểm Tra API\r\n            </button>\r\n            {testResults && (\r\n              <div className=\"mt-4\">\r\n                <h3 className=\"text-md font-medium\">Kết quả kiểm tra:</h3>\r\n                <pre className=\"bg-gray-100 p-2 rounded-md text-sm\">{JSON.stringify(testResults, null, 2)}</pre>\r\n              </div>\r\n            )}\r\n          </div>\r\n      </main>\r\n      {/* Footer */}\r\n      <footer className=\"bg-white border-t border-gray-200 py-4\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <p className=\"text-center text-sm text-gray-500\">\r\n             Hệ Thống Quản Lý Nhà Thuốc. Bản quyền thuộc về Phòng Khám.\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    </div>;\r\n};"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAiBO,MAAM,YAAY,CAAC,EACxB,IAAI,EACJ,QAAQ,EACO;IACf,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,UAAO,AAAD,KAAK,8BAA8B;IAC3D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,aAAa,6BAA6B;IACrF,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA0B;IAC/E,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqB,EAAE;IAE5E,6BAA6B;IAC7B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAO;IAEpD,0CAA0C;IAC1C,MAAM,WAAW;QACf,CAAA,GAAA,qIAAA,CAAA,yBAAsB,AAAD;QACrB,MAAM,SAAS,MAAM,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD,EAAE;QACjC,eAAe;QACf,QAAQ,GAAG,CAAC,iBAAiB;QAE7B,2EAA2E;QAC3E,IAAI,OAAO,OAAO,IAAI,CAAC,AAAC,OAAO,iBAAiB,IAAI,OAAO,iBAAiB,GAAG,KAC1E,OAAO,YAAY,IAAI,OAAO,YAAY,GAAG,CAAE,GAAG;YACrD;QACF;IACF;IAEA,8CAA8C;IAC9C,MAAM,gBAAgB;QACpB,aAAa;QACb,SAAS;QAET,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAE7C,IAAI;YACF,mDAAmD;YACnD,QAAQ,GAAG,CAAC;YACZ,MAAM,WAAW,MAAM,CAAA,GAAA,2IAAA,CAAA,sCAAmC,AAAD;YACzD,QAAQ,GAAG,CAAC,CAAC,mBAAmB,EAAE,SAAS,MAAM,CAAC,oCAAoC,CAAC;YACvF,QAAQ,GAAG,CAAC,4BAA4B;YAExC,mBAAmB;YAEnB,IAAI,SAAS,MAAM,KAAK,GAAG;gBACzB,oDAAoD;gBACpD,QAAQ,GAAG,CAAC;gBACZ,mBAAmB;YACrB;QACF,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,uCAAuC;YACrD,SAAS,MAAM,OAAO,IAAI;YAC1B,mBAAmB,EAAE;QACvB,SAAU;YACR,aAAa;QACf;IACF;IAEA,gDAAgD;IAChD,gBAAgB;IAChB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,QAAQ,GAAG,CAAC;QACZ;IACF,GAAG;QAAC;QAAM;KAAM,GAAG,0BAA0B;IAE7C,iCAAiC;IACjC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,QAAQ,GAAG,CAAC;QACZ,uCAAuC;QACvC,MAAM,aAAa,YAAY;YAC7B,uDAAuD;YACvD,IAAI,CAAC,mBAAmB,CAAC,WAAW;gBAClC,QAAQ,GAAG,CAAC;gBACZ;YACF;QACF,GAAG,QAAQ,oBAAoB;QAE/B,OAAO;YACL,QAAQ,GAAG,CAAC;YACZ,cAAc;QAChB;IACF,GAAG;QAAC;QAAiB;KAAU;IAE/B,MAAM,sBAAsB,CAAC;QAC3B,QAAQ,GAAG,CAAC,gCAAgC,QAAQ,EAAE,EAAE,QAAQ,QAAQ;QACxE,mBAAmB;IACrB;IAEA,MAAM,sBAAsB,CAAC;QAC3B,QAAQ,GAAG,CAAC,CAAC,4BAA4B,EAAE,UAAU,mCAAmC,CAAC;QACzF,mBAAmB,CAAA,eAAgB,aAAa,MAAM,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QACrE,mBAAmB;QAEnB,0DAA0D;QAC1D,WAAW;YACT;QACF,GAAG,OAAO,sCAAsC;IAClD;IAEA,wCAAwC;IACxC,QAAQ,GAAG,CAAC,oCAAoC;QAC9C;QACA,iBAAiB,kBAAkB,GAAG,gBAAgB,EAAE,CAAC,GAAG,EAAE,gBAAgB,QAAQ,EAAE,GAAG;QAC3F,iBAAiB,gBAAgB,MAAM;QACvC;QACA;IACF;IAEA,qBAAO,8OAAC;QAAI,WAAU;;0BAElB,8OAAC;gBAAO,WAAU;0BAChB,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAqB;;;;;;sCACnC,8OAAC;4BAAI,WAAU;;8CAEb,8OAAC;oCACC,SAAS;oCACT,WAAU;oCACV,OAAM;8CACP;;;;;;8CAID,8OAAC;oCAAK,WAAU;;wCAAU;wCACb,MAAM,YAAY;;;;;;;8CAE/B,8OAAC;oCAAO,SAAS;oCAAU,WAAU;;sDACnC,8OAAC,8MAAA,CAAA,aAAU;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;;;;;;;;;;;;;;;;;YAM9C,6BACC,8OAAC;gBAAI,WAAW,CAAC,GAAG,EAAE,YAAY,OAAO,GAAG,UAAU,MAAM,uBAAuB,EAAE,YAAY,OAAO,GAAG,UAAU,MAAM,UAAU,EAAE,YAAY,OAAO,GAAG,UAAU,MAAM,uBAAuB,CAAC;0BACnM,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCACZ,YAAY,OAAO,GAAG,MAAM;;;;;;sCAE/B,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAE,WAAU;0CACV,YAAY,OAAO,GAChB,CAAC,wBAAwB,EAAE,YAAY,iBAAiB,CAAC,mBAAmB,EAAE,YAAY,YAAY,CAAC,SAAS,CAAC,GACjH,CAAC,iBAAiB,EAAE,YAAY,KAAK,EAAE;;;;;;;;;;;sCAG/C,8OAAC;4BACC,SAAS,IAAM,eAAe;4BAC9B,WAAU;sCACX;;;;;;;;;;;;;;;;;0BAQP,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAO,SAAS;wCACjB,aAAa;wCACb,mBAAmB;oCACrB;oCAAG,WAAW,CAAC,mIAAmI,EAAE,cAAc,aAAa,kCAAkC,8EAA8E;;sDAC3R,8OAAC,sMAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;8CAEvC,8OAAC;oCAAO,SAAS;wCACjB,aAAa;wCACb,mBAAmB;oCACrB;oCAAG,WAAW,CAAC,mIAAmI,EAAE,cAAc,eAAe,kCAAkC,8EAA8E;;sDAC7R,8OAAC,iPAAA,CAAA,eAAY;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAOnD,8OAAC;gBAAK,WAAU;;oBACb,cAAc,2BAAa,8OAAC;wBAAI,WAAU;;0CACvC,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,0IAAA,CAAA,cAAW;oCACV,UAAU;oCACV,iBAAiB;oCACjB,WAAW;oCACX,WAAW;oCACX,OAAO;;;;;;;;;;;0CAGX,8OAAC;gCAAI,WAAU;0CACZ,aAAa,CAAC,gCACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;;;;;;0DACf,8OAAC;gDAAE,WAAU;0DAAgB;;;;;;;;;;;;;;;;2CAG/B,SAAS,CAAC,gCACZ,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC,wNAAA,CAAA,gBAAa;oDAAC,WAAU;;;;;;;;;;;0DAE3B,8OAAC;gDAAE,WAAU;0DAAgC;;;;;;0DAC7C,8OAAC;gDAAE,WAAU;0DAAsB;;;;;;0DACnC,8OAAC;gDACC,SAAS;gDACT,WAAU;0DACX;;;;;;;;;;;;;;;;2CAKH,gCACF,8OAAC,6IAAA,CAAA,iBAAc;oCAAC,SAAS;oCAAiB,mBAAmB;;;;;yDAE7D,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC,sMAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;;;;;;0DAEtB,8OAAC;gDAAE,WAAU;0DAAiC;;;;;;0DAC9C,8OAAC;gDAAE,WAAU;0DAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;6CAO9B,8OAAC,yIAAA,CAAA,aAAU;;;;;kCAEpB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAA6B;;;;;;0CAC3C,8OAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;;4BAGA,6BACC,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;kDAAsB;;;;;;kDACpC,8OAAC;wCAAI,WAAU;kDAAsC,KAAK,SAAS,CAAC,aAAa,MAAM;;;;;;;;;;;;;;;;;;;;;;;;0BAMjG,8OAAC;gBAAO,WAAU;0BAChB,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAE,WAAU;kCAAoC;;;;;;;;;;;;;;;;;;;;;;AAM3D","debugId":null}},
    {"offset": {"line": 4499, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/pharmacyPage/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useRouter } from 'next/navigation';\r\nimport { Dashboard } from './Dashboard';\r\n\r\nexport default function PharmacyPage() {\r\n  const { user, isAuthenticated, token, logout } = useAuth();\r\n  const router = useRouter();\r\n\r\n  // Add debug logging\r\n  console.log('PharmacyPage: Rendering page component');\r\n  console.log('PharmacyPage: Authentication state:', {\r\n    isAuthenticated,\r\n    hasUser: !!user,\r\n    userRole: user?.role || 'none',\r\n    hasToken: !!token,\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log('PharmacyPage: Authentication check effect running');\r\n\r\n    if (!isAuthenticated) {\r\n      console.log('PharmacyPage: Not authenticated, redirecting to login');\r\n      router.push('/login');\r\n    } else if (user?.role !== 'PHARMACIST') {\r\n      // Nếu người dùng không phải là dược sĩ, chuyển hướng về trang đăng nhập\r\n      console.log(`PharmacyPage: User role ${user?.role} is not PHARMACIST, logging out`);\r\n      logout();\r\n      router.push('/login');\r\n    } else {\r\n      console.log('PharmacyPage: Authentication check passed');\r\n    }\r\n  }, [isAuthenticated, router, user, logout]);\r\n\r\n  if (!isAuthenticated || !user) {\r\n    console.log('PharmacyPage: Rendering loading state');\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  console.log('PharmacyPage: Rendering Dashboard with user:', user.fullName);\r\n  console.log('PharmacyPage: Token available:', !!token);\r\n\r\n  // If token is available, store it in localStorage for API calls\r\n  if (token) {\r\n    console.log('PharmacyPage: Saving token to localStorage for API calls');\r\n    localStorage.setItem('token', token);\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-full min-h-screen bg-gray-50\">\r\n      <Dashboard user={user} onLogout={logout} />\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOe,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,UAAO,AAAD;IACvD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,oBAAoB;IACpB,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC,uCAAuC;QACjD;QACA,SAAS,CAAC,CAAC;QACX,UAAU,MAAM,QAAQ;QACxB,UAAU,CAAC,CAAC;IACd;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,QAAQ,GAAG,CAAC;QAEZ,IAAI,CAAC,iBAAiB;YACpB,QAAQ,GAAG,CAAC;YACZ,OAAO,IAAI,CAAC;QACd,OAAO,IAAI,MAAM,SAAS,cAAc;YACtC,wEAAwE;YACxE,QAAQ,GAAG,CAAC,CAAC,wBAAwB,EAAE,MAAM,KAAK,+BAA+B,CAAC;YAClF;YACA,OAAO,IAAI,CAAC;QACd,OAAO;YACL,QAAQ,GAAG,CAAC;QACd;IACF,GAAG;QAAC;QAAiB;QAAQ;QAAM;KAAO;IAE1C,IAAI,CAAC,mBAAmB,CAAC,MAAM;QAC7B,QAAQ,GAAG,CAAC;QACZ,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,QAAQ,GAAG,CAAC,gDAAgD,KAAK,QAAQ;IACzE,QAAQ,GAAG,CAAC,kCAAkC,CAAC,CAAC;IAEhD,gEAAgE;IAChE,IAAI,OAAO;QACT,QAAQ,GAAG,CAAC;QACZ,aAAa,OAAO,CAAC,SAAS;IAChC;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,wIAAA,CAAA,YAAS;YAAC,MAAM;YAAM,UAAU;;;;;;;;;;;AAGvC","debugId":null}}]
}