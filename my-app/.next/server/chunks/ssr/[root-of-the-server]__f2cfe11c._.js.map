{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///D:/%C4%90%E1%BB%93%20%C3%A1n%20A/hospitality-website-main/hospitality-website-main/my-app/src/app/datats/mockPatients.ts"],"sourcesContent":["// Dữ liệu được fetched từ API thay vì dùng static data\nimport axiosInstance from '../services/axios.customize.service';\n\n// Khai báo các interface\nexport interface User {\n  _id: string;\n  userId: string;\n  username: string;\n  email: string;\n  password: string;\n  fullName: string;\n  phone: string;\n  role: 'PATIENT' | 'DOCTOR' | 'PHARMACIST' | 'RECEPTIONIST' | 'ADMIN';\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n}\n\nexport interface Queue {\n  _id: string;\n  patient: string; // ObjectId của bệnh nhân\n  status: 'waiting' | 'in_progress' | 'completed' | 'canceled';\n  doctorId?: string; // ObjectId của bác sĩ được chỉ định (nếu có)\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n}\n\nexport interface Prescription {\n  _id: string;\n  customPrescriptionId: string;\n  patientId: string; // ObjectId\n  doctorId: string; // ObjectId\n  diagnosis: string;\n  date: string;\n  status: 'PENDING_DISPENSE' | 'DISPENSED' | 'CANCELED';\n  __v: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface PrescriptionDetail {\n  _id: string;\n  customPrescriptionDetailId: string;\n  prescriptionId: string; // ObjectId\n  medicineId: string; // ObjectId\n  quantity: number;\n  dosage: string;\n  __v: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Medicine {\n  _id: string;\n  customMedicineId: string;\n  name: string;\n  totalPills: number;\n  price: number;\n  __v: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface Invoice {\n  _id: string;\n  prescriptionId: string; // ObjectId\n  patientId: string; // ObjectId\n  totalAmount: number;\n  status: 'PAID' | 'UNPAID';\n  __v: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\n// Biến cache để lưu trữ dữ liệu từ API\nexport let mockUsers: User[] = [];\nexport let mockQueues: Queue[] = [];\nexport let mockMedicines: Medicine[] = [];\nexport let mockPrescriptions: Prescription[] = [];\nexport let mockPrescriptionDetails: PrescriptionDetail[] = [];\nexport let mockInvoices: Invoice[] = [];\n\n// Biến toàn cục để lưu token xác thực\nlet authToken: string | null = null;\n\n// Hàm thiết lập token khi người dùng đăng nhập\nexport const setAuthToken = (token: string) => {\n  authToken = token;\n  if (typeof window !== 'undefined') { // Kiểm tra nếu đang chạy trên browser\n    localStorage.setItem('authToken', token); // Lưu token vào localStorage để giữ qua refresh\n  }\n};\n\n// Hàm để lấy token hiện tại\nexport const getAuthToken = () => {\n  // Nếu không có token trong memory, thử lấy từ localStorage\n  if (!authToken && typeof window !== 'undefined') {\n    authToken = localStorage.getItem('authToken');\n  }\n  return authToken;\n};\n\n// Helper function để thực hiện API call có xác thực\nconst authenticatedGet = async (endpoint: string) => {\n  try {\n    // Lấy token từ localStorage hoặc cookies\n    let token = getAuthToken();\n    \n    // Thử lấy token từ cookies nếu không tìm thấy trong localStorage\n    if (!token && typeof document !== 'undefined') {\n      // Check browser cookies if localStorage doesn't have the token\n      const cookies = document.cookie.split(';');\n      const tokenCookie = cookies.find(c => c.trim().startsWith('token='));\n      if (tokenCookie) {\n        token = tokenCookie.split('=')[1];\n        console.log(\"Found token in cookies, using it for API calls\");\n        // Lưu lại vào authToken để sử dụng cho các lần sau\n        setAuthToken(token);\n      }\n    }\n    \n    if (!token) {\n      console.warn('No authentication token available for API call to:', endpoint);\n      console.warn('Please login first or check token storage.');\n      return null;\n    }\n\n    console.log(`Making authenticated request to ${endpoint}`);\n    console.log(`Using token (first 10 chars): ${token.substring(0, 10)}...`);\n\n    const response = await axiosInstance.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    \n    console.log(`Successful response from ${endpoint}:`, response.status);\n    if (Array.isArray(response.data)) {\n      console.log(`Got ${response.data.length} items from ${endpoint}`);\n    } else {\n      console.log(`Got data from ${endpoint}:`, response.data ? 'Object returned' : 'Empty response');\n    }\n    return response.data;\n  } catch (error: any) {\n    console.error(`Error fetching from ${endpoint}:`, error.message);\n    \n    // Log more detailed error info\n    if (error.response) {\n      console.error('Response status:', error.response.status);\n      console.error('Response data:', error.response.data);\n      \n      if (error.response.status === 403) {\n        console.error(`Access forbidden to ${endpoint} - check user permissions`);\n      } else if (error.response.status === 401) {\n        console.error(`Unauthorized access to ${endpoint} - token may be expired`);\n        // Thử xóa token để người dùng phải đăng nhập lại\n        if (typeof window !== 'undefined') {\n          localStorage.removeItem('authToken');\n          document.cookie = 'token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n          authToken = null;\n        }\n      }\n    } else if (error.request) {\n      console.error('No response received from request. Server may be down.');\n    } else {\n      console.error('Error setting up request:', error.message);\n    }\n    \n    return null;\n  }\n};\n\n// ============= FETCH DATA FUNCTIONS =============\n\n// Load users từ API\nexport const fetchUsers = async () => {\n  console.log('Fetching users from API...');\n  \n  // Đầu tiên thử lấy thông tin user hiện tại để biết role\n  try {\n    const currentUser = await authenticatedGet('/users/me');\n    \n    if (currentUser) {\n      console.log(`Current user role: ${currentUser.role}`);\n      \n      if (currentUser.role === 'ADMIN') {\n        // Nếu là ADMIN, có quyền lấy tất cả users\n        console.log('User is ADMIN, trying to fetch all users');\n        const data = await authenticatedGet('/users');\n        \n        if (data && Array.isArray(data)) {\n          console.log(`Successfully fetched ${data.length} users from API`);\n          mockUsers = data;\n          return data;\n        }\n      } \n      \n      // Dù là role nào, thử dùng endpoint mới để lấy danh sách bệnh nhân\n      if (['ADMIN', 'DOCTOR', 'PHARMACIST', 'RECEPTIONIST'].includes(currentUser.role)) {\n        console.log(`Trying to fetch patients using /users/patients endpoint for ${currentUser.role}`);\n        const patients = await authenticatedGet('/users/patients');\n        \n        if (patients && Array.isArray(patients)) {\n          console.log(`Successfully fetched ${patients.length} patients from API`);\n          \n          // Kết hợp với dữ liệu hiện có (nếu có)\n          // Giữ lại các user không phải bệnh nhân từ danh sách hiện có (nếu có)\n          const nonPatients = mockUsers.filter(user => user.role !== 'PATIENT');\n          mockUsers = [...nonPatients, ...patients];\n          \n          console.log(`Combined user data: ${mockUsers.length} users (${nonPatients.length} non-patients + ${patients.length} patients)`);\n          return mockUsers;\n        }\n      }\n      \n      // Nếu không thể lấy dữ liệu, giữ nguyên dữ liệu mockUsers hiện tại\n      console.log(`Using existing mock data with ${mockUsers.length} users`);\n      return [...mockUsers];\n    } else {\n      console.error('Could not fetch current user info, authentication may be invalid');\n      return mockUsers;\n    }\n  } catch (error) {\n    console.error('Error in fetchUsers:', error);\n    return mockUsers;\n  }\n};\n\n// Load queues từ API\nexport const fetchQueues = async () => {\n  const data = await authenticatedGet('/queues');\n  if (data && Array.isArray(data)) {\n    mockQueues = data;\n    return data;\n  }\n  return [];\n};\n\n// Load medicines từ API\nexport const fetchMedicines = async () => {\n  const data = await authenticatedGet('/medicines');\n  if (data && Array.isArray(data)) {\n    mockMedicines = data;\n    return data;\n  }\n  return [];\n};\n\n// Load prescriptions từ API\nexport const fetchPrescriptions = async () => {\n  const data = await authenticatedGet('/prescriptions');\n  if (data && Array.isArray(data)) {\n    mockPrescriptions = data;\n    return data;\n  }\n  return [];\n};\n\n// Load prescription details từ API\nexport const fetchPrescriptionDetails = async () => {\n  const data = await authenticatedGet('/prescription-details');\n  if (data && Array.isArray(data)) {\n    mockPrescriptionDetails = data;\n    return data;\n  }\n  return [];\n};\n\n// Load invoices từ API\nexport const fetchInvoices = async () => {\n  const data = await authenticatedGet('/invoices');\n  if (data && Array.isArray(data)) {\n    mockInvoices = data;\n    return data;\n  }\n  return [];\n};\n\n// Initialize all data (call when app starts)\nexport const initializeData = async () => {\n  console.log('Initializing data from API or mock sources...');\n  \n  try {\n    // Check if we have a valid token first\n    const token = getAuthToken();\n    if (!token) {\n      console.warn('No authentication token found, will use existing mock data');\n      return false;\n    }\n    \n    // Try to validate token\n    try {\n      console.log('Validating token before fetching data...');\n      const currentUser = await authenticatedGet('/users/me');\n      if (!currentUser) {\n        console.error('Token validation failed, cannot fetch data');\n        return false;\n      }\n      console.log(`Token valid, logged in as ${currentUser.username} (${currentUser.role})`);\n    } catch (error) {\n      console.error('Error validating token:', error);\n      return false;\n    }\n    \n    // Initialize with separate try/catch for each resource type\n    // This allows some data to load even if others fail\n    const results = {\n      users: false,\n      queues: false,\n      medicines: false,\n      prescriptions: false,\n      prescriptionDetails: false,\n      invoices: false\n    };\n    \n    try {\n      await fetchUsers();\n      results.users = true;\n      console.log(`Users loaded: ${mockUsers.length} items`);\n    } catch (error) {\n      console.error('Error loading users:', error);\n    }\n    \n    try {\n      await fetchQueues();\n      results.queues = true;\n      console.log(`Queues loaded: ${mockQueues.length} items`);\n    } catch (error) {\n      console.error('Error loading queues:', error);\n    }\n    \n    try {\n      await fetchMedicines();\n      results.medicines = true;\n      console.log(`Medicines loaded: ${mockMedicines.length} items`);\n    } catch (error) {\n      console.error('Error loading medicines:', error);\n    }\n    \n    try {\n      await fetchPrescriptions();\n      results.prescriptions = true;\n      console.log(`Prescriptions loaded: ${mockPrescriptions.length} items`);\n    } catch (error) {\n      console.error('Error loading prescriptions:', error);\n    }\n    \n    try {\n      await fetchPrescriptionDetails();\n      results.prescriptionDetails = true;\n      console.log(`Prescription details loaded: ${mockPrescriptionDetails.length} items`);\n    } catch (error) {\n      console.error('Error loading prescription details:', error);\n    }\n    \n    try {\n      await fetchInvoices();\n      results.invoices = true;\n      console.log(`Invoices loaded: ${mockInvoices.length} items`);\n    } catch (error) {\n      console.error('Error loading invoices:', error);\n    }\n    \n    const successCount = Object.values(results).filter(Boolean).length;\n    console.log(`Data initialization complete: ${successCount}/6 resource types loaded successfully`);\n    \n    return successCount > 0;\n  } catch (error) {\n    console.error('Error in data initialization:', error);\n    return false;\n  }\n};\n\n// ============= USER-RELATED FUNCTIONS =============\n\nexport const getAllUsers = async () => {\n  if (mockUsers.length === 0) {\n    await fetchUsers();\n  }\n  return [...mockUsers];\n};\n\nexport const getUserById = async (id: string) => {\n  if (mockUsers.length === 0) {\n    await fetchUsers();\n  }\n  return mockUsers.find(user => user._id === id);\n};\n\nexport const getUsersByRole = async (role: string) => {\n  if (mockUsers.length === 0) {\n    await fetchUsers();\n  }\n  return mockUsers.filter(user => user.role === role);\n};\n\nexport const searchUsers = async (searchTerm: string) => {\n  if (mockUsers.length === 0) {\n    await fetchUsers();\n  }\n  const term = searchTerm.toLowerCase();\n  return mockUsers.filter(user => \n    user.fullName.toLowerCase().includes(term) || \n    user.username.toLowerCase().includes(term) ||\n    user.email.toLowerCase().includes(term) ||\n    user.phone.includes(term) ||\n    user.userId.includes(term)\n  );\n};\n\n// ============= QUEUE-RELATED FUNCTIONS =============\n\nexport const getAllQueues = async () => {\n  if (mockQueues.length === 0) {\n    await fetchQueues();\n  }\n  return [...mockQueues];\n};\n\nexport const getQueuesByStatus = async (status: string) => {\n  if (mockQueues.length === 0) {\n    await fetchQueues();\n  }\n  return mockQueues.filter(queue => queue.status === status);\n};\n\nexport const getQueueByPatientId = async (patientId: string) => {\n  if (mockQueues.length === 0) {\n    await fetchQueues();\n  }\n  return mockQueues.find(queue => queue.patient === patientId);\n};\n\nexport const addQueue = async (patientId: string, status: 'waiting' | 'in_progress' | 'completed' | 'canceled' = 'waiting') => {\n  // Kiểm tra xem patientId có tồn tại và là bệnh nhân không\n  const patient = await getUserById(patientId);\n  if (!patient || patient.role !== 'PATIENT') {\n    console.error('Invalid patient ID or user is not a patient');\n    return null;\n  }\n\n  // Kiểm tra xem bệnh nhân đã có trong queue chưa\n  const existingQueue = await getQueueByPatientId(patientId);\n  if (existingQueue) {\n    console.warn('Patient already in queue');\n    return existingQueue;\n  }\n\n  // Tạo queue mới\n  const newQueue: Queue = {\n    _id: generateMongoId(),\n    patient: patientId,\n    status: status,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n    __v: 0\n  };\n\n  // Gọi API để tạo queue thực sự qua API\n  try {\n    // Đây là phần sẽ gọi API thực tế\n    // const response = await axiosInstance.post('/queues', newQueue, {\n    //   headers: { Authorization: `Bearer ${getAuthToken()}` }\n    // });\n    // if (response.data) {\n    //   mockQueues.push(response.data);\n    //   return response.data;\n    // }\n    \n    // Hiện tại, chúng ta chỉ thêm vào cache\n    mockQueues.push(newQueue);\n    return newQueue;\n  } catch (error) {\n    console.error('Error creating queue:', error);\n    return null;\n  }\n};\n\nexport const updateQueueStatus = async (\n  queueId: string, \n  status: 'waiting' | 'in_progress' | 'completed' | 'canceled', \n  doctorId?: string\n) => {\n  if (mockQueues.length === 0) {\n    await fetchQueues();\n  }\n  \n  const index = mockQueues.findIndex(queue => queue._id === queueId);\n  if (index !== -1) {\n    const updatedQueue = {\n      ...mockQueues[index],\n      status: status,\n      updatedAt: new Date().toISOString()\n    };\n    \n    if (doctorId && status === 'in_progress') {\n      updatedQueue.doctorId = doctorId;\n    }\n    \n    // Thực tế sẽ gọi API để cập nhật queue\n    // const response = await axiosInstance.put(`/queues/${queueId}`, updatedQueue, {\n    //   headers: { Authorization: `Bearer ${getAuthToken()}` }\n    // });\n    \n    // Hiện tại chỉ cập nhật trong cache\n    mockQueues[index] = updatedQueue;\n    return mockQueues[index];\n  }\n  return null;\n};\n\nexport const deleteQueue = async (queueId: string) => {\n  if (mockQueues.length === 0) {\n    await fetchQueues();\n  }\n  \n  const index = mockQueues.findIndex(queue => queue._id === queueId);\n  if (index !== -1) {\n    const deletedQueue = mockQueues[index];\n    \n    // Thực tế sẽ gọi API để xóa queue\n    // await axiosInstance.delete(`/queues/${queueId}`, {\n    //   headers: { Authorization: `Bearer ${getAuthToken()}` }\n    // });\n    \n    // Hiện tại chỉ xóa trong cache\n    mockQueues.splice(index, 1);\n    return deletedQueue;\n  }\n  return null;\n};\n\n// ============= MEDICINE-RELATED FUNCTIONS =============\n\nexport const getAllMedicines = async () => {\n  if (mockMedicines.length === 0) {\n    await fetchMedicines();\n  }\n  return [...mockMedicines];\n};\n\nexport const getMedicineById = async (id: string) => {\n  if (mockMedicines.length === 0) {\n    await fetchMedicines();\n  }\n  return mockMedicines.find(medicine => medicine._id === id);\n};\n\nexport const searchMedicines = async (searchTerm: string) => {\n  if (mockMedicines.length === 0) {\n    await fetchMedicines();\n  }\n  const term = searchTerm.toLowerCase();\n  return mockMedicines.filter(medicine => \n    medicine.name.toLowerCase().includes(term) || \n    medicine.customMedicineId.toLowerCase().includes(term)\n  );\n};\n\n// ============= PRESCRIPTION-RELATED FUNCTIONS =============\n\nexport const getAllPrescriptions = async () => {\n  if (mockPrescriptions.length === 0) {\n    await fetchPrescriptions();\n  }\n  return [...mockPrescriptions];\n};\n\nexport const getPrescriptionById = async (id: string) => {\n  if (mockPrescriptions.length === 0) {\n    await fetchPrescriptions();\n  }\n  return mockPrescriptions.find(prescription => prescription._id === id);\n};\n\nexport const getPrescriptionsByPatientId = async (patientId: string) => {\n  if (mockPrescriptions.length === 0) {\n    await fetchPrescriptions();\n  }\n  return mockPrescriptions.filter(prescription => prescription.patientId === patientId);\n};\n\nexport const getPrescriptionsByDoctorId = async (doctorId: string) => {\n  if (mockPrescriptions.length === 0) {\n    await fetchPrescriptions();\n  }\n  return mockPrescriptions.filter(prescription => prescription.doctorId === doctorId);\n};\n\nexport const getPrescriptionsByStatus = async (status: string) => {\n  if (mockPrescriptions.length === 0) {\n    await fetchPrescriptions();\n  }\n  return mockPrescriptions.filter(prescription => prescription.status === status);\n};\n\n// ============= PRESCRIPTION DETAIL-RELATED FUNCTIONS =============\n\nexport const getAllPrescriptionDetails = async () => {\n  if (mockPrescriptionDetails.length === 0) {\n    await fetchPrescriptionDetails();\n  }\n  return [...mockPrescriptionDetails];\n};\n\nexport const getPrescriptionDetailsByPrescriptionId = async (prescriptionId: string) => {\n  if (mockPrescriptionDetails.length === 0) {\n    await fetchPrescriptionDetails();\n  }\n  return mockPrescriptionDetails.filter(detail => detail.prescriptionId === prescriptionId);\n};\n\nexport const getMedicinesForPrescription = async (prescriptionId: string) => {\n  const details = await getPrescriptionDetailsByPrescriptionId(prescriptionId);\n  \n  const result = [];\n  for (const detail of details) {\n    const medicine = await getMedicineById(detail.medicineId);\n    result.push({\n      ...detail,\n      medicine: medicine || null\n    });\n  }\n  \n  return result;\n};\n\n// ============= INVOICE-RELATED FUNCTIONS =============\n\nexport const getAllInvoices = async () => {\n  if (mockInvoices.length === 0) {\n    await fetchInvoices();\n  }\n  return [...mockInvoices];\n};\n\nexport const getInvoiceById = async (id: string) => {\n  if (mockInvoices.length === 0) {\n    await fetchInvoices();\n  }\n  return mockInvoices.find(invoice => invoice._id === id);\n};\n\nexport const getInvoiceByPrescriptionId = async (prescriptionId: string) => {\n  if (mockInvoices.length === 0) {\n    await fetchInvoices();\n  }\n  return mockInvoices.find(invoice => invoice.prescriptionId === prescriptionId);\n};\n\nexport const getInvoicesByPatientId = async (patientId: string) => {\n  if (mockInvoices.length === 0) {\n    await fetchInvoices();\n  }\n  return mockInvoices.filter(invoice => invoice.patientId === patientId);\n};\n\nexport const getInvoicesByStatus = async (status: string) => {\n  if (mockInvoices.length === 0) {\n    await fetchInvoices();\n  }\n  return mockInvoices.filter(invoice => invoice.status === status);\n};\n\n// ============= UTILITY FUNCTIONS =============\n\nexport const getPatientFullPrescriptionDetails = async (patientId: string) => {\n  const prescriptions = await getPrescriptionsByPatientId(patientId);\n  \n  const result = [];\n  for (const prescription of prescriptions) {\n    // Lấy thông tin bác sĩ\n    const doctor = await getUserById(prescription.doctorId);\n    \n    // Lấy chi tiết đơn thuốc và thông tin thuốc\n    const details = await getPrescriptionDetailsByPrescriptionId(prescription._id);\n    const medicineDetails = [];\n    \n    for (const detail of details) {\n      const medicine = await getMedicineById(detail.medicineId);\n      medicineDetails.push({\n        ...detail,\n        medicineName: medicine ? medicine.name : 'Unknown',\n        medicinePrice: medicine ? medicine.price : 0\n      });\n    }\n    \n    // Lấy hóa đơn nếu có\n    const invoice = await getInvoiceByPrescriptionId(prescription._id);\n    \n    result.push({\n      ...prescription,\n      doctorName: doctor ? doctor.fullName : 'Unknown',\n      details: medicineDetails,\n      invoice: invoice || null\n    });\n  }\n  \n  return result;\n};\n\nexport const getAllPatients = async () => {\n  if (mockUsers.length === 0) {\n    await fetchUsers();\n  }\n  return mockUsers.filter(user => user.role === 'PATIENT');\n};\n\nexport const getAllDoctors = async () => {\n  if (mockUsers.length === 0) {\n    await fetchUsers();\n  }\n  return mockUsers.filter(user => user.role === 'DOCTOR');\n};\n\nexport type Patient = User;\nexport const mockPatients = getAllPatients;\n\nexport const getWaitingPatients = async () => {\n  const waitingQueues = await getQueuesByStatus('waiting');\n  \n  const result = [];\n  for (const queue of waitingQueues) {\n    const patient = await getUserById(queue.patient);\n    result.push({\n      queueInfo: queue,\n      patientInfo: patient || null\n    });\n  }\n  \n  return result;\n};\n\nexport const getAllQueuesWithPatientInfo = async () => {\n  if (mockQueues.length === 0) {\n    await fetchQueues();\n  }\n  \n  const result = [];\n  for (const queue of mockQueues) {\n    const patient = await getUserById(queue.patient);\n    result.push({\n      ...queue,\n      patientInfo: patient || null\n    });\n  }\n  \n  return result;\n};\n\n// Hàm tạo MongoDB-like ID\nexport const generateMongoId = () => {\n  // MongoDB ObjectId format: 24 hex characters\n  const timestamp = Math.floor(Date.now() / 1000).toString(16).padStart(8, '0');\n  const randomPart = Array(16).fill(0).map(() => Math.floor(Math.random() * 16).toString(16)).join('');\n  return timestamp + randomPart;\n};\n\n// Hàm để làm mới/reload dữ liệu từ API\nexport const reloadData = async (dataTypes?: ('users' | 'queues' | 'medicines' | 'prescriptions' | 'prescriptionDetails' | 'invoices')[]) => {\n  if (!dataTypes || dataTypes.length === 0) {\n    // Reload tất cả\n    return await initializeData();\n  }\n\n  const promises = [];\n  if (dataTypes.includes('users')) promises.push(fetchUsers());\n  if (dataTypes.includes('queues')) promises.push(fetchQueues());\n  if (dataTypes.includes('medicines')) promises.push(fetchMedicines());\n  if (dataTypes.includes('prescriptions')) promises.push(fetchPrescriptions());\n  if (dataTypes.includes('prescriptionDetails')) promises.push(fetchPrescriptionDetails());\n  if (dataTypes.includes('invoices')) promises.push(fetchInvoices());\n  \n  await Promise.all(promises);\n  return {\n    users: mockUsers.length,\n    queues: mockQueues.length,\n    medicines: mockMedicines.length,\n    prescriptions: mockPrescriptions.length,\n    prescriptionDetails: mockPrescriptionDetails.length,\n    invoices: mockInvoices.length\n  };\n};\n\n// Hàm thay thế để lấy dữ liệu khi không có quyền admin\nexport const fetchUsersAlternative = async () => {\n  console.log('Trying alternative method to fetch users...');\n  \n  try {\n    // Thử lấy thông tin người dùng hiện tại (me endpoint)\n    const currentUser = await authenticatedGet('/users/me');\n    if (!currentUser) {\n      console.warn('Could not fetch current user');\n      return [];\n    }\n    \n    console.log('Current user retrieved:', currentUser.role);\n    \n    if (currentUser.role === 'ADMIN') {\n      // Nếu là admin, thử lại với endpoint /users\n      return await fetchUsers();\n    }\n    \n    // Không phải admin, phải dùng cách khác\n    // 1. Nếu là bác sĩ, có thể lấy danh sách bệnh nhân được chỉ định\n    // 2. Nếu là receptionist, thử lấy dữ liệu theo cách khác\n    \n    // Endpoint hoặc API call thích hợp theo role\n    // Ví dụ: const patients = await authenticatedGet('/appointments/patients');\n    \n    // Tạm thời giữ nguyên dữ liệu hiện tại nếu có\n    return mockUsers.length > 0 ? mockUsers : [];\n  } catch (error) {\n    console.error('Alternative user fetch failed:', error);\n    return [];\n  }\n};\n\n// Mock function để gửi thông tin queue đến bác sĩ\nexport const sendQueueToDoctor = async (queueId: string): Promise<Queue | null> => {\n  try {\n    // Lấy thông tin queue\n    const queue = mockQueues.find(q => q._id === queueId);\n    \n    if (!queue) {\n      console.error(`Queue with ID ${queueId} not found.`);\n      return null;\n    }\n    \n    // Kiểm tra xem queue đã được gán cho bác sĩ chưa\n    if (!queue.doctorId) {\n      console.error(`Queue ${queueId} has no assigned doctor.`);\n      return null;\n    }\n    \n    // Trong môi trường thực tế, tại đây sẽ có logic gửi thông báo đến bác sĩ\n    // Trong mock data, ta chỉ cần đảm bảo trạng thái là in_progress\n    if (queue.status !== 'in_progress') {\n      queue.status = 'in_progress';\n      queue.updatedAt = new Date().toISOString();\n    }\n    \n    console.log(`Mock: Queue ${queueId} information sent to doctor ${queue.doctorId}`);\n    return queue;\n  } catch (error) {\n    console.error('Error sending queue information to doctor:', error);\n    throw error;\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 727, "column": 0}, "map": {"version":3,"sources":["file:///D:/%C4%90%E1%BB%93%20%C3%A1n%20A/hospitality-website-main/hospitality-website-main/my-app/src/app/receptionistPage/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { UsersIcon, ClockIcon, CheckSquareIcon, CalendarIcon, UserIcon, LogOutIcon, CheckCircleIcon, RefreshCcw } from 'lucide-react';\nimport { useAuth } from '../context/AuthContext';\nimport { \n  getAllPatients, \n  getQueuesByStatus,\n  // Removed initializeData import to prevent unauthorized access\n} from '../datats/mockPatients';\nimport * as apiService from '../services/api.service';\n\ninterface DashboardProps {\n  onNavigate: (view: string) => void;\n}\n\nexport function Dashboard({ onNavigate }: DashboardProps) {\n  const { user, logout, token } = useAuth();\n  \n  // State cho các thống kê từ mock data\n  const [patientCount, setPatientCount] = useState(0);\n  const [waitingCount, setWaitingCount] = useState(0);\n  const [completedTodayCount, setCompletedTodayCount] = useState(0);\n  const [newPatientsToday, setNewPatientsToday] = useState(0);\n  \n  // State cho danh sách queue đã hoàn thành\n  const [completedQueues, setCompletedQueues] = useState<any[]>([]);\n  const [loadingQueues, setLoadingQueues] = useState(false);\n  const [queueError, setQueueError] = useState<string | null>(null);\n  \n  // Pagination state cho danh sách queue đã hoàn thành\n  const [currentPage, setCurrentPage] = useState(1);\n  const [queuesPerPage, setQueuesPerPage] = useState(5);\n  const [totalPages, setTotalPages] = useState(1);\n\n  // Load dữ liệu từ API khi component mount\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        // Removed initializeData() call to prevent 403 Forbidden error\n        // This was trying to access medicines data which receptionists don't have permission for\n        \n        // Lấy tổng số bệnh nhân\n        const patients = await getAllPatients();\n        setPatientCount(patients.length);\n        \n        // Tính số bệnh nhân mới hôm nay\n        const today = new Date().toISOString().split('T')[0]; // Lấy ngày hiện tại dạng YYYY-MM-DD\n        const newPatients = patients.filter(p => \n          p.createdAt.startsWith(today)).length;\n        setNewPatientsToday(newPatients);\n        \n        // Lấy số bệnh nhân đang chờ\n        const waitingQueues = await getQueuesByStatus('waiting');\n        setWaitingCount(waitingQueues.length);\n        \n        // Lấy số bệnh nhân đã hoàn thành khám hôm nay\n        const todayStart = new Date();\n        todayStart.setHours(0, 0, 0, 0); // Đặt thời gian về đầu ngày\n        \n        const completedQueues = await getQueuesByStatus('completed');\n        const completedToday = completedQueues.filter(q => {\n          const queueDate = new Date(q.updatedAt);\n          return queueDate >= todayStart;\n        });\n        setCompletedTodayCount(completedToday.length);\n        \n        // Lấy danh sách queue đã hoàn thành\n        await fetchCompletedQueues();\n      } catch (error) {\n        console.error('Error loading dashboard data:', error);\n      }\n    };\n    \n    loadData();\n  }, [token]);\n\n  // Thống kê hiển thị với dữ liệu từ mock data\n  const stats = [\n    {\n      title: 'Lịch hẹn hôm nay',\n      value: `${waitingCount + completedTodayCount}`,\n      icon: <CalendarIcon className=\"h-6 w-6 text-blue-600\" />,\n      change: `${waitingCount} chờ`,\n      changeType: 'neutral'\n    },\n    {\n      title: 'Đang chờ khám',\n      value: `${waitingCount}`,\n      icon: <ClockIcon className=\"h-6 w-6 text-yellow-600\" />,\n      change: waitingCount > 0 ? `${waitingCount} bệnh nhân` : 'Không có',\n      changeType: 'neutral'\n    },\n    {\n      title: 'Hoàn thành hôm nay',\n      value: `${completedTodayCount}`,\n      icon: <CheckSquareIcon className=\"h-6 w-6 text-green-600\" />,\n      change: completedTodayCount > 0 ? \n        `${Math.round((completedTodayCount / (completedTodayCount + waitingCount || 1)) * 100)}%` : \n        '0%',\n      changeType: 'increase'\n    },\n    {\n      title: 'Tổng bệnh nhân',\n      value: patientCount.toString(),\n      icon: <UsersIcon className=\"h-6 w-6 text-purple-600\" />,\n      change: `+${newPatientsToday} mới`,\n      changeType: 'increase'\n    }\n  ];\n\n  const appointments = [\n    { id: 1, patient: 'Nguyễn Văn A', time: '9:00 AM', doctor: 'Dr. Nguyễn Thị Hương', department: 'Nội khoa', status: 'Đang chờ' },\n    { id: 2, patient: 'Trần Văn B', time: '9:30 AM', doctor: 'Dr. Lê Minh Tuấn', department: 'Tim mạch', status: 'Đang khám' },\n    { id: 3, patient: 'Phạm Thị C', time: '10:00 AM', doctor: 'Dr. Trần Thị Mai', department: 'Da liễu', status: 'Đặt trước' },\n    { id: 4, patient: 'Hoàng Văn D', time: '10:30 AM', doctor: 'Dr. Nguyễn Thị Hương', department: 'Nội khoa', status: 'Đặt trước' },\n    { id: 5, patient: 'Lê Thị E', time: '11:00 AM', doctor: 'Dr. Phạm Văn Nam', department: 'Nhãn khoa', status: 'Đặt trước' }\n  ];\n\n  // Hàm lấy danh sách queue đã hoàn thành\n  const fetchCompletedQueues = async () => {\n    setLoadingQueues(true);\n    setQueueError(null);\n    \n    try {\n      if (token) {\n        // Sử dụng API với token\n        try {\n          console.log(\"Fetching completed queues from API...\");\n          const response = await apiService.getQueuesByStatus('completed', token);\n          console.log(\"API response:\", response);\n          \n          // Format lại dữ liệu nếu cần\n          const formattedQueues = response.map((queue: any) => ({\n            ...queue,\n            patientName: queue.patient && typeof queue.patient === 'object' ? \n                        queue.patient.fullName : 'Không có tên',\n            doctorName: queue.doctorId && typeof queue.doctorId === 'object' ? \n                       queue.doctorId.fullName : 'Không rõ bác sĩ'\n          }));\n          \n          // Sắp xếp theo thời gian hoàn thành mới nhất\n          formattedQueues.sort((a: any, b: any) => new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime());\n          \n          setCompletedQueues(formattedQueues);\n          setTotalPages(Math.ceil(formattedQueues.length / queuesPerPage));\n          setCurrentPage(1); // Reset to first page when data changes\n        } catch (apiError: any) {\n          console.error(\"API error:\", apiError);\n          setQueueError(`Lỗi khi lấy dữ liệu từ API: ${apiError.message}`);\n          \n          // Fallback to mock data\n          await fetchCompletedQueuesMock();\n        }\n      } else {\n        // Sử dụng mock data nếu không có token\n        await fetchCompletedQueuesMock();\n      }\n    } catch (error: any) {\n      console.error(\"Error fetching completed queues:\", error);\n      setQueueError(`Lỗi: ${error.message}`);\n    } finally {\n      setLoadingQueues(false);\n    }\n  };\n  \n  // Hàm fallback sử dụng mock data\n  const fetchCompletedQueuesMock = async () => {\n    try {\n      console.log(\"Using mock data for completed queues...\");\n      // Remove initializeData call here too\n      \n      // Lấy danh sách queue đã hoàn thành từ mock data\n      const mockCompletedQueues = await getQueuesByStatus('completed');\n      \n      // Format lại dữ liệu để hiển thị\n      const formattedMockQueues = await Promise.all(mockCompletedQueues.map(async (queue: any) => {\n        // Giả sử bạn có các hàm mock để lấy thông tin bệnh nhân và bác sĩ\n        let patientName = 'Không có tên';\n        \n        // Xử lý các cấu trúc dữ liệu khác nhau có thể có\n        if (queue.patientInfo && queue.patientInfo.fullName) {\n          patientName = queue.patientInfo.fullName;\n        } else if (queue.patient && typeof queue.patient === 'object' && queue.patient.fullName) {\n          patientName = queue.patient.fullName;\n        }\n        \n        return {\n          ...queue,\n          patientName: patientName,\n          doctorName: queue.doctorId ? `Bác sĩ ${queue._id.substring(0, 5)}` : 'Không rõ bác sĩ',\n          completedAt: new Date(queue.updatedAt).toLocaleString('vi-VN')\n        };\n      }));\n      \n      // Sắp xếp theo thời gian hoàn thành mới nhất\n      formattedMockQueues.sort((a: any, b: any) => new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime());\n      \n      setCompletedQueues(formattedMockQueues);\n      setTotalPages(Math.ceil(formattedMockQueues.length / queuesPerPage));\n      setCurrentPage(1); // Reset to first page when data changes\n    } catch (mockError: any) {\n      console.error(\"Error loading mock data for completed queues:\", mockError);\n      setQueueError(`Không thể tải dữ liệu mô phỏng: ${mockError.message}`);\n      setCompletedQueues([]);\n      setTotalPages(1);\n    }\n  };\n\n  // Calculating pagination variables\n  const indexOfLastQueue = currentPage * queuesPerPage;\n  const indexOfFirstQueue = indexOfLastQueue - queuesPerPage;\n  const currentQueues = completedQueues.slice(indexOfFirstQueue, indexOfLastQueue);\n  \n  // Function to handle page change\n  const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\n  \n  // Function to handle records per page change\n  const handleRecordsPerPageChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = parseInt(e.target.value);\n    setQueuesPerPage(value);\n    setTotalPages(Math.ceil(completedQueues.length / value));\n    setCurrentPage(1); // Reset to first page when changing records per page\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white shadow\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex justify-between items-center py-4\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Hệ thống Lễ tân MediClinic</h1>\n          <div className=\"flex items-center\">\n            <div className=\"mr-4 text-right\">\n              <p className=\"text-sm font-medium text-gray-900\">{user?.fullName || 'Người dùng'}</p>\n              <p className=\"text-xs text-gray-500\">Lễ tân</p>\n            </div>\n            <div className=\"h-10 w-10 rounded-full bg-gray-300 flex items-center justify-center\">\n              <UserIcon className=\"h-5 w-5 text-gray-600\" />\n            </div>\n            <button \n              onClick={logout}\n              className=\"ml-4 p-2 rounded-full text-gray-500 hover:bg-gray-100\"\n              title=\"Đăng xuất\"\n            >\n              <LogOutIcon size={20} />\n            </button>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4 mb-6\">\n          {stats.map((stat, index) => (\n            <div key={index} className=\"bg-white overflow-hidden shadow rounded-lg\">\n              <div className=\"p-5\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">{stat.icon}</div>\n                  <div className=\"ml-5 w-0 flex-1\">\n                    <dl>\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">{stat.title}</dt>\n                      <dd>\n                        <div className=\"text-lg font-medium text-gray-900\">{stat.value}</div>\n                      </dd>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n              <div className=\"bg-gray-50 px-5 py-3\">\n                <div className=\"text-sm\">\n                  <span className={`font-medium ${\n                    stat.changeType === 'increase' ? 'text-green-600' : \n                    stat.changeType === 'decrease' ? 'text-red-600' : 'text-gray-500'\n                  }`}>\n                    {stat.change}\n                  </span>\n                  <span className=\"text-gray-500\"> so với hôm qua</span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Completed Queues List */}\n        <div className=\"bg-white shadow rounded-lg mb-6\">\n          <div className=\"px-4 py-5 sm:px-6 flex justify-between items-center\">\n            <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Danh sách bệnh nhân đã hoàn thành khám</h3>\n            <button \n              onClick={fetchCompletedQueues}\n              className=\"px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 rounded flex items-center\"\n              disabled={loadingQueues}\n            >\n              <RefreshCcw size={14} className={`mr-1 ${loadingQueues ? 'animate-spin' : ''}`} />\n              Làm mới\n            </button>\n          </div>\n          \n          {queueError && (\n            <div className=\"px-4 py-3 bg-red-50 text-red-700 border-t border-b border-red-200\">\n              {queueError}\n            </div>\n          )}\n          \n          <div className=\"border-t border-gray-200\">\n            {loadingQueues ? (\n              <div className=\"flex justify-center items-center py-8\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"></div>\n                <span className=\"ml-2 text-gray-600\">Đang tải dữ liệu...</span>\n              </div>\n            ) : completedQueues.length > 0 ? (\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Bệnh nhân\n                      </th>\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Bác sĩ\n                      </th>\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Ngày hoàn thành\n                      </th>\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Trạng thái\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {currentQueues.map((queue) => (\n                      <tr key={queue._id} className=\"hover:bg-gray-50\">\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {queue.patientName || (queue.patient && typeof queue.patient === 'object' ? \n                              queue.patient.fullName : 'Không có tên')}\n                          </div>\n                          <div className=\"text-sm text-gray-500\">\n                            ID: {queue.patient && typeof queue.patient === 'object' ? \n                              queue.patient.userId : queue.patient || 'N/A'}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-900\">\n                            {queue.doctorName || (queue.doctorId && typeof queue.doctorId === 'object' ? \n                              queue.doctorId.fullName : 'Không rõ bác sĩ')}\n                          </div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {new Date(queue.updatedAt).toLocaleString('vi-VN')}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n                            <CheckCircleIcon size={14} className=\"mr-1\" /> Hoàn thành\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                \n                {/* Pagination Controls */}\n                <div className=\"px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\">\n                  <div className=\"flex flex-col gap-4 sm:hidden\">\n                    <div className=\"flex items-center justify-between\">\n                      <p className=\"text-sm text-gray-700\">\n                        Trang {currentPage}/{totalPages}\n                      </p>\n                      <select \n                        className=\"border border-gray-300 rounded-md py-1 px-2 focus:outline-none focus:ring-2 focus:ring-black focus:border-black text-sm\"\n                        value={queuesPerPage}\n                        onChange={(e) => {\n                          setQueuesPerPage(Number(e.target.value));\n                          setTotalPages(Math.ceil(completedQueues.length / Number(e.target.value)));\n                          setCurrentPage(1); // Reset to first page when changing records per page\n                        }}\n                      >\n                        <option value={5}>5 mỗi trang</option>\n                        <option value={10}>10 mỗi trang</option>\n                        <option value={20}>20 mỗi trang</option>\n                        <option value={completedQueues.length}>Tất cả</option>\n                      </select>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <button\n                        onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n                        className={`relative inline-flex items-center px-4 py-2 rounded-md text-sm font-medium ${\n                          currentPage === 1 \n                            ? 'text-gray-400 bg-gray-100'\n                            : 'text-blue-600 bg-blue-100 hover:bg-blue-200'\n                        } focus:outline-none`}\n                        disabled={currentPage === 1}\n                      >\n                        Trước\n                      </button>\n                      <span className=\"text-sm font-medium\">\n                        {currentPage} / {totalPages}\n                      </span>\n                      <button\n                        onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n                        className={`relative inline-flex items-center px-4 py-2 rounded-md text-sm font-medium ${\n                          currentPage === totalPages \n                            ? 'text-gray-400 bg-gray-100'\n                            : 'text-blue-600 bg-blue-100 hover:bg-blue-200'\n                        } focus:outline-none`}\n                        disabled={currentPage === totalPages}\n                      >\n                        Tiếp theo\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"hidden sm:flex-1 sm:flex sm:justify-between\">\n                    <div className=\"flex items-center\">\n                      <p className=\"text-sm text-gray-700\">\n                        Hiển thị{' '}\n                        <span className=\"font-medium\">{(currentPage - 1) * queuesPerPage + 1}</span>\n                        {' '}đến{' '}\n                        <span className=\"font-medium\">{Math.min(currentPage * queuesPerPage, completedQueues.length)}</span>\n                        {' '}trong tổng số{' '}\n                        <span className=\"font-medium\">{completedQueues.length}</span>\n                        {' '}bệnh nhân đã hoàn thành khám\n                      </p>\n                      <select \n                        className=\"ml-3 border border-gray-300 rounded-md py-1 px-2 focus:outline-none focus:ring-2 focus:ring-black focus:border-black text-sm\"\n                        value={queuesPerPage}\n                        onChange={(e) => {\n                          setQueuesPerPage(Number(e.target.value));\n                          setTotalPages(Math.ceil(completedQueues.length / Number(e.target.value)));\n                          setCurrentPage(1); // Reset to first page when changing records per page\n                        }}\n                      >\n                        <option value={5}>5 mỗi trang</option>\n                        <option value={10}>10 mỗi trang</option>\n                        <option value={20}>20 mỗi trang</option>\n                        <option value={completedQueues.length}>Hiển thị tất cả</option>\n                      </select>\n                    </div>\n                    <div>\n                      <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\" aria-label=\"Pagination\">\n                        <button\n                          onClick={() => setCurrentPage(1)}\n                          className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10\"\n                        >\n                          <span className=\"sr-only\">Đến trang đầu</span>\n                          <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 18l-6-6 6-6\" />\n                          </svg>\n                        </button>\n                        <button\n                          onClick={() => setCurrentPage(currentPage - 1)}\n                          className=\"relative inline-flex items-center px-2 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10\"\n                          disabled={currentPage === 1}\n                        >\n                          <span className=\"sr-only\">Trang trước</span>\n                          <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 18l-6-6 6-6\" />\n                          </svg>\n                        </button>\n                        \n                        {/* Page number buttons */}\n                        {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                          // Logic to show pages around current page\n                          let pageToShow;\n                          if (totalPages <= 5) {\n                            pageToShow = i + 1;\n                          } else if (currentPage <= 3) {\n                            pageToShow = i + 1;\n                          } else if (currentPage >= totalPages - 2) {\n                            pageToShow = totalPages - 4 + i;\n                          } else {\n                            pageToShow = currentPage - 2 + i;\n                          }\n                          \n                          if (pageToShow > 0 && pageToShow <= totalPages) {\n                            return (\n                              <button\n                                key={pageToShow}\n                                onClick={() => setCurrentPage(pageToShow)}\n                                className={`relative inline-flex items-center px-4 py-2 border border-gray-300 ${\n                                  currentPage === pageToShow\n                                    ? 'bg-blue-600 text-white'\n                                    : 'bg-white text-gray-700 hover:bg-gray-50'\n                                } text-sm font-medium focus:z-10 focus:outline-none focus:ring-1 focus:ring-black focus:border-black transition-colors`}\n                              >\n                                {pageToShow}\n                              </button>\n                            );\n                          }\n                          return null;\n                        })}\n                        \n                        <button\n                          onClick={() => setCurrentPage(currentPage + 1)}\n                          className=\"relative inline-flex items-center px-2 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10\"\n                          disabled={currentPage === totalPages}\n                        >\n                          <span className=\"sr-only\">Trang tiếp theo</span>\n                          <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 6l6 6-6 6\" />\n                          </svg>\n                        </button>\n                        <button\n                          onClick={() => setCurrentPage(totalPages)}\n                          className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10\"\n                        >\n                          <span className=\"sr-only\">Đến trang cuối</span>\n                          <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={2} stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 6l6 6-6 6\" />\n                          </svg>\n                        </button>\n                      </nav>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"text-center py-8 text-gray-500\">\n                <CheckCircleIcon className=\"mx-auto h-12 w-12 text-gray-400 mb-2\" />\n                <p className=\"text-gray-500\">Không có bệnh nhân nào đã hoàn thành khám</p>\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {/* Quick Actions */}\n        <div className=\"bg-white shadow rounded-lg\">\n          <div className=\"px-4 py-5 sm:px-6\">\n            <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Thao tác nhanh</h3>\n          </div>\n          <div className=\"border-t border-gray-200\">\n            <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3 p-6\">\n              {/* Card 1 - Patient Management */}\n              <div \n                className=\"relative rounded-lg border border-gray-300 bg-white px-6 py-5 shadow-sm flex items-center space-x-3 hover:border-gray-400 cursor-pointer\"\n                onClick={() => onNavigate('PatientManagement')}\n              >\n                <div className=\"flex-shrink-0 bg-blue-100 rounded-md p-2\">\n                  <UsersIcon className=\"h-6 w-6 text-blue-600\" />\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <p className=\"text-sm font-medium text-gray-900\">Quản lý bệnh nhân</p>\n                  <p className=\"text-sm text-gray-500\">Xem và quản lý thông tin bệnh nhân</p>\n                </div>\n              </div>\n              \n              {/* Card 2 - Queue Management */}\n              <div \n                className=\"relative rounded-lg border border-gray-300 bg-white px-6 py-5 shadow-sm flex items-center space-x-3 hover:border-gray-400 cursor-pointer\"\n                onClick={() => onNavigate('QueueManagement')}\n              >\n                <div className=\"flex-shrink-0 bg-green-100 rounded-md p-2\">\n                  <CalendarIcon className=\"h-6 w-6 text-green-600\" />\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <p className=\"text-sm font-medium text-gray-900\">Quản lý lịch hẹn</p>\n                  <p className=\"text-sm text-gray-500\">Thêm và chỉnh sửa lịch hẹn</p>\n                </div>\n              </div>\n              \n              {/* Card 3 - Medication History */}\n              <div \n                className=\"relative rounded-lg border border-gray-300 bg-white px-6 py-5 shadow-sm flex items-center space-x-3 hover:border-gray-400 cursor-pointer\"\n                onClick={() => onNavigate('MedicationHistory')}\n              >\n                <div className=\"flex-shrink-0 bg-purple-100 rounded-md p-2\">\n                  <ClockIcon className=\"h-6 w-6 text-purple-600\" />\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <p className=\"text-sm font-medium text-gray-900\">Báo cáo</p>\n                  <p className=\"text-sm text-gray-500\">Xem báo cáo hoạt động</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2096, "column": 0}, "map": {"version":3,"sources":["file:///D:/%C4%90%E1%BB%93%20%C3%A1n%20A/hospitality-website-main/hospitality-website-main/my-app/src/app/receptionistPage/components/Patients/PatientForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { XIcon, UserIcon, SaveIcon } from 'lucide-react';\nimport { User, generateMongoId } from '../../../datats/mockPatients';\nimport { useAuth } from '../../../context/AuthContext';\nimport * as apiService from '../../../services/api.service';\n\ninterface PatientFormProps {\n  patient?: User | null;\n  onClose: () => void;\n  onSave?: (patient: Partial<User>) => void;\n  isLoading?: boolean;\n}\n\nexport function PatientForm({ patient, onClose, onSave, isLoading = false }: PatientFormProps) {\n  const [formData, setFormData] = useState({\n    fullName: '',\n    userId: '',\n    username: '',\n    email: '',\n    phone: '',\n    password: '',\n    role: 'PATIENT' as const,\n  });\n  const [error, setError] = useState<string | null>(null);\n  const [fieldErrors, setFieldErrors] = useState<{[key: string]: string}>({});\n  const [internalLoading, setInternalLoading] = useState(false);\n  \n  // Combine external and internal loading states\n  const loading = isLoading || internalLoading;\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n  const { token, user } = useAuth();\n\n  // Define mock functions for fallback\n  const addPatient = async (patientData: Partial<User>): Promise<User | null> => {\n    try {\n      // Create a new patient object with MongoDB-like ID\n      const newPatient = {\n        ...patientData,\n        _id: generateMongoId(),\n        userId: patientData.userId || `PA${Date.now()}`,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        __v: 0\n      } as User;\n      \n      console.log(\"Using mock function to add patient:\", newPatient);\n      return newPatient;\n    } catch (error) {\n      console.error(\"Error in mock addPatient:\", error);\n      return null;\n    }\n  };\n\n  const updatePatient = (id: string, patientData: Partial<User>): User | null => {\n    try {\n      // In a real implementation with a database, this would update the record\n      // Here we just return the merged data as if it was updated\n      const updatedPatient = {\n        ...patient,\n        ...patientData,\n        _id: id,\n        updatedAt: new Date().toISOString()\n      } as User;\n      \n      console.log(`Using mock function to update patient with ID ${id}:`, updatedPatient);\n      return updatedPatient;\n    } catch (error) {\n      console.error(`Error in mock updatePatient for ${id}:`, error);\n      return null;\n    }\n  };\n\n  const isEditing = !!patient;\n\n  useEffect(() => {\n    if (patient) {\n      setFormData({\n        fullName: patient.fullName || '',\n        userId: patient.userId || '',\n        username: patient.username || '',\n        email: patient.email || '',\n        phone: patient.phone || '',\n        password: '',  // Không hiển thị mật khẩu\n        role: 'PATIENT',  // Vì form này chỉ dành cho bệnh nhân\n      });\n    }\n  }, [patient]);\n\n  // Clear success message after 5 seconds\n  useEffect(() => {\n    if (successMessage) {\n      const timer = setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [successMessage]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n    // Xóa lỗi khi người dùng thay đổi input\n    setError(null);\n    setFieldErrors(prev => ({ ...prev, [name]: '' }));\n  };\n\n  const validateForm = (): boolean => {\n    const errors: {[key: string]: string} = {};\n    let isValid = true;\n    \n    // Validate required fields\n    if (!formData.fullName.trim()) {\n      errors.fullName = 'Họ và tên là bắt buộc';\n      isValid = false;\n    }\n    \n    if (!formData.username.trim()) {\n      errors.username = 'Tên đăng nhập là bắt buộc';\n      isValid = false;\n    }\n    \n    if (!formData.email.trim()) {\n      errors.email = 'Email là bắt buộc';\n      isValid = false;\n    }\n    \n    if (!formData.phone.trim()) {\n      errors.phone = 'Số điện thoại là bắt buộc';\n      isValid = false;\n    }\n    \n    // Validate email format\n    if (formData.email && !/^\\S+@\\S+\\.\\S+$/.test(formData.email)) {\n      errors.email = 'Email không hợp lệ. Vui lòng kiểm tra lại.';\n      isValid = false;\n    }\n    \n    // Validate phone number (adjust for Vietnamese phone numbers)\n    if (formData.phone && !/^[0-9]{10,11}$/.test(formData.phone.replace(/\\s/g, ''))) {\n      errors.phone = 'Số điện thoại phải có 10-11 số.';\n      isValid = false;\n    }\n    \n    // Validate password requirement for new users\n    if (!isEditing && (!formData.password || formData.password.length < 6)) {\n      errors.password = 'Mật khẩu phải có ít nhất 6 ký tự.';\n      isValid = false;\n    }\n    \n    setFieldErrors(errors);\n    return isValid;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    // Xóa lỗi trước khi submit\n    setError(null);\n    setSuccessMessage(null);\n    \n    // Validate form first\n    if (!validateForm()) {\n      return;\n    }\n    \n    setInternalLoading(true);\n    \n    // Chuẩn bị dữ liệu người dùng\n    const userData = {\n      ...formData,\n      // Nếu không phải là chế độ chỉnh sửa và userId trống, không cần thêm vào\n      // hệ thống sẽ tự động tạo userId\n      ...((!isEditing && !formData.userId.trim()) ? {} : { userId: formData.userId }),\n      role: formData.role as 'PATIENT' | 'DOCTOR' | 'PHARMACIST' | 'RECEPTIONIST' | 'ADMIN',\n    };\n\n    try {\n      let resultPatient = null;\n      \n      if (isEditing && patient && patient._id) {\n        // Cập nhật bệnh nhân hiện có\n        if (token) {\n          try {\n            // Attempt to use the API first\n            console.log('Using API to update patient');\n            const response = await apiService.updateUser(patient._id, userData, token);\n            resultPatient = response;\n            console.log('API update successful:', response);\n          } catch (apiError: any) {\n            console.error('API error when updating patient:', apiError);\n            \n            // Hiển thị chi tiết lỗi từ API\n            if (apiError.response) {\n              if (apiError.response.data && apiError.response.data.field) {\n                const fieldName = apiError.response.data.field;\n                setFieldErrors({\n                  [fieldName]: apiError.response.data.message || `Lỗi với trường ${fieldName}`\n                });\n              } else {\n                setError(`Lỗi từ server: ${apiError.response.data?.message || apiError.message}`);\n              }\n            } else {\n              setError(`Lỗi kết nối: ${apiError.message}`);\n            }\n            \n            console.log('Falling back to mock update function');\n            // Fallback to mock update if API fails\n            resultPatient = updatePatient(patient._id, userData);\n          }\n        } else {\n          // Use mock update if no token is available\n          console.log('No token available, using mock update function');\n          resultPatient = updatePatient(patient._id, userData);\n        }\n        \n        if (resultPatient) {\n          setSuccessMessage(`Đã cập nhật thông tin bệnh nhân: ${resultPatient.fullName}`);\n        } else {\n          setError('Không thể cập nhật thông tin bệnh nhân. Vui lòng thử lại.');\n          setInternalLoading(false);\n          return;\n        }\n      } else {\n        // Thêm bệnh nhân mới\n        if (token) {\n          try {\n            // Attempt to use the API first\n            console.log('Using API to create new patient');\n            console.log('User role:', user?.role);\n            console.log('Data being sent:', userData);\n            \n            const response = await apiService.createUser(userData, token);\n            resultPatient = response;\n            console.log('API creation successful:', response);\n          } catch (apiError: any) {\n            console.error('API error when creating patient:', apiError);\n            \n            // Hiển thị chi tiết lỗi từ API\n            if (apiError.response) {\n              console.log('API error response:', apiError.response.data);\n              \n              if (apiError.response.data && apiError.response.data.field) {\n                const fieldName = apiError.response.data.field;\n                setFieldErrors({\n                  [fieldName]: apiError.response.data.message || `Lỗi với trường ${fieldName}`\n                });\n              } else {\n                setError(`Lỗi từ server: ${apiError.response.data?.message || apiError.message}`);\n              }\n              \n              // Nếu lỗi là không có quyền, không fallback\n              if (apiError.response.status === 403) {\n                setError(`Bạn không có quyền tạo bệnh nhân mới. Vui lòng liên hệ admin.`);\n                setInternalLoading(false);\n                return;\n              }\n            } else {\n              setError(`Lỗi kết nối: ${apiError.message}`);\n            }\n            \n            console.log('Falling back to mock creation function');\n            // Fallback to mock creation if API fails\n            resultPatient = await addPatient(userData);\n          }\n        } else {\n          // Use mock creation if no token is available\n          console.log('No token available, using mock creation function');\n          resultPatient = await addPatient(userData);\n        }\n        \n        if (resultPatient) {\n          setSuccessMessage(`Đã thêm bệnh nhân mới: ${resultPatient.fullName} (ID: ${resultPatient.userId})`);\n          \n          // Reset form after successful creation if not using API or if specifically requested\n          if (!token) {\n            setFormData({\n              fullName: '',\n              userId: '',\n              username: '',\n              email: '',\n              phone: '',\n              password: '',\n              role: 'PATIENT' as const,\n            });\n          }\n        } else {\n          setError('Không thể thêm bệnh nhân mới. Vui lòng thử lại.');\n          setInternalLoading(false);\n          return;\n        }\n      }\n\n      // Gọi onSave callback nếu có để thông báo lên component cha\n      if (onSave) {\n        onSave(resultPatient || userData);\n      }\n      \n      // Nếu thành công và đang chỉnh sửa, đóng form sau 1 giây\n      if (isEditing) {\n        setTimeout(() => {\n          onClose();\n        }, 1000);\n      }\n    } catch (error) {\n      console.error('Lỗi khi lưu bệnh nhân:', error);\n      // Hiển thị thông báo lỗi\n      if (error instanceof Error) {\n        setError(error.message);\n      } else {\n        setError('Đã xảy ra lỗi khi lưu thông tin bệnh nhân.');\n      }\n    } finally {\n      setInternalLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"w-full\">\n      {/* Form header */}\n      <div className=\"px-6 py-4 border-b border-gray-300 bg-gray-50 flex justify-between items-center\">\n        <div className=\"flex items-center\">\n          <UserIcon size={20} className=\"mr-2 text-black\" />\n          <h2 className=\"text-lg font-semibold text-black\">\n            {isEditing ? 'Sửa thông tin bệnh nhân' : 'Thêm bệnh nhân mới'}\n          </h2>\n        </div>\n        <button\n          onClick={onClose}\n          className=\"p-1.5 rounded-full hover:bg-gray-200 text-black transition-colors\"\n          disabled={loading}\n        >\n          <XIcon size={20} />\n        </button>\n      </div>\n\n      {/* Form content */}\n      <form onSubmit={handleSubmit} className=\"p-6\">\n        {/* Error message */}\n        {error && (\n          <div className=\"mb-4 p-3 bg-red-50 border border-red-200 text-red-700 rounded-lg\">\n            <p className=\"font-medium\">{error}</p>\n          </div>\n        )}\n        \n        {/* Success message */}\n        {successMessage && (\n          <div className=\"mb-4 p-3 bg-green-50 border border-green-200 text-green-700 rounded-lg\">\n            <p className=\"font-medium\">{successMessage}</p>\n          </div>\n        )}\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label htmlFor=\"fullName\" className=\"block text-sm font-medium text-black mb-2\">\n              Họ và tên <span className=\"text-red-600\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              id=\"fullName\"\n              name=\"fullName\"\n              required\n              placeholder=\"Nhập họ và tên...\"\n              className={`w-full border ${fieldErrors.fullName ? 'border-red-500' : 'border-gray-300'} rounded-lg px-4 py-2.5 focus:outline-none focus:ring-2 focus:ring-black focus:border-black text-black shadow-sm`}\n              value={formData.fullName}\n              onChange={handleChange}\n              disabled={loading}\n            />\n            {fieldErrors.fullName && (\n              <p className=\"mt-1 text-sm text-red-600\">{fieldErrors.fullName}</p>\n            )}\n          </div>\n\n          <div>\n            <label htmlFor=\"userId\" className=\"block text-sm font-medium text-black mb-2\">\n              User ID {isEditing && <span className=\"text-red-600\">*</span>}\n              {!isEditing && <span className=\"text-xs text-gray-500 ml-1\">(Tự động nếu để trống)</span>}\n            </label>\n            <input\n              type=\"text\"\n              id=\"userId\"\n              name=\"userId\"\n              required={isEditing}\n              placeholder={isEditing ? \"Nhập User ID...\" : \"Để trống để tạo ID tự động...\"}\n              className={`w-full border ${fieldErrors.userId ? 'border-red-500' : 'border-gray-300'} rounded-lg px-4 py-2.5 focus:outline-none focus:ring-2 focus:ring-black focus:border-black text-black shadow-sm`}\n              value={formData.userId}\n              onChange={handleChange}\n              disabled={loading}\n            />\n            {fieldErrors.userId && (\n              <p className=\"mt-1 text-sm text-red-600\">{fieldErrors.userId}</p>\n            )}\n          </div>\n\n          <div>\n            <label htmlFor=\"username\" className=\"block text-sm font-medium text-black mb-2\">\n              Tên đăng nhập <span className=\"text-red-600\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              name=\"username\"\n              required\n              placeholder=\"Nhập tên đăng nhập...\"\n              className={`w-full border ${fieldErrors.username ? 'border-red-500' : 'border-gray-300'} rounded-lg px-4 py-2.5 focus:outline-none focus:ring-2 focus:ring-black focus:border-black text-black shadow-sm`}\n              value={formData.username}\n              onChange={handleChange}\n              disabled={loading}\n            />\n            {fieldErrors.username && (\n              <p className=\"mt-1 text-sm text-red-600\">{fieldErrors.username}</p>\n            )}\n          </div>\n\n          <div>\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-black mb-2\">\n              Email <span className=\"text-red-600\">*</span>\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              required\n              placeholder=\"Nhập email...\"\n              className={`w-full border ${fieldErrors.email ? 'border-red-500' : 'border-gray-300'} rounded-lg px-4 py-2.5 focus:outline-none focus:ring-2 focus:ring-black focus:border-black text-black shadow-sm`}\n              value={formData.email}\n              onChange={handleChange}\n              disabled={loading}\n            />\n            {fieldErrors.email && (\n              <p className=\"mt-1 text-sm text-red-600\">{fieldErrors.email}</p>\n            )}\n          </div>\n\n          <div>\n            <label htmlFor=\"phone\" className=\"block text-sm font-medium text-black mb-2\">\n              Số điện thoại <span className=\"text-red-600\">*</span>\n            </label>\n            <input\n              type=\"tel\"\n              id=\"phone\"\n              name=\"phone\"\n              required\n              placeholder=\"Nhập số điện thoại...\"\n              className={`w-full border ${fieldErrors.phone ? 'border-red-500' : 'border-gray-300'} rounded-lg px-4 py-2.5 focus:outline-none focus:ring-2 focus:ring-black focus:border-black text-black shadow-sm`}\n              value={formData.phone}\n              onChange={handleChange}\n              disabled={loading}\n            />\n            {fieldErrors.phone && (\n              <p className=\"mt-1 text-sm text-red-600\">{fieldErrors.phone}</p>\n            )}\n          </div>\n\n          <div>\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-black mb-2\">\n              Mật khẩu {!isEditing && <span className=\"text-red-600\">*</span>}\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              required={!isEditing}\n              placeholder={isEditing ? \"Để trống nếu không thay đổi...\" : \"Nhập mật khẩu...\"}\n              className={`w-full border ${fieldErrors.password ? 'border-red-500' : 'border-gray-300'} rounded-lg px-4 py-2.5 focus:outline-none focus:ring-2 focus:ring-black focus:border-black text-black shadow-sm`}\n              value={formData.password}\n              onChange={handleChange}\n              disabled={loading}\n            />\n            {fieldErrors.password && (\n              <p className=\"mt-1 text-sm text-red-600\">{fieldErrors.password}</p>\n            )}\n          </div>\n        </div>\n\n        {/* Form actions */}\n        <div className=\"mt-8 pt-5 border-t border-gray-300 flex justify-end gap-3\">\n          <button\n            type=\"button\"\n            onClick={onClose}\n            className=\"px-5 py-2 border border-gray-300 rounded-lg text-black font-medium hover:bg-gray-50 transition-colors\"\n            disabled={loading}\n          >\n            Hủy\n          </button>\n          <button\n            type=\"submit\"\n            className={`px-5 py-2 rounded-lg text-white font-medium transition-colors flex items-center shadow-sm ${\n              loading ? 'bg-green-400 cursor-not-allowed' : 'bg-green-600 hover:bg-green-700'\n            }`}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <span className=\"animate-spin mr-2\">⏳</span>\n                {isEditing ? 'Đang cập nhật...' : 'Đang lưu...'}\n              </>\n            ) : (\n              <>\n                <SaveIcon size={18} className=\"mr-2\" />\n                {isEditing ? 'Cập nhật' : 'Lưu'}\n              </>\n            )}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2865, "column": 0}, "map": {"version":3,"sources":["file:///D:/%C4%90%E1%BB%93%20%C3%A1n%20A/hospitality-website-main/hospitality-website-main/my-app/src/app/receptionistPage/PatientManagement.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { SearchIcon, PlusIcon, EditIcon, TrashIcon, UsersIcon, ArrowUpDown, UserPlusIcon } from 'lucide-react';\nimport { PatientForm } from './components/Patients/PatientForm';\nimport { \n  User,\n  getAllPatients,\n  searchUsers,\n  addQueue,\n  getQueueByPatientId,\n  initializeData,\n  generateMongoId\n} from '../datats/mockPatients';\nimport { useAuth } from '../context/AuthContext';\nimport * as apiService from '../services/api.service';\nimport axiosInstance from '../services/axios.customize.service';\n\ninterface PatientManagementProps {\n  onBack: () => void;\n}\n\n// ===  Hàm trợ giúp để định dạng ngày tháng ===\nconst formatDate = (isoString: string) => {\n  if (!isoString) return '';\n  const date = new Date(isoString);\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  const hours = String(date.getHours()).padStart(2, '0');\n  const minutes = String(date.getMinutes()).padStart(2, '0');\n  return `${day}/${month}/${year} ${hours}:${minutes}`;\n};\n// === KẾT THÚC THÊM MỚI ===\n\n// Các hàm CRUD giữ nguyên logic gốc \nconst addPatient = async (patientData: Partial<User>, authToken?: string) => {\n  try {\n    if (authToken) {\n      try {\n        const result = await apiService.createUser(patientData, authToken);\n        return result;\n      } catch (apiError) {\n        console.error(\"API error when adding patient:\", apiError);\n        console.log(\"Falling back to mock data for adding patient\");\n      }\n    }\n    const newPatient = {\n      ...patientData,\n      _id: generateMongoId(),\n      userId: patientData.userId || `PA${Date.now()}`,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n      __v: 0\n    } as User;\n    return newPatient;\n  } catch (error) {\n    console.error(\"Error adding patient:\", error);\n    return null;\n  }\n};\n\nconst updatePatient = async (id: string, patientData: Partial<User>, authToken?: string) => {\n    // ... Giữ nguyên logic của bạn\n};\n\nconst deletePatient = async (id: string, authToken?: string) => {\n    // ... Giữ nguyên logic của bạn\n};\n\n\nexport function PatientManagement({ onBack }: PatientManagementProps) {\n  \n  const [showForm, setShowForm] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [editingPatient, setEditingPatient] = useState<User | null>(null);\n  const [refreshData, setRefreshData] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [patients, setPatients] = useState<User[]>([]);\n  const { token } = useAuth();\n  const [authError, setAuthError] = useState<string | null>(null);\n  const [notification, setNotification] = useState<{\n    type: 'success' | 'error';\n    message: string;\n  } | null>(null);\n  \n  const [sortKey, setSortKey] = useState('createdAt-desc');\n\n useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      setAuthError(null);\n      try {\n        let patientData: (User | null)[] = [];\n        if (token) {\n          try {\n            patientData = await apiService.getPatients(token);\n          } catch (apiError: any) {\n            if (apiError.response && apiError.response.status === 403) {\n              setAuthError(\"Không có quyền truy cập dữ liệu bệnh nhân. Vui lòng đăng nhập lại với tài khoản có quyền.\");\n            }\n            await initializeData();\n            patientData = await getAllPatients();\n          }\n        } else {\n          await initializeData();\n          patientData = await getAllPatients();\n        }\n        const validPatients = patientData.filter(patient => patient !== null && patient !== undefined);\n        setPatients(validPatients as User[]);\n      } catch (error) {\n        console.error(\"Error loading patients data:\", error);\n        setPatients([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n}, [refreshData, token]);\n  \n  const handleEdit = (patient: User) => {\n    setEditingPatient(patient);\n    setShowForm(true);\n  };\n  \n  const handleDelete = async (id: string) => {\n    const confirmed = window.confirm(\"Bạn có chắc chắn muốn xóa bệnh nhân này không?\");\n    if (confirmed) {\n      setLoading(true);\n      setNotification(null);\n      try {\n        await deletePatient(id, token || undefined);\n        setNotification({ type: 'success', message: 'Xóa bệnh nhân thành công' });\n        setRefreshData(prev => prev + 1);\n      } catch (error: any) {\n        setNotification({ type: 'error', message: error.message || 'Lỗi khi xóa.' });\n      } finally {\n        setLoading(false);\n        setTimeout(() => setNotification(null), 5000);\n      }\n    }\n  };\n  \nconst handleSavePatient = async (patientData: Partial<User>) => {\n  setLoading(true);\n  setNotification(null);\n  try {\n    if (editingPatient && editingPatient._id) {\n      // Logic cho việc CẬP NHẬT bệnh nhân\n      console.log(\"Data being sent to UPDATE API:\", patientData);\n      \n      // Không cần kiểm tra các trường bắt buộc như password khi cập nhật\n      if (!patientData.fullName || !patientData.email) {\n          throw new Error(\"Vui lòng điền đầy đủ Họ và tên và Email.\");\n      }\n\n      await updatePatient(editingPatient._id, patientData, token || undefined);\n      setNotification({ type: 'success', message: 'Cập nhật thông tin thành công' });\n\n    } else {\n      // Logic cho việc THÊM MỚI bệnh nhân\n      const newPatientData = { ...patientData, role: 'PATIENT' as const };\n      console.log(\"Data being sent to CREATE API:\", newPatientData);\n\n      // Kiểm tra các trường bắt buộc khi tạo mới\n      if (!newPatientData.fullName || !newPatientData.email || !newPatientData.password) {\n          throw new Error(\"Vui lòng điền đầy đủ Họ và tên, Email và Mật khẩu.\");\n      }\n\n      await addPatient(newPatientData, token || undefined);\n      setNotification({ type: 'success', message: 'Thêm bệnh nhân thành công' });\n    }\n\n    // === SỬA LOGIC Ở ĐÂY ===\n    // Nếu các lệnh await ở trên không throw ra lỗi, thì coi như đã thành công.\n    // Không cần kiểm tra `result` nữa.\n    setRefreshData(prev => prev + 1);\n    handleCloseForm();\n\n  } catch (error: any) {\n    // Xử lý lỗi từ API một cách chi tiết\n    console.error(\"Error saving patient:\", error);\n    const errorMessage = error.response?.data?.message || error.message || 'Lỗi khi lưu thông tin. Vui lòng thử lại.';\n    setNotification({ type: 'error', message: errorMessage });\n    \n  } finally {\n    setLoading(false);\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  }\n};\n  \n  const handleCloseForm = () => {\n    setShowForm(false);\n    setEditingPatient(null);\n  };\n  \n  const addToWaitingRoom = async (patientId: string) => {\n    setLoading(true);\n    setNotification(null);\n    try {\n      if (token) {\n        try {\n          const allQueues = await apiService.getQueues(token);\n          const existingQueue = allQueues.find(\n            (q: any) => q.patient === patientId && ['waiting', 'in_progress'].includes(q.status)\n          );\n          if (existingQueue) {\n            throw new Error('Bệnh nhân này đã có trong phòng chờ hoặc đang khám!');\n          }\n          await apiService.createQueue(patientId, token);\n          setNotification({ type: 'success', message: 'Đã thêm bệnh nhân vào phòng chờ!' });\n          setPatients(prevPatients => prevPatients.filter(p => p && p._id !== patientId));\n          return;\n        } catch (apiError: any) {\n           // Fallback to mock\n        }\n      }\n      const existingQueue = await getQueueByPatientId(patientId);\n      if (existingQueue && ['waiting', 'in_progress'].includes(existingQueue.status)) {\n        throw new Error('Bệnh nhân này đã có trong phòng chờ hoặc đang khám!');\n      }\n      const newQueue = await addQueue(patientId);\n      if (newQueue) {\n        setNotification({ type: 'success', message: 'Đã thêm bệnh nhân vào phòng chờ! (dữ liệu mô phỏng)' });\n        setPatients(prevPatients => prevPatients.filter(p => p && p._id !== patientId));\n      } else {\n        throw new Error('Có lỗi khi thêm bệnh nhân vào phòng chờ!');\n      }\n    } catch (error: any) {\n      setNotification({ type: 'error', message: error.message || 'Có lỗi xảy ra!' });\n    } finally {\n      setLoading(false);\n      setTimeout(() => setNotification(null), 5000);\n    }\n  };\n\n  const [searchResults, setSearchResults] = useState<User[]>([]);\n  \n  useEffect(() => {\n    const handleSearch = async () => {\n      if (searchTerm.trim() === '') {\n        setSearchResults([]);\n        return;\n      }\n      try {\n        const results = await searchUsers(searchTerm);\n        setSearchResults(results.filter(user => user && user.role === 'PATIENT'));\n      } catch (error) {\n        setSearchResults([]);\n      }\n    };\n    handleSearch();\n  }, [searchTerm]);\n  \n  const filteredPatients = searchTerm.trim() === '' ? patients : searchResults;\n\n  const sortedPatients = useMemo(() => {\n    if (!filteredPatients) return [];\n    const [key, direction] = sortKey.split('-');\n    if (!key || !direction) return filteredPatients;\n    return [...filteredPatients].sort((a, b) => {\n      if (!a || !b) return 0;\n      const aValue = a[key as keyof User] as any;\n      const bValue = b[key as keyof User] as any;\n      let comparison = 0;\n      if (aValue > bValue) comparison = 1;\n      else if (aValue < bValue) comparison = -1;\n      return direction === 'desc' ? comparison * -1 : comparison;\n    });\n  }, [filteredPatients, sortKey]);\n\n  return (\n    <div className=\"w-full px-4 sm:px-6\">\n      <div className=\"flex items-center mb-4\">\n        <button \n          onClick={onBack}\n          className=\"px-3 py-1 bg-gray-200 hover:bg-gray-300 rounded-md flex items-center text-gray-700\"\n        >\n          ← Quay lại\n        </button>\n      </div>\n      <div className=\"mb-8 border-b border-gray-200 pb-5\">\n        <div className=\"flex justify-between items-center\">\n          <h1 className=\"text-3xl font-bold text-black tracking-tight\">Quản lý bệnh nhân</h1>\n          <button \n            onClick={() => setShowForm(true)} \n            className=\"bg-green-600 hover:bg-green-700 text-white px-5 py-2.5 rounded-lg flex items-center font-medium shadow-sm transition-colors\"\n          >\n            <PlusIcon size={18} className=\"mr-2\" />\n            Thêm bệnh nhân\n          </button>\n        </div>\n        <p className=\"text-black mt-2\">\n          Quản lý thông tin bệnh nhân và thêm vào phòng chờ\n        </p>\n      </div>\n      \n      <div className=\"border border-gray-300 rounded-xl shadow-sm overflow-hidden bg-white\">\n        {authError && (\n          <div className=\"p-4 mb-4 bg-red-100 border border-red-400 text-red-700 rounded\">\n            {authError}\n          </div>\n        )}\n        \n        <div className=\"p-6 border-b border-gray-300 bg-gray-50\">\n          <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n            <div className=\"relative flex-1\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <SearchIcon size={18} className=\"text-black\" />\n              </div>\n              <input \n                type=\"text\" \n                placeholder=\"Tìm kiếm theo tên, ID, email hoặc SĐT...\" \n                className=\"pl-10 pr-4 py-2.5 border border-gray-300 rounded-lg w-full focus:outline-none focus:ring-2 focus:ring-black focus:border-black text-black placeholder-gray-500 shadow-sm\" \n                value={searchTerm} \n                onChange={e => setSearchTerm(e.target.value)} \n              />\n            </div>\n            \n            <div className=\"flex gap-3\">\n              <div className=\"relative\">\n                <select \n                  className=\"appearance-none bg-white border border-gray-300 rounded-lg pl-10 pr-10 py-2.5 focus:outline-none focus:ring-2 focus:ring-black focus:border-black text-black shadow-sm\"\n                  value={sortKey}\n                  onChange={(e) => setSortKey(e.target.value)}\n                >\n                  <option value=\"createdAt-desc\">Sắp xếp: Mới nhất</option>\n                  <option value=\"createdAt-asc\">Sắp xếp: Cũ nhất</option>\n                  <option value=\"fullName-asc\">Sắp xếp: Tên (A-Z)</option>\n                  <option value=\"fullName-desc\">Sắp xếp: Tên (Z-A)</option>\n                </select>\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <ArrowUpDown size={16} className=\"text-black\" />\n                </div>\n                <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n                  <svg className=\"h-4 w-4 text-black\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"p-6\">\n          {sortedPatients && sortedPatients.length > 0 ? (\n            <div className=\"overflow-x-auto border border-gray-200 rounded-lg\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-200\">Họ và tên</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-200\">User ID</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-200\">Username</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-200\">Email</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-200\">Điện thoại</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-200\">Vai trò</th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-200\">Thao tác</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {loading ? (\n                    <tr><td colSpan={7} className=\"px-6 py-10 text-center\">Đang tải dữ liệu...</td></tr>\n                  ) : (\n                    sortedPatients\n                      .filter(patient => patient)\n                      .map((patient, index) => (\n                      <tr key={patient._id} className={index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>\n                        <td \n                          className=\"px-6 py-3.5 whitespace-nowrap text-sm font-medium text-black cursor-pointer\"\n                          title={patient.createdAt ? `Đã tạo vào: ${formatDate(patient.createdAt)}` : 'Không có thông tin ngày tạo'}\n                        >\n                          {patient.fullName}\n                        </td>\n                        <td className=\"px-6 py-3.5 whitespace-nowrap text-sm text-black\">{patient.userId}</td>\n                        <td className=\"px-6 py-3.5 whitespace-nowrap text-sm text-black\">{patient.username}</td>\n                        <td className=\"px-6 py-3.5 whitespace-nowrap text-sm text-black\">{patient.email}</td>\n                        <td className=\"px-6 py-3.5 whitespace-nowrap text-sm text-black\">{patient.phone}</td>\n                        <td className=\"px-6 py-3.5 whitespace-nowrap text-sm text-black\">{patient.role}</td>\n                        <td className=\"px-6 py-3.5 whitespace-nowrap text-sm text-black\">\n                          <div className=\"flex items-center space-x-3\">\n                            <button onClick={() => handleEdit(patient)} className=\"p-1.5 rounded-full hover:bg-gray-100 text-black border border-gray-300\" title=\"Chỉnh sửa\"><EditIcon size={16} /></button>\n                            <button onClick={() => handleDelete(patient._id)} className=\"p-1.5 rounded-full hover:bg-gray-100 text-black border border-gray-300\" title=\"Xóa\"><TrashIcon size={16} /></button>\n                            <button onClick={() => addToWaitingRoom(patient._id)} className=\"text-sm text-white bg-green-600 hover:bg-green-700 px-3 py-1.5 rounded-lg transition-colors shadow-sm flex items-center\">\n                              <UserPlusIcon size={16} className=\"mr-1\" />\n                              Thêm vào phòng chờ\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <div className=\"flex flex-col items-center justify-center py-16 border border-dashed border-gray-300 rounded-lg\">\n                <UsersIcon size={48} className=\"text-gray-400 mb-4\" />\n                <h3 className=\"text-lg font-medium text-black\">Không tìm thấy bệnh nhân</h3>\n                <p className=\"text-black mt-2\">Thử tìm kiếm với từ khóa khác hoặc thêm bệnh nhân mới</p>\n            </div>\n          )}\n          \n          {sortedPatients && sortedPatients.filter(p => p).length > 0 && (\n            <div className=\"mt-6 flex justify-between items-center\">\n              <p className=\"text-sm text-black\">Hiển thị <span className=\"font-medium\">{sortedPatients.filter(p => p).length}</span> bệnh nhân</p>\n              <div className=\"inline-flex shadow-sm rounded-md\">\n                <button className=\"px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-black rounded-l-md hover:bg-gray-50\">Trước</button>\n                <button className=\"px-4 py-2 bg-gray-200 text-black text-sm font-medium border border-gray-300 relative -ml-px hover:bg-gray-300\">1</button>\n                <button className=\"px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-black rounded-r-md hover:bg-gray-50\">Sau</button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {showForm && (\n        // === SỬA LỖI: Thêm class `light` để buộc chế độ sáng ===\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 light\">\n            <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n                <PatientForm \n                  patient={editingPatient} \n                  onClose={handleCloseForm}\n                  onSave={handleSavePatient} \n                  isLoading={loading}\n                />\n            </div>\n        </div>\n      )}\n      \n      {notification && (\n        <div className={`fixed bottom-6 right-6 max-w-sm w-full shadow-lg rounded-lg p-4 flex items-start space-x-4 z-50 ${\n          notification.type === 'success' ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'\n        }`}>\n          <div className={`flex-shrink-0 h-5 w-5 relative mt-0.5 ${\n            notification.type === 'success' ? 'text-green-600' : 'text-red-600'\n          }`}>\n            {notification.type === 'success' ? (\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n              </svg>\n            ) : (\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n              </svg>\n            )}\n          </div>\n          <div className=\"flex-1\">\n            <h3 className={`text-sm font-medium ${\n              notification.type === 'success' ? 'text-green-800' : 'text-red-800'\n            }`}>\n              {notification.type === 'success' ? 'Thành công' : 'Lỗi'}\n            </h3>\n            <p className={`mt-1 text-sm ${\n              notification.type === 'success' ? 'text-green-700' : 'text-red-700'\n            }`}>\n              {notification.message}\n            </p>\n          </div>\n          <button \n            onClick={() => setNotification(null)}\n            className=\"flex-shrink-0 text-gray-500 hover:text-gray-700 focus:outline-none\"\n          >\n            <svg className=\"h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n            </svg>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3865, "column": 0}, "map": {"version":3,"sources":["file:///D:/%C4%90%E1%BB%93%20%C3%A1n%20A/hospitality-website-main/hospitality-website-main/my-app/src/app/receptionistPage/QueueManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MoveRightIcon, CheckCircleIcon, ClockIcon, UserIcon, X, RefreshCcw } from 'lucide-react';\nimport { \n  getAllQueuesWithPatientInfo, \n  updateQueueStatus, \n  Queue,\n  getAllDoctors,\n  getUsersByRole,\n  User,\n  initializeData,\n  sendQueueToDoctor\n} from '../datats/mockPatients';\nimport * as apiService from '../services/api.service';\nimport { useAuth } from '../context/AuthContext';\n\ninterface QueueManagementProps {\n  onBack: () => void;\n}\n\n// Extended interface to work with both API and mock data\ninterface QueueWithPatientInfo {\n  _id: string;\n  patientInfo?: {\n    _id: string;\n    userId: string;\n    fullName: string;\n    phone: string;\n    role: string;\n    [key: string]: any;\n  } | null;\n  // For API response\n  patient?: {\n    _id: string;\n    userId: string;\n    fullName: string;\n    phone: string;\n    role: string;\n    email: string;\n    [key: string]: any;\n  } | string;\n  status: 'waiting' | 'in_progress' | 'completed' | 'canceled';\n  doctorId?: {\n    _id: string;\n    userId: string;\n    fullName: string;\n    [key: string]: any;\n  } | string;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n}\n\nexport function QueueManagement({ onBack }: QueueManagementProps) {\n  // State để lưu trữ danh sách queue đã được fetch từ API\n  const [queues, setQueues] = useState<QueueWithPatientInfo[]>([]);\n  \n  // State để lưu trữ danh sách bệnh nhân đang chờ\n  const [waitingPatients, setWaitingPatients] = useState<QueueWithPatientInfo[]>([]);\n  \n  // State để lưu trữ danh sách bệnh nhân đang khám\n  const [inProgressPatients, setInProgressPatients] = useState<QueueWithPatientInfo[]>([]);\n  \n  // Lấy danh sách bác sĩ từ API\n  const [doctors, setDoctors] = useState<User[]>([]);\n  \n  // State để theo dõi modal chọn bác sĩ\n  const [showDoctorModal, setShowDoctorModal] = useState(false);\n  const [selectedQueue, setSelectedQueue] = useState<string>('');\n  \n  // State để theo dõi trạng thái loading\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Lấy authentication token từ context\n  const { token } = useAuth();\n  \n  // Function để format dữ liệu từ API về đúng định dạng cần dùng\n  const formatApiQueueResponse = (apiData: any[]): QueueWithPatientInfo[] => {\n    return apiData.map(item => ({\n      ...item,\n      // Map thông tin bệnh nhân từ phản hồi API sang format patientInfo cho tương thích\n      patientInfo: item.patient && typeof item.patient === 'object' ? {\n        _id: item.patient._id,\n        userId: item.patient.userId,\n        fullName: item.patient.fullName,\n        phone: item.patient.phone,\n        role: item.patient.role,\n        email: item.patient.email\n      } : null,\n      // Giữ nguyên patient từ API để tiện sử dụng\n    }));\n  };\n  \n  // Format dữ liệu từ mock data để tương thích với kiểu QueueWithPatientInfo\n  const formatMockQueueData = (mockData: any[]): QueueWithPatientInfo[] => {\n    return mockData.map(item => ({\n      ...item,\n      // Đảm bảo kiểu dữ liệu phù hợp với QueueWithPatientInfo\n      patient: item.patient, // Giữ nguyên dạng string cho mock data\n    }));\n  };\n  \n  // Effect để fetch dữ liệu queue từ API khi component được render\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        if (token) {\n          // Fetch data từ API nếu có token\n          try {\n            console.log(\"Fetching queues from API...\");\n            const apiQueues = await apiService.getQueuesWithPatients(token);\n            console.log(\"API response:\", apiQueues);\n            \n            // Format lại dữ liệu từ API\n            const formattedQueues = formatApiQueueResponse(apiQueues);\n            setQueues(formattedQueues);\n            \n            // Lọc ra các trạng thái khác nhau\n            const waiting = formattedQueues.filter(q => q.status === 'waiting');\n            const inProgress = formattedQueues.filter(q => q.status === 'in_progress');\n            \n            setWaitingPatients(waiting);\n            setInProgressPatients(inProgress);\n            \n            // Không lấy danh sách bác sĩ ở đây nữa, sẽ lấy khi mở modal\n          } catch (apiError: any) {\n            console.error(\"API error:\", apiError);\n            setError(`Lỗi khi lấy dữ liệu từ API: ${apiError.message}`);\n            \n            // Fallback to mock data\n            console.log(\"Falling back to mock data...\");\n            await fallbackToMockData();\n          }\n        } else {\n          // Không có token, sử dụng mock data\n          console.log(\"No token available, using mock data...\");\n          await fallbackToMockData();\n        }\n      } catch (error: any) {\n        console.error(\"Error loading data:\", error);\n        setError(`Lỗi: ${error.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    const fallbackToMockData = async () => {\n      try {\n        // Đảm bảo mock data được khởi tạo\n        await initializeData();\n        \n        // Lấy toàn bộ queue cùng với thông tin bệnh nhân từ mock data\n        const allQueues = await getAllQueuesWithPatientInfo();\n        const formattedMockQueues = formatMockQueueData(allQueues);\n        \n        setQueues(formattedMockQueues);\n        \n        // Lọc ra các trạng thái khác nhau\n        const waiting = formattedMockQueues.filter(q => q.status === 'waiting');\n        const inProgress = formattedMockQueues.filter(q => q.status === 'in_progress');\n        \n        setWaitingPatients(waiting);\n        setInProgressPatients(inProgress);\n        \n        // Không lấy danh sách bác sĩ ở đây nữa, sẽ lấy khi mở modal\n      } catch (mockError) {\n        console.error(\"Error loading mock data:\", mockError);\n        setError(`Không thể tải dữ liệu: ${mockError}`);\n      }\n    };\n    \n    loadData();\n  }, [token]);\n  \n  // Tính thời gian chờ dựa trên createdAt (giả lập)\n  const calculateWaitingTime = (createdAt: string): string => {\n    const createdDate = new Date(createdAt);\n    const currentDate = new Date();\n    const diffMs = currentDate.getTime() - createdDate.getTime();\n    const diffMins = Math.round(diffMs / 60000);\n    \n    if (diffMins < 60) {\n      return `${diffMins} phút`;\n    } else {\n      const hours = Math.floor(diffMins / 60);\n      const mins = diffMins % 60;\n      return `${hours} giờ ${mins} phút`;\n    }\n  };\n  \n  // Hàm xử lý khi click vào nút \"Chuyển vào khám\"\n  const handleMoveToExamination = async (queueId: string) => {\n    // Mở modal để chọn bác sĩ\n    setSelectedQueue(queueId);\n    setShowDoctorModal(true);\n    \n    // Lấy danh sách bác sĩ vào lúc này, không phải lúc load trang\n    setLoading(true);\n    setError(null);\n    \n    try {\n      let doctorsList: User[] = [];\n      \n      if (token) {\n        // Thử sử dụng endpoint mới dành riêng cho việc lấy danh sách bác sĩ\n        try {\n          console.log(\"Fetching doctors from API...\");\n          doctorsList = await apiService.getDoctors(token);\n          console.log(`Retrieved ${doctorsList.length} doctors from API`);\n        } catch (apiError: any) {\n          console.error(\"API error when fetching doctors:\", apiError);\n          \n          // Fallback to mock data\n          console.log(\"Falling back to mock data for doctors...\");\n          doctorsList = await getUsersByRole('DOCTOR');\n        }\n      } else {\n        // Sử dụng mock data nếu không có token\n        console.log(\"Using mock data for doctors list...\");\n        doctorsList = await getUsersByRole('DOCTOR');\n      }\n      \n      // Cập nhật state với danh sách bác sĩ\n      setDoctors(doctorsList);\n    } catch (error: any) {\n      console.error(\"Error loading doctors:\", error);\n      setError(`Lỗi khi tải danh sách bác sĩ: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Hàm xử lý khi đã chọn bác sĩ và xác nhận chuyển bệnh nhân vào khám\n  const handleConfirmMoveToExamination = async (doctorId: string) => {\n    setLoading(true);\n    try {\n      if (token) {\n        // Sử dụng API nếu có token\n        try {\n          console.log(`Updating queue ${selectedQueue} via API...`);\n          const updatedQueue = await apiService.updateQueueStatus(\n            selectedQueue, \n            token,\n            'in_progress',\n            doctorId\n          );\n          console.log(\"API update successful:\", updatedQueue);\n          \n          // Cập nhật UI với dữ liệu mới\n          await refreshData();\n          \n        } catch (apiError) {\n          console.error(\"API error when updating queue:\", apiError);\n          // Fallback to mock function\n          await fallbackUpdateQueue(selectedQueue, 'in_progress', doctorId);\n        }\n      } else {\n        // Sử dụng mock function nếu không có token\n        await fallbackUpdateQueue(selectedQueue, 'in_progress', doctorId);\n      }\n      \n      // Đóng modal\n      setShowDoctorModal(false);\n      setSelectedQueue('');\n    } catch (error) {\n      console.error(\"Error moving patient to examination:\", error);\n      setError(`Lỗi khi chuyển bệnh nhân vào khám: ${error}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Hàm xử lý khi hoàn thành khám bệnh\n  const handleCompleteExamination = async (queueId: string) => {\n    setLoading(true);\n    try {\n      if (token) {\n        // Sử dụng API nếu có token\n        try {\n          // Bước 1: Gửi thông tin bệnh nhân đến bác sĩ\n          console.log(`Sending queue ${queueId} information to doctor...`);\n          try {\n            const sendResult = await apiService.sendQueueToDoctor(queueId, token);\n            console.log(\"Queue sent to doctor successfully:\", sendResult);\n            setError(`Đã gửi thông tin bệnh nhân đến bác sĩ thành công!`);\n          } catch (sendError: any) {\n            console.error(\"Error sending queue to doctor:\", sendError);\n            setError(`Lỗi khi gửi thông tin đến bác sĩ: ${sendError.message}. Nhưng vẫn hoàn thành thay đổi trạng thái.`);\n          }\n          \n          // Bước 2: Cập nhật trạng thái queue\n          console.log(`Updating queue ${queueId} status to completed...`);\n          const updatedQueue = await apiService.updateQueueStatus(\n            queueId, \n            token,\n            'completed'\n          );\n          console.log(\"API update successful:\", updatedQueue);\n          \n          // Cập nhật UI với dữ liệu mới\n          await refreshData();\n          \n        } catch (apiError) {\n          console.error(\"API error when completing examination:\", apiError);\n          // Fallback to mock function\n          await fallbackUpdateQueue(queueId, 'completed');\n        }\n      } else {\n        // Sử dụng mock function nếu không có token\n        await fallbackUpdateQueue(queueId, 'completed');\n      }\n    } catch (error: any) {\n      console.error(\"Error completing examination:\", error);\n      setError(`Lỗi khi hoàn thành khám bệnh: ${error.message}`);\n    } finally {\n      setLoading(false);\n      \n      // Tự động ẩn thông báo lỗi sau 5 giây\n      setTimeout(() => {\n        setError(null);\n      }, 5000);\n    }\n  };\n  \n  // Fallback function để sử dụng mock data khi API lỗi\n  const fallbackUpdateQueue = async (queueId: string, status: 'waiting' | 'in_progress' | 'completed' | 'canceled', doctorId?: string) => {\n    try {\n      console.log(`Using mock data to update queue ${queueId} to ${status}`);\n      \n      // Nếu đang chuyển sang trạng thái completed, gửi thông tin đến bác sĩ trước\n      if (status === 'completed') {\n        try {\n          // Trong trường hợp thực, thông tin này đã được gửi qua API\n          // Đối với mock data, ta giả lập việc gửi thông tin\n          console.log(`Sending queue ${queueId} information to doctor (mock)...`);\n          await sendQueueToDoctor(queueId);\n          console.log('Mock: Information successfully sent to doctor');\n        } catch (sendError) {\n          console.error(\"Error sending information to doctor (mock):\", sendError);\n        }\n      }\n      \n      const updatedQueue = await updateQueueStatus(queueId, status, doctorId);\n      \n      if (updatedQueue) {\n        // Cập nhật lại state để re-render UI\n        const allQueues = await getAllQueuesWithPatientInfo();\n        const formattedMockQueues = formatMockQueueData(allQueues);\n        \n        setQueues(formattedMockQueues);\n        \n        // Lọc lại các danh sách\n        const waiting = formattedMockQueues.filter(q => q.status === 'waiting');\n        const inProgress = formattedMockQueues.filter(q => q.status === 'in_progress');\n        \n        setWaitingPatients(waiting);\n        setInProgressPatients(inProgress);\n      }\n    } catch (mockError: any) {\n      console.error(\"Error using mock data:\", mockError);\n      setError(`Không thể cập nhật trạng thái: ${mockError.message || mockError}`);\n    }\n  };\n  \n  // Lấy thông tin bác sĩ được chỉ định cho bệnh nhân\n  const getAssignedDoctor = (doctorId?: any) => {\n    if (!doctorId) return null;\n    \n    // Nếu doctorId là object (từ API)\n    if (typeof doctorId === 'object' && doctorId !== null) {\n      return doctorId;\n    }\n    \n    // Nếu doctorId là string (từ mock data)\n    return doctors.find(doctor => doctor._id === doctorId) || null;\n  };\n  \n  // Hàm để refresh dữ liệu\n  const refreshData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      if (token) {\n        console.log(\"Refreshing data from API...\");\n        const apiQueues = await apiService.getQueuesWithPatients(token);\n        const formattedQueues = formatApiQueueResponse(apiQueues);\n        \n        setQueues(formattedQueues);\n        setWaitingPatients(formattedQueues.filter(q => q.status === 'waiting'));\n        setInProgressPatients(formattedQueues.filter(q => q.status === 'in_progress'));\n      } else {\n        console.log(\"Refreshing data from mock data...\");\n        await initializeData();\n        const allQueues = await getAllQueuesWithPatientInfo();\n        const formattedMockQueues = formatMockQueueData(allQueues);\n        \n        setQueues(formattedMockQueues);\n        setWaitingPatients(formattedMockQueues.filter(q => q.status === 'waiting'));\n        setInProgressPatients(formattedMockQueues.filter(q => q.status === 'in_progress'));\n      }\n      \n      // Không cần refresh danh sách bác sĩ, vì danh sách này sẽ được load khi cần thiết\n    } catch (error: any) {\n      console.error(\"Error refreshing data:\", error);\n      setError(`Lỗi khi làm mới dữ liệu: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Trích xuất thông tin bệnh nhân từ mỗi queue, xử lý cả từ API và mock data\n  const getPatientInfo = (queue: QueueWithPatientInfo) => {\n    // Ưu tiên patientInfo (đã được chuẩn hoá)\n    if (queue.patientInfo) {\n      return queue.patientInfo;\n    }\n    \n    // Nếu patient là object (từ API)\n    if (queue.patient && typeof queue.patient === 'object') {\n      return {\n        _id: queue.patient._id,\n        userId: queue.patient.userId,\n        fullName: queue.patient.fullName,\n        phone: queue.patient.phone,\n        role: queue.patient.role,\n        email: queue.patient.email\n      };\n    }\n    \n    // Trường hợp khác (có thể là null hoặc không có thông tin)\n    return null;\n  };\n\n  return (\n    <div className=\"w-full px-4 sm:px-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <button \n          onClick={onBack}\n          className=\"px-3 py-1 bg-gray-200 hover:bg-gray-300 rounded-md flex items-center text-gray-700\"\n        >\n          ← Quay lại\n        </button>\n        \n        <button \n          onClick={refreshData}\n          disabled={loading}\n          className={`px-4 py-2 rounded-md flex items-center ${loading ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700'} text-white`}\n        >\n          <RefreshCcw size={16} className={`mr-2 ${loading ? 'animate-spin' : ''}`} />\n          {loading ? 'Đang tải...' : 'Làm mới dữ liệu'}\n        </button>\n      </div>\n      {/* Header section */}\n      <div className=\"mb-8 border-b border-gray-200 pb-5\">\n        <h1 className=\"text-3xl font-bold text-black tracking-tight\">Quản lý phòng chờ</h1>\n        <p className=\"text-black mt-2\">\n          Quản lý danh sách bệnh nhân đang chờ khám và theo dõi trạng thái\n        </p>\n        {error && (\n          <div className=\"mt-4 p-3 bg-red-50 border border-red-300 text-red-700 rounded-lg\">\n            {error}\n          </div>\n        )}\n      </div>\n      \n      {/* Main content grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        {/* Waiting patients card */}\n        <div className=\"border border-gray-300 rounded-xl shadow-sm overflow-hidden bg-white\">\n          <div className=\"p-4 border-b border-gray-300 bg-gray-50 flex justify-between items-center\">\n            <div className=\"flex items-center\">\n              <ClockIcon size={20} className=\"text-black mr-2\" />\n              <h2 className=\"text-lg font-semibold text-black\">\n                Bệnh nhân đang chờ\n              </h2>\n            </div>\n            <span className=\"bg-gray-800 text-white text-sm px-3.5 py-1 rounded-full font-medium flex items-center\">\n              <UserIcon size={14} className=\"mr-1.5\" />\n              {waitingPatients.length} bệnh nhân\n            </span>\n          </div>\n          \n          {loading ? (\n            <div className=\"p-8 text-center\">\n              <div className=\"animate-spin rounded-full h-10 w-10 border-b-2 border-gray-900 mx-auto mb-3\"></div>\n              <p className=\"text-black\">Đang tải dữ liệu...</p>\n            </div>\n          ) : waitingPatients.length > 0 ? (\n            <div className=\"divide-y divide-gray-200\">\n              {waitingPatients.map((queue, index) => {\n                // Lấy thông tin bệnh nhân từ đúng nguồn dữ liệu\n                const patientInfo = getPatientInfo(queue);\n                \n                return (\n                  <div key={queue._id} className={`p-5 hover:bg-gray-50 transition-colors ${index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}`}>\n                    <div className=\"flex justify-between items-start mb-3\">\n                      <div>\n                        <h3 className=\"font-medium text-black text-base\">\n                          {patientInfo?.fullName || 'Không có tên'}\n                        </h3>\n                        <p className=\"text-sm text-black mt-1\">\n                          ID: {patientInfo?.userId || 'N/A'}\n                        </p>\n                        <p className=\"text-sm text-black mt-1\">\n                          SĐT: {patientInfo?.phone || 'N/A'}\n                        </p>\n                      </div>\n                      <div className=\"bg-gray-200 border border-gray-300 text-black px-3 py-1 rounded-full text-sm font-medium\">\n                        Chờ\n                      </div>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm text-black flex items-center\">\n                        <ClockIcon size={16} className=\"mr-1.5 text-black\" />\n                        Thời gian chờ: <span className=\"font-medium ml-1\">{calculateWaitingTime(queue.createdAt)}</span>\n                      </span>\n                      <button \n                        onClick={() => handleMoveToExamination(queue._id)}\n                        disabled={loading}\n                        className={`flex items-center text-sm ${loading ? 'bg-green-400 cursor-not-allowed' : 'bg-green-600 hover:bg-green-700'} text-white px-3.5 py-1.5 rounded-md transition-colors shadow-sm`}\n                      >\n                        Chuyển vào khám\n                        <MoveRightIcon size={16} className=\"ml-1.5\" />\n                      </button>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"p-8 text-center\">\n              <ClockIcon size={40} className=\"mx-auto text-gray-400 mb-3\" />\n              <p className=\"text-black font-medium\">Không có bệnh nhân nào đang chờ</p>\n              <p className=\"text-sm text-black mt-1\">Hãy thêm bệnh nhân vào danh sách chờ từ màn hình Quản lý bệnh nhân</p>\n            </div>\n          )}\n        </div>\n        \n        {/* In examination patients card */}\n        <div className=\"border border-gray-300 rounded-xl shadow-sm overflow-hidden bg-white\">\n          <div className=\"p-4 border-b border-gray-300 bg-gray-50 flex justify-between items-center\">\n            <div className=\"flex items-center\">\n              <CheckCircleIcon size={20} className=\"text-black mr-2\" />\n              <h2 className=\"text-lg font-semibold text-black\">Đang khám</h2>\n            </div>\n            <span className=\"bg-gray-800 text-white text-sm px-3.5 py-1 rounded-full font-medium flex items-center\">\n              <UserIcon size={14} className=\"mr-1.5\" />\n              {inProgressPatients.length} bệnh nhân\n            </span>\n          </div>\n          \n          {loading ? (\n            <div className=\"p-8 text-center\">\n              <div className=\"animate-spin rounded-full h-10 w-10 border-b-2 border-gray-900 mx-auto mb-3\"></div>\n              <p className=\"text-black\">Đang tải dữ liệu...</p>\n            </div>\n          ) : inProgressPatients.length > 0 ? (\n            <div className=\"divide-y divide-gray-200\">\n              {inProgressPatients.map((queue, index) => {\n                // Lấy thông tin bệnh nhân từ đúng nguồn dữ liệu\n                const patientInfo = getPatientInfo(queue);\n                \n                // Lấy thông tin bác sĩ được chỉ định\n                const assignedDoctor = getAssignedDoctor(queue.doctorId);\n                \n                return (\n                  <div key={queue._id} className={`p-5 hover:bg-gray-50 transition-colors ${index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}`}>\n                    <div className=\"flex justify-between items-start mb-4\">\n                      <div>\n                        <h3 className=\"font-medium text-black text-base\">\n                          {patientInfo?.fullName || 'Không có tên'}\n                        </h3>\n                        <p className=\"text-sm text-black mt-1\">\n                          ID: {patientInfo?.userId || 'N/A'}\n                        </p>\n                        <p className=\"text-sm text-black mt-1\">\n                          SĐT: {patientInfo?.phone || 'N/A'}\n                        </p>\n                      </div>\n                      <div className=\"bg-blue-100 border border-blue-200 text-blue-800 px-3 py-1 rounded-full text-sm font-medium\">\n                        Đang khám\n                      </div>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-4 mt-3 p-3 bg-gray-50 rounded-lg border border-gray-200\">\n                      <div>\n                        <p className=\"text-xs font-medium text-black uppercase tracking-wide\">Bác sĩ khám</p>\n                        <p className=\"text-sm font-medium text-black mt-1\">\n                          {assignedDoctor ? (typeof assignedDoctor === 'object' ? assignedDoctor.fullName : assignedDoctor) : 'Chưa chỉ định'}\n                        </p>\n                      </div>\n                      <div>\n                        <p className=\"text-xs font-medium text-black uppercase tracking-wide\">Phòng khám</p>\n                        <p className=\"text-sm font-medium text-black mt-1\">\n                          {assignedDoctor ? `Phòng ${typeof assignedDoctor === 'object' ? \n                              (100 + parseInt(assignedDoctor._id.slice(-2), 16) % 10) : \n                              (100 + parseInt(String(assignedDoctor).slice(-2), 16) % 10)\n                            }` : 'N/A'}\n                        </p>\n                      </div>\n                    </div>\n                    {/* Removed \"Hoàn thành khám\" button as this is now the doctor's responsibility */}\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"p-8 text-center\">\n              <CheckCircleIcon size={40} className=\"mx-auto text-gray-400 mb-3\" />\n              <p className=\"text-black font-medium\">Không có bệnh nhân nào đang khám</p>\n              <p className=\"text-sm text-black mt-1\">Chuyển bệnh nhân từ phòng chờ vào khám</p>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* Modal chọn bác sĩ */}\n      {showDoctorModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-semibold text-black\">Chọn bác sĩ</h2>\n              <button \n                onClick={() => setShowDoctorModal(false)}\n                className=\"text-gray-500 hover:text-gray-700\"\n              >\n                <X size={20} />\n              </button>\n            </div>\n            \n            <p className=\"text-black mb-4\">Vui lòng chọn bác sĩ để chuyển bệnh nhân vào khám:</p>\n            \n            {loading ? (\n              <div className=\"p-8 text-center\">\n                <div className=\"animate-spin rounded-full h-10 w-10 border-b-2 border-gray-900 mx-auto mb-3\"></div>\n                <p className=\"text-black\">Đang tải...</p>\n              </div>\n            ) : doctors.length > 0 ? (\n              <div className=\"space-y-2 max-h-60 overflow-auto\">\n                {doctors.map((doctor) => (\n                  <div \n                    key={doctor._id}\n                    onClick={() => !loading && handleConfirmMoveToExamination(doctor._id)}\n                    className={`p-3 border border-gray-300 rounded-md ${loading ? 'opacity-50 cursor-not-allowed' : 'hover:bg-blue-50 cursor-pointer'} transition-colors flex justify-between items-center`}\n                  >\n                    <div>\n                      <p className=\"font-medium text-black\">{doctor.fullName}</p>\n                      <p className=\"text-sm text-gray-600\">{doctor.email}</p>\n                    </div>\n                    <div className=\"bg-gray-100 text-black text-xs px-2 py-1 rounded\">\n                      Phòng {100 + parseInt(doctor._id.slice(-2), 16) % 10}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p className=\"text-center py-4 text-black\">Không có bác sĩ nào</p>\n            )}\n            \n            <div className=\"mt-6 flex justify-end\">\n              <button \n                onClick={() => setShowDoctorModal(false)}\n                className=\"px-4 py-2 bg-gray-200 rounded-md mr-2 text-black hover:bg-gray-300\"\n                disabled={loading}\n              >\n                Hủy\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4951, "column": 0}, "map": {"version":3,"sources":["file:///D:/%C4%90%E1%BB%93%20%C3%A1n%20A/hospitality-website-main/hospitality-website-main/my-app/src/app/receptionistPage/MedicationHistory.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Search as SearchIcon, Calendar as CalendarIcon, Pill as PillIcon } from 'lucide-react';\nimport { useAuth } from '../context/AuthContext';\nimport * as apiService from '../services/api.service';\n\n// Define interfaces for the data we're working with\ninterface MedicationDetailDisplay {\n  name: string;\n  dosage: string;\n  frequency: string; // This will be derived from the dosage\n  duration: string;  // This will be derived from the quantity\n}\n\ninterface MedicationRecordDisplay {\n  id: string;\n  name: string;\n  patientId: string;\n  date: string;\n  originalDate?: string; // Original date string for sorting\n  doctor: string;\n  diagnosis: string;\n  medications: MedicationDetailDisplay[];\n  status?: string; // Status of the prescription\n}\n\ninterface MedicationHistoryProps {\n  onBack: () => void;\n}\n\nexport function MedicationHistory({ onBack }: MedicationHistoryProps) {\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [medicationRecords, setMedicationRecords] = useState<MedicationRecordDisplay[]>([]);\n  const [allStatuses, setAllStatuses] = useState(true); // Toggle to show all statuses - default to true to show all\n  const [debugInfo, setDebugInfo] = useState<any>(null);\n  \n  // Pagination state\n  const [currentPage, setCurrentPage] = useState(1);\n  const [recordsPerPage, setRecordsPerPage] = useState(10);\n  \n  const { token } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Load medication data from API\n  useEffect(() => {\n    if (!token) return;\n    \n    const initializeData = async () => {\n      const isTokenValid = await verifyToken();\n      if (!isTokenValid) return;\n      \n      if (allStatuses) {\n        loadAllPrescriptions();\n      } else {\n        loadDispensedPrescriptions();\n      }\n    };\n    \n    initializeData();\n  }, [token, allStatuses]);\n  \n  // Function to load prescriptions with DISPENSED status\n  const loadDispensedPrescriptions = async () => {\n    if (!token) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Get prescriptions with status DISPENSED from the API\n      console.log('MedicationHistory: Fetching DISPENSED prescriptions');\n      const prescriptions = await apiService.getPrescriptions({ status: 'DISPENSED' }, token);\n      console.log(`MedicationHistory: Found ${prescriptions.length} DISPENSED prescriptions`);\n      \n      if (prescriptions.length === 0) {\n        console.log('No DISPENSED prescriptions found, checking if they exist with other statuses');\n        const allPrescriptions = await apiService.getPrescriptions({}, token);\n        console.log(`Total prescriptions: ${allPrescriptions.length}`);\n        \n        // Filter them manually to see if any have DISPENSED status\n        const dispensedPrescriptions = allPrescriptions.filter((p: any) => p.status === 'DISPENSED');\n        console.log(`Manually filtered DISPENSED prescriptions: ${dispensedPrescriptions.length}`);\n        \n        if (dispensedPrescriptions.length > 0) {\n          console.log('Found DISPENSED prescriptions when not filtering by status, using those');\n          await processPrescriptions(dispensedPrescriptions);\n        } else {\n          console.log('No DISPENSED prescriptions found even in unfiltered results');\n          setMedicationRecords([]);\n        }\n      } else {\n        await processPrescriptions(prescriptions);\n      }\n    } catch (error: any) {\n      console.error(\"Error loading dispensed medication data:\", error);\n      \n      // Handle specific error cases\n      if (error.response) {\n        if (error.response.status === 403) {\n          setError(\"Bạn không có quyền xem dữ liệu này. Vui lòng liên hệ với quản trị viên.\");\n        } else if (error.response.status === 401) {\n          setError(\"Phiên làm việc đã hết hạn. Vui lòng đăng nhập lại.\");\n        } else {\n          setError(`Lỗi từ máy chủ: ${error.response.status} - ${error.response.data?.message || error.message}`);\n        }\n      } else {\n        setError(error.message || \"Không thể tải dữ liệu lịch sử thuốc\");\n      }\n      \n      setMedicationRecords([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to load all prescriptions regardless of status\n  const loadAllPrescriptions = async () => {\n    if (!token) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      console.log('Loading all prescriptions regardless of status');\n      const prescriptions = await apiService.getPrescriptions({}, token);\n      console.log(`Found ${prescriptions.length} total prescriptions`);\n      \n      // Check if we have prescriptions to process\n      if (prescriptions.length === 0) {\n        console.log('No prescriptions found at all');\n        setMedicationRecords([]);\n      } else {\n        console.log('Processing prescription data for display');\n        await processPrescriptions(prescriptions);\n        \n        // Log the first few prescriptions to debug\n        prescriptions.slice(0, 3).forEach((prescription: any, index: number) => {\n          console.log(`Prescription ${index + 1}:`, {\n            id: prescription._id,\n            status: prescription.status,\n            patientName: prescription.patientId?.fullName || 'Unknown',\n            diagnosis: prescription.diagnosis\n          });\n        });\n      }\n    } catch (error: any) {\n      console.error(\"Error loading all medication data:\", error);\n      \n      // Handle specific error cases\n      if (error.response) {\n        if (error.response.status === 403) {\n          setError(\"Bạn không có quyền xem dữ liệu này. Vui lòng liên hệ với quản trị viên.\");\n        } else if (error.response.status === 401) {\n          setError(\"Phiên làm việc đã hết hạn. Vui lòng đăng nhập lại.\");\n        } else {\n          setError(`Lỗi từ máy chủ: ${error.response.status} - ${error.response.data?.message || error.message}`);\n        }\n      } else {\n        setError(error.message || \"Không thể tải dữ liệu lịch sử thuốc\");\n      }\n      \n      setMedicationRecords([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Common function to process prescriptions data\n  const processPrescriptions = async (prescriptions: any[]) => {\n    try {\n      console.log(`Processing ${prescriptions.length} prescriptions`);\n      \n      // Sort prescriptions by newest first - using createdAt field if available, or date\n      const sortedPrescriptions = [...prescriptions].sort((a, b) => {\n        // Use createdAt if available, otherwise fall back to date field\n        const dateA = a.createdAt ? new Date(a.createdAt) : new Date(a.date);\n        const dateB = b.createdAt ? new Date(b.createdAt) : new Date(b.date);\n        \n        // Sort in descending order (newest first)\n        return dateB.getTime() - dateA.getTime();\n      });\n      \n      console.log('Sorted prescriptions by newest first');\n      \n      // Transform prescriptions to the format we need for display\n      const records: MedicationRecordDisplay[] = [];\n      \n      for (const prescription of sortedPrescriptions) {\n        try {\n          // Verify that the prescription object is valid\n          if (!prescription || !prescription._id) {\n            console.error('Invalid prescription object:', prescription);\n            continue;\n          }\n          \n          // Get prescription details (medicines)\n          console.log(`MedicationHistory: Fetching details for prescription ${prescription._id}`);\n          \n          // Fix for TypeScript errors - ensure token is not null\n          if (!token) {\n            console.error('Token is null, cannot fetch prescription details');\n            continue;\n          }\n          \n          // Add error handling for prescription details with detailed logging\n          let prescriptionDetails = [];\n          try {\n            console.log(`Calling getPrescriptionDetails API for prescriptionId: ${prescription._id}`);\n            prescriptionDetails = await apiService.getPrescriptionDetails(prescription._id, token);\n            console.log(`Got ${prescriptionDetails.length} medication details for prescription ${prescription._id}`, prescriptionDetails);\n            \n            // Log the first detail if available for debugging\n            if (prescriptionDetails.length > 0) {\n              console.log('First prescription detail:', prescriptionDetails[0]);\n            }\n          } catch (detailsError: any) {\n            console.error(`Error fetching details for prescription ${prescription._id}:`, detailsError);\n            if (detailsError.response) {\n              console.error('Details error status:', detailsError.response.status);\n              console.error('Details error data:', detailsError.response.data);\n            }\n            // Try a direct fetch as a backup\n            try {\n              const url = `http://localhost:5000/api/prescriptiondetails?prescriptionId=${prescription._id}`;\n              console.log(`Trying direct fetch to: ${url}`);\n              const response = await fetch(url, {\n                headers: {\n                  'Authorization': `Bearer ${token}`,\n                  'Content-Type': 'application/json'\n                }\n              });\n              \n              if (!response.ok) {\n                console.error(`Direct fetch error: ${response.status}`);\n              } else {\n                prescriptionDetails = await response.json();\n                console.log(`Direct fetch success: Got ${prescriptionDetails.length} details`);\n              }\n            } catch (directError) {\n              console.error('Direct fetch also failed:', directError);\n            }\n          }\n          \n          // Transform prescription details to medication details\n          const medications: MedicationDetailDisplay[] = [];\n          \n          console.log(`Processing ${prescriptionDetails.length} medication details for prescription ${prescription._id}`);\n          \n          // For each medicine in the prescription\n          for (const detail of prescriptionDetails) {\n            try {\n              console.log('Processing prescription detail:', detail);\n              \n              // Get medicine details if medicineId is an object with _id\n              let medicineId;\n              if (detail.medicineId) {\n                medicineId = typeof detail.medicineId === 'object' ? \n                  (detail.medicineId._id || detail.medicineId.id) : detail.medicineId;\n              } else {\n                console.error('Missing medicineId in prescription detail:', detail);\n                continue;\n              }\n              \n              console.log(`Extracted medicineId: ${medicineId}`);\n              \n              // Fix for TypeScript errors - ensure token is not null\n              if (!token) {\n                console.error('Token is null, cannot fetch medicine details');\n                continue;\n              }\n              \n              let medicine = null;\n              \n              // Check if medicineId is already populated\n              if (detail.medicineId && typeof detail.medicineId === 'object') {\n                medicine = detail.medicineId;\n                console.log(`Medicine already populated: ${JSON.stringify(medicine)}`);\n                console.log(`Medicine name from populated object: ${medicine.name}`);\n              } else {\n                try {\n                  console.log(`Fetching medicine details for ID: ${medicineId}`);\n                  medicine = await apiService.getMedicineById(medicineId, token);\n                  console.log(`Successfully fetched medicine: ${medicine.name}`);\n                } catch (medicineError) {\n                  console.error(`Error fetching medicine ${medicineId}:`, medicineError);\n                }\n              }\n              \n              // Parse dosage to extract frequency and duration (with error handling)\n              let frequency = 'Không có thông tin';\n              try {\n                if (detail.dosage) {\n                  const dosageInfo = detail.dosage.split(' ');\n                  frequency = dosageInfo.length > 0 ? dosageInfo.join(' ') : 'Không có thông tin';\n                }\n              } catch (parseError) {\n                console.error('Error parsing dosage:', parseError);\n              }\n              \n              // Calculate duration based on quantity and dosage (with error handling)\n              let duration = 'Không xác định';\n              try {\n                if (detail.dosage && detail.quantity) {\n                  const dosageInfo = detail.dosage.split(' ');\n                  const firstNumberInDosage = parseInt(dosageInfo[0]);\n                  if (!isNaN(firstNumberInDosage) && firstNumberInDosage > 0) {\n                    duration = `${Math.round(detail.quantity / firstNumberInDosage)} ngày`;\n                  }\n                }\n              } catch (durationError) {\n                console.error('Error calculating duration:', durationError);\n              }\n              \n              medications.push({\n                name: medicine?.name || 'Không xác định thuốc',\n                dosage: detail.dosage || 'Không xác định liều lượng',\n                frequency: frequency,\n                duration: duration\n              });\n            } catch (medErr) {\n              console.error(`Error processing medicine details for ${detail.medicineId}:`, medErr);\n              medications.push({\n                name: 'Lỗi dữ liệu thuốc',\n                dosage: 'Không xác định',\n                frequency: 'Không xác định',\n                duration: 'Không xác định'\n              });\n            }\n          }\n          \n          // Format date for display (with error handling)\n          let formattedDate = 'Không xác định';\n          let originalDate; // Store the original date for sorting\n          try {\n            const dateObj = new Date(prescription.date);\n            originalDate = dateObj;\n            if (!isNaN(dateObj.getTime())) {\n              formattedDate = `${dateObj.getDate().toString().padStart(2, '0')}/${(dateObj.getMonth() + 1).toString().padStart(2, '0')}/${dateObj.getFullYear()}`;\n            }\n          } catch (dateError) {\n            console.error('Error formatting date:', dateError);\n          }\n          \n          // Get patient and doctor info directly from populated fields if available (with error handling)\n          let patient = { fullName: 'Không xác định', _id: 'Unknown' };\n          let doctor = { fullName: 'Không xác định' };\n          \n          try {\n            if (prescription.patientId && typeof prescription.patientId === 'object') {\n              patient = prescription.patientId;\n            }\n          } catch (patientError) {\n            console.error('Error processing patient info:', patientError);\n          }\n          \n          try {\n            if (prescription.doctorId && typeof prescription.doctorId === 'object') {\n              doctor = prescription.doctorId;\n            }\n          } catch (doctorError) {\n            console.error('Error processing doctor info:', doctorError);\n          }\n          \n          // Create the record with proper error handling for all fields\n          const record: MedicationRecordDisplay = {\n            id: prescription._id || 'unknown',\n            name: patient.fullName || 'Không xác định',\n            patientId: patient._id || 'Unknown',\n            date: formattedDate,\n            originalDate: prescription.createdAt || prescription.date, // Store original date for sorting\n            doctor: doctor.fullName || 'Không xác định',\n            diagnosis: prescription.diagnosis || 'Không có chẩn đoán',\n            medications: medications,\n            status: prescription.status || 'Unknown' // Add status to the record\n          };\n          \n          records.push(record);\n          console.log(`Added record for patient ${record.name} with ${medications.length} medications`);\n          \n        } catch (prescErr) {\n          console.error(`Error processing prescription ${prescription?._id || 'unknown'}:`, prescErr);\n        }\n      }\n      \n      console.log(`Finished processing ${records.length} records out of ${prescriptions.length} prescriptions`);\n      \n      // Reset to first page when data changes\n      setCurrentPage(1);\n      setMedicationRecords(records);\n      setError(null);\n    } catch (error: any) {\n      console.error(\"Error processing prescriptions:\", error);\n      setError(\"Lỗi xử lý dữ liệu đơn thuốc: \" + (error.message || error));\n    }\n  };\n  \n  // Add debug function to show available data\n  const debugMedicationData = async () => {\n    if (!token) {\n      setError(\"Bạn chưa đăng nhập. Vui lòng đăng nhập để xem dữ liệu.\");\n      return;\n    }\n    \n    try {\n      console.log('Debug: Checking token validity');\n      const tokenStatus = await apiService.validateToken(token);\n      \n      if (!tokenStatus.valid) {\n        console.error('Debug: Token is invalid:', tokenStatus.reason);\n        setError(\"Phiên làm việc đã hết hạn. Vui lòng đăng nhập lại.\");\n        return;\n      }\n      \n      console.log('Debug: Token is valid, user role:', tokenStatus.data?.role);\n      console.log('Debug: Token data object:', tokenStatus.data);\n      \n      // Show the user's information - this is helpful for debugging permission issues\n      console.log('Debug: User details:', {\n        id: tokenStatus.data?._id,\n        username: tokenStatus.data?.username,\n        role: tokenStatus.data?.role,\n      });\n      \n      // Manually test API access with a direct fetch - bypassing any frontend caching or filtering\n      console.log('Debug: Making direct fetch to prescriptions API with DISPENSED filter');\n      try {\n        const url = 'http://localhost:5000/api/prescriptions?status=DISPENSED';\n        const response = await fetch(url, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        console.log('Debug: Direct fetch status:', response.status);\n        if (!response.ok) {\n          console.error('Debug: Direct fetch error:', await response.text());\n        } else {\n          const data = await response.json();\n          console.log(`Debug: Direct fetch found ${data.length} DISPENSED prescriptions`);\n          if (data.length > 0) {\n            console.log('Debug: First direct fetch result:', data[0]);\n          }\n        }\n      } catch (directFetchError) {\n        console.error('Debug: Direct fetch error:', directFetchError);\n      }\n      \n      console.log('Debug: Fetching all prescriptions to see available statuses');\n      \n      const allPrescriptions = await apiService.getPrescriptions({}, token);\n      \n      console.log('Debug: First 3 prescriptions raw data:', allPrescriptions.slice(0, 3));\n      \n      // Group by status to see what we have\n      const statusCounts: Record<string, number> = {};\n      allPrescriptions.forEach((prescription: any) => {\n        const status = prescription.status || 'unknown';\n        statusCounts[status] = (statusCounts[status] || 0) + 1;\n      });\n      \n      console.log('Debug: Available prescription statuses:', statusCounts);\n      setDebugInfo({\n        statusCounts,\n        totalPrescriptions: allPrescriptions.length,\n        firstPrescription: allPrescriptions.length > 0 ? allPrescriptions[0] : null,\n        userRole: tokenStatus.data?.role,\n        userId: tokenStatus.data?._id,\n      });\n      \n      // Check if we have any 'DISPENSED' prescriptions\n      if (statusCounts['DISPENSED'] && statusCounts['DISPENSED'] > 0) {\n        console.log('Debug: We have DISPENSED prescriptions, should be showing them');\n        \n        // Let's check those DISPENSED prescriptions\n        const dispensedPrescriptions = allPrescriptions.filter((p: any) => p.status === 'DISPENSED');\n        console.log('Debug: First DISPENSED prescription:', dispensedPrescriptions[0]);\n        \n        // Check why it's not showing up in the main view\n        console.log('Debug: Testing specific API call for DISPENSED prescriptions');\n        const specificDispensedPrescriptions = await apiService.getPrescriptions({ status: 'DISPENSED' }, token);\n        console.log(`Debug: API call found ${specificDispensedPrescriptions.length} DISPENSED prescriptions`);\n      } else {\n        console.log('Debug: No DISPENSED prescriptions found, this is why no data appears');\n        \n        // Let's try to manually search for a few other statuses\n        const tryOtherStatuses = async () => {\n          try {\n            console.log('Debug: Trying with status=PENDING_DISPENSE');\n            const pendingPrescriptions = await apiService.getPrescriptions({ status: 'PENDING_DISPENSE' }, token);\n            console.log(`Debug: Found ${pendingPrescriptions.length} PENDING_DISPENSE prescriptions`);\n            \n            if (pendingPrescriptions.length > 0) {\n              console.log('Debug: Example PENDING_DISPENSE prescription:', pendingPrescriptions[0]);\n            }\n            \n            // Check the specific prescription you mentioned by ID\n            const specificId = '68614f3d994cbb5f5a751225';\n            console.log(`Debug: Checking for specific prescription with ID ${specificId}`);\n            try {\n              const specificPrescription = await apiService.getPrescriptionById(specificId, token);\n              console.log('Debug: Found specific prescription:', specificPrescription);\n              console.log('Debug: Status of specific prescription:', specificPrescription?.status);\n            } catch (err) {\n              console.error(`Debug: Error fetching specific prescription ${specificId}:`, err);\n            }\n          } catch (err) {\n            console.error('Debug: Error fetching PENDING_DISPENSE prescriptions', err);\n          }\n        };\n        \n        tryOtherStatuses();\n      }\n      \n    } catch (error) {\n      console.error('Debug: Error fetching all prescriptions:', error);\n    }\n  };\n  \n  // Call debug function when component loads\n  useEffect(() => {\n    if (token) {\n      // Instead of calling debugMedicationData directly, try to load the data properly first\n      const initializeData = async () => {\n        try {\n          console.log('Component mounted, verifying token and loading data');\n          const isTokenValid = await verifyToken();\n          \n          if (isTokenValid) {\n            // Try to load prescriptions\n            if (allStatuses) {\n              await loadAllPrescriptions();\n            } else {\n              await loadDispensedPrescriptions();\n            }\n            \n            // If no medication records were loaded, try the debug function\n            if (medicationRecords.length === 0) {\n              console.log('No medication records loaded, running debug function');\n              await debugMedicationData();\n            }\n          }\n        } catch (err) {\n          console.error('Error during initialization:', err);\n        }\n      };\n      \n      initializeData();\n    }\n  }, [token]);\n  \n  // Function to verify token is valid\n  const verifyToken = async () => {\n    if (!token) {\n      setError(\"Bạn chưa đăng nhập hoặc phiên làm việc đã hết hạn\");\n      return false;\n    }\n    \n    try {\n      // Verify token is valid using validateToken function\n      console.log('Verifying token validity...');\n      const tokenStatus = await apiService.validateToken(token);\n      \n      if (!tokenStatus.valid) {\n        console.error('Token is invalid:', tokenStatus.reason);\n        setError(\"Phiên làm việc đã hết hạn. Vui lòng đăng nhập lại.\");\n        return false;\n      }\n      \n      console.log('Token is valid, checking permissions...');\n      \n      // Check if user has specific role with permissions\n      if (tokenStatus.data && tokenStatus.data.role) {\n        console.log('User role:', tokenStatus.data.role);\n        \n        // Check specific role permissions for viewing prescriptions\n        if (!['ADMIN', 'RECEPTIONIST', 'PHARMACIST', 'DOCTOR'].includes(tokenStatus.data.role)) {\n          console.error('User role does not have permission:', tokenStatus.data.role);\n          setError(\"Bạn không có quyền xem lịch sử thuốc\");\n          return false;\n        }\n      }\n      \n      return true;\n    } catch (error) {\n      console.error('Error verifying token:', error);\n      setError(\"Không thể xác thực phiên làm việc. Vui lòng đăng nhập lại.\");\n      return false;\n    }\n  };\n  \n  // Filter medications based on search term and date range\n  const filteredMedications = medicationRecords.filter(record => {\n    // Filter by search term\n    const matchesSearch = \n      record.name.toLowerCase().includes(searchTerm.toLowerCase()) || \n      (record.patientId && record.patientId.toLowerCase().includes(searchTerm.toLowerCase()));\n    \n    // Filter by date range if applicable\n    let matchesDateRange = true;\n    if (startDate && endDate) {\n      let recordDate;\n      try {\n        // Try to parse the date from the formatted string (DD/MM/YYYY format)\n        recordDate = new Date(record.date.split('/').reverse().join('-'));\n      } catch {\n        // If that fails, use the original date field if available\n        recordDate = record.originalDate ? new Date(record.originalDate) : new Date();\n      }\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      // Add one day to end date to include the end date in results\n      end.setDate(end.getDate() + 1);\n      matchesDateRange = recordDate >= start && recordDate <= end;\n    }\n    \n    return matchesSearch && matchesDateRange;\n  });\n  \n  // Function to show a prescription from the debug data\n  const showDebugPrescription = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Create a set of mock prescriptions to demonstrate pagination\n      const mockPrescriptions = [];\n      const baseDate = new Date(\"2024-06-01T10:00:00.000Z\");\n      \n      // Create 15 mock prescriptions with different dates to show pagination\n      for (let i = 0; i < 15; i++) {\n        const mockDate = new Date(baseDate);\n        mockDate.setDate(baseDate.getDate() - i); // Each record is a day older\n        \n        mockPrescriptions.push({\n          _id: `debug-prescription-${i+1}`,\n          customPrescriptionId: `pr${i+1}`,\n          patientId: {\n            _id: `patient-${i+1}`,\n            username: \"nguyen.an\",\n            email: \"an.nguyen@mediclinic.com\",\n            fullName: `Bệnh nhân mẫu ${i+1}`,\n            phone: \"0901234567\"\n          },\n          doctorId: {\n            _id: \"doctor-1\",\n            username: \"tran.hoa\",\n            email: \"hoa.tran@mediclinic.com\",\n            fullName: \"Trần Thị Hoa\",\n            phone: \"0912345678\"\n          },\n          diagnosis: i % 3 === 0 ? \"Cảm cúm\" : (i % 3 === 1 ? \"Đau họng\" : \"Đau đầu\"),\n          date: mockDate.toISOString(),\n          status: \"DISPENSED\",\n          createdAt: mockDate.toISOString(),\n          updatedAt: mockDate.toISOString()\n        });\n      }\n      \n      // Process the mock prescriptions to create records\n      console.log('Using mock prescription data for debugging pagination');\n      \n      const records: MedicationRecordDisplay[] = mockPrescriptions.map((mockPrescription, index) => {\n        // Generate 1-3 mock medications for each prescription\n        const medicationCount = (index % 3) + 1;\n        const mockMedications: MedicationDetailDisplay[] = [];\n        \n        for (let j = 0; j < medicationCount; j++) {\n          const medicationTypes = [\n            {\n              name: 'Paracetamol',\n              dosage: '2 viên x 3 lần/ngày',\n              frequency: '3 lần/ngày',\n              duration: '5 ngày'\n            },\n            {\n              name: 'Vitamin C',\n              dosage: '1 viên x 2 lần/ngày',\n              frequency: '2 lần/ngày',\n              duration: '7 ngày'\n            },\n            {\n              name: 'Amoxicillin',\n              dosage: '1 viên x 3 lần/ngày',\n              frequency: '3 lần/ngày',\n              duration: '5 ngày'\n            }\n          ];\n          \n          mockMedications.push(medicationTypes[j % 3]);\n        }\n        \n        const formattedDate = new Date(mockPrescription.date).toLocaleDateString('vi-VN');\n        \n        return {\n          id: mockPrescription._id,\n          name: mockPrescription.patientId.fullName,\n          patientId: mockPrescription.patientId._id,\n          date: formattedDate,\n          originalDate: mockPrescription.createdAt,\n          doctor: mockPrescription.doctorId.fullName,\n          diagnosis: mockPrescription.diagnosis,\n          medications: mockMedications,\n          status: mockPrescription.status\n        };\n      });\n      \n      // Sort the records by newest first\n      records.sort((a, b) => {\n        const dateA = new Date(a.originalDate || a.date);\n        const dateB = new Date(b.originalDate || b.date);\n        return dateB.getTime() - dateA.getTime();\n      });\n      \n      // Set the medication records directly\n      setMedicationRecords(records);\n      console.log(`Set ${records.length} mock medication records for pagination testing`);\n    } catch (err) {\n      console.error('Error creating mock records:', err);\n      setError('Lỗi khi tạo dữ liệu mẫu');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Pagination logic\n  const indexOfLastRecord = currentPage * recordsPerPage;\n  const indexOfFirstRecord = indexOfLastRecord - recordsPerPage;\n  const currentRecords = filteredMedications.slice(indexOfFirstRecord, indexOfLastRecord);\n  const totalPages = Math.ceil(filteredMedications.length / recordsPerPage);\n  \n  return (\n    <div className=\"max-w-7xl mx-auto\">\n      <div className=\"flex items-center mb-4\">\n        <button \n          onClick={onBack}\n          className=\"px-3 py-1 bg-gray-200 hover:bg-gray-300 rounded-md flex items-center text-gray-700\"\n        >\n          ← Quay lại\n        </button>\n      </div>\n      {/* Header section */}\n      <div className=\"mb-8 border-b border-gray-200 pb-5 flex justify-between items-center flex-wrap gap-3\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 tracking-tight\">Lịch sử thuốc</h1>\n          <p className=\"text-gray-600 mt-2 flex items-center\">\n            Xem lịch sử thuốc đã kê cho bệnh nhân\n            <span className=\"ml-2 inline-flex items-center text-sm bg-blue-100 text-blue-800 px-2 py-0.5 rounded\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"w-4 h-4 mr-1\">\n                <path fillRule=\"evenodd\" d=\"M10 17a.75.75 0 01-.75-.75V5.612L5.29 9.77a.75.75 0 01-1.08-1.04l5.25-5.5a.75.75 0 011.08 0l5.25 5.5a.75.75 0 11-1.08 1.04l-3.96-4.158V16.25A.75.75 0 0110 17z\" clipRule=\"evenodd\" />\n              </svg>\n              Mới nhất lên đầu\n            </span>\n          </p>\n        </div>\n        <div className=\"flex gap-3 items-center flex-wrap\">\n          <span className=\"text-sm text-gray-600\">\n            {filteredMedications.length} kết quả ({recordsPerPage} mỗi trang)\n          </span>\n          <button\n            onClick={() => setAllStatuses(!allStatuses)}\n            className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n              allStatuses \n                ? 'bg-blue-600 text-white hover:bg-blue-700' \n                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n            }`}\n          >\n            {allStatuses ? 'Chỉ hiển thị đã phát thuốc' : 'Hiển thị tất cả đơn thuốc'}\n          </button>\n        </div>\n      </div>\n      \n      {/* Main content container */}\n      <div className=\"border border-gray-300 rounded-xl shadow-sm overflow-hidden bg-white\">\n        {/* Search and date pickers */}\n        <div className=\"p-6 border-b border-gray-300 bg-white\">\n          <div className=\"flex flex-col md:flex-row md:items-end md:justify-between gap-4\">\n            <div className=\"relative flex-1\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <SearchIcon size={18} className=\"text-black\" />\n              </div>\n              <input \n                type=\"text\" \n                placeholder=\"Tìm theo TÊN hoặc ID...\" \n                className=\"pl-10 pr-4 py-3 border border-gray-300 rounded-lg w-full focus:outline-none focus:ring-2 focus:ring-black focus:border-black shadow-sm transition-all text-black placeholder-gray-500\" \n                value={searchTerm} \n                onChange={e => setSearchTerm(e.target.value)} \n              />\n            </div>\n            \n            <div className=\"flex flex-col md:flex-row gap-3\">\n              <div className=\"flex flex-col\">\n                <label htmlFor=\"start-date\" className=\"block text-sm font-medium text-black mb-1 pl-1\">Từ ngày</label>\n                <div className=\"relative\">\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <CalendarIcon size={16} className=\"text-black\" />\n                  </div>\n                  <input\n                    id=\"start-date\"\n                    type=\"date\"\n                    className=\"pl-10 pr-4 py-2.5 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-black focus:border-black shadow-sm transition-all text-black\"\n                    value={startDate}\n                    onChange={e => setStartDate(e.target.value)}\n                  />\n                </div>\n              </div>\n              \n              <div className=\"flex flex-col\">\n                <label htmlFor=\"end-date\" className=\"block text-sm font-medium text-black mb-1 pl-1\">Đến ngày</label>\n                <div className=\"relative\">\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <CalendarIcon size={16} className=\"text-black\" />\n                  </div>\n                  <input\n                    id=\"end-date\"\n                    type=\"date\"\n                    className=\"pl-10 pr-4 py-2.5 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-black focus:border-black shadow-sm transition-all text-black\"\n                    value={endDate}\n                    onChange={e => setEndDate(e.target.value)}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Records content */}\n        <div className=\"p-6\">\n          {loading ? (\n            <div className=\"text-center py-16 border border-dashed border-gray-300 rounded-lg\">\n              <div className=\"animate-spin rounded-full h-10 w-10 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n              <h3 className=\"text-lg font-medium text-gray-700\">\n                Đang tải dữ liệu...\n              </h3>\n              <p className=\"text-gray-500 mt-2\">\n                Vui lòng đợi trong khi chúng tôi tải dữ liệu từ máy chủ\n              </p>\n            </div>\n          ) : error ? (\n            <div className=\"text-center py-16 border border-dashed border-gray-300 rounded-lg\">\n              <div className=\"mx-auto flex items-center justify-center w-12 h-12 rounded-full bg-red-100 mb-4\">\n                <PillIcon size={24} className=\"text-red-600\" />\n              </div>\n              <h3 className=\"text-lg font-medium text-gray-700\">\n                Không thể tải dữ liệu\n              </h3>\n              <p className=\"text-gray-500 mt-2 max-w-md mx-auto\">\n                {error}\n              </p>                \n              <div className=\"flex flex-col sm:flex-row gap-3 justify-center mt-4 flex-wrap\">\n                <button \n                  onClick={() => window.location.reload()}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n                >\n                  Thử lại\n                </button>\n                \n                <button \n                  onClick={verifyToken}\n                  className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors\"\n                >\n                  Kiểm tra quyền truy cập\n                </button>\n                \n                <button \n                  onClick={showDebugPrescription}\n                  className=\"px-4 py-2 bg-orange-600 text-white rounded-md hover:bg-orange-700 transition-colors\"\n                >\n                  Dùng dữ liệu mẫu\n                </button>\n              </div>\n              \n              <div className=\"mt-6 text-sm text-gray-500\">\n                <p><b>Gợi ý khắc phục:</b></p>\n                <ul className=\"list-disc pl-8 mt-2 text-left max-w-lg mx-auto\">\n                  <li>Hãy chắc chắn bạn đã đăng nhập với tài khoản có quyền RECEPTIONIST</li>\n                  <li>Đảm bảo backend đã được cấu hình cho phép RECEPTIONIST xem đơn thuốc</li>\n                  <li>Kiểm tra kết nối mạng đến server API</li>\n                  <li>Nếu vẫn gặp vấn đề, hãy liên hệ quản trị viên</li>\n                </ul>\n              </div>\n            </div>\n          ) : currentRecords.length > 0 ? (\n            <div className=\"space-y-6\">\n              {currentRecords.map(record => (\n                <div key={record.id} className=\"border border-gray-300 rounded-lg overflow-hidden shadow-sm transition-all hover:shadow-md\">\n                  <div className=\"border-b border-gray-300 bg-gradient-to-r from-gray-50 to-white p-5 flex flex-col md:flex-row md:justify-between md:items-center gap-3\">\n                    <div>\n                      <h3 className=\"font-semibold text-lg text-gray-900\">\n                        {record.name}\n                      </h3>\n                      <p className=\"text-sm text-gray-700 mt-0.5\">\n                        ID: {record.patientId}\n                      </p>\n                    </div>\n                    <div className=\"flex flex-wrap gap-6\">\n                      <div>\n                        <p className=\"text-xs text-gray-600 uppercase tracking-wide font-medium\">Ngày khám</p>\n                        <p className=\"text-sm font-medium text-gray-800 mt-1\">{record.date}</p>\n                      </div>\n                      <div>\n                        <p className=\"text-xs text-gray-600 uppercase tracking-wide font-medium\">Bác sĩ</p>\n                        <p className=\"text-sm font-medium text-gray-800 mt-1\">{record.doctor}</p>\n                      </div>\n                      <div>\n                        <p className=\"text-xs text-gray-600 uppercase tracking-wide font-medium\">Chẩn đoán</p>\n                        <p className=\"text-sm font-medium text-gray-800 mt-1\">{record.diagnosis}</p>\n                      </div>\n                      {record.status && (\n                        <div>\n                          <p className=\"text-xs text-gray-600 uppercase tracking-wide font-medium\">Trạng thái</p>\n                          <p className={`text-sm font-medium mt-1 px-2 py-0.5 rounded inline-block ${\n                            record.status === 'DISPENSED' \n                              ? 'bg-green-100 text-green-800' \n                              : record.status === 'PENDING_DISPENSE' \n                                ? 'bg-yellow-100 text-yellow-800'\n                                : 'bg-red-100 text-red-800'\n                          }`}>\n                            {record.status === 'DISPENSED' \n                              ? 'Đã phát thuốc' \n                              : record.status === 'PENDING_DISPENSE' \n                                ? 'Chờ phát thuốc' \n                                : 'Đã hủy'\n                            }\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  \n                  <div className=\"p-5\">\n                    <h4 className=\"font-medium text-gray-900 mb-4 flex items-center\">\n                      <PillIcon size={18} className=\"mr-2 text-indigo-600\" />\n                      Danh sách thuốc\n                    </h4>\n                    <div className=\"overflow-x-auto rounded-lg border border-gray-300\">\n                      <table className=\"min-w-full divide-y divide-gray-300\">\n                        <thead className=\"bg-gray-50\">\n                          <tr>\n                            <th className=\"px-6 py-3 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider border-b\">\n                              Tên thuốc\n                            </th>\n                            <th className=\"px-6 py-3 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider border-b\">\n                              Liều lượng\n                            </th>\n                            <th className=\"px-6 py-3 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider border-b\">\n                              Tần suất\n                            </th>\n                            <th className=\"px-6 py-3 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider border-b\">\n                              Thời gian dùng\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"bg-white divide-y divide-gray-300\">\n                          {record.medications.map((med, index) => (\n                            <tr key={index} className=\"hover:bg-gray-50 transition-colors\">\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                                {med.name}\n                              </td>\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\n                                {med.dosage}\n                              </td>\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\n                                {med.frequency}\n                              </td>\n                              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-700\">\n                                {med.duration}\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-16 border border-dashed border-gray-300 rounded-lg\">\n              <PillIcon size={48} className=\"mx-auto text-gray-400 mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-700\">\n                {allStatuses ? 'Không tìm thấy đơn thuốc nào' : 'Không tìm thấy đơn thuốc đã phát'}\n              </h3>\n              <p className=\"text-gray-500 mt-2 max-w-md mx-auto\">\n                {allStatuses \n                  ? 'Không có đơn thuốc nào trong hệ thống' \n                  : 'Không có đơn thuốc nào ở trạng thái đã phát (DISPENSED) trong hệ thống.'}\n              </p>\n              \n              <div className=\"mt-6 flex flex-col sm:flex-row gap-4 justify-center flex-wrap\">\n                <button \n                  onClick={debugMedicationData}\n                  className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors\"\n                >\n                  Kiểm tra trạng thái đơn thuốc\n                </button>\n                \n                {!allStatuses && (\n                  <button \n                    onClick={() => setAllStatuses(true)}\n                    className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors\"\n                  >\n                    Hiển thị tất cả đơn thuốc\n                  </button>\n                )}\n                \n                <button \n                  onClick={async () => {\n                    try {\n                      setLoading(true);\n                      // Try multiple IDs if needed\n                      const specificIds = [\n                        '68614f3d994cbb5f5a751225', // Your specific ID\n                        '685face23fc4c04e1bd96c13'  // First prescription from debug data\n                      ];\n                      \n                      // Try each ID until one works\n                      for (const id of specificIds) {\n                        try {\n                          console.log(`Checking specific prescription: ${id}`);\n                          const prescription = await apiService.getPrescriptionById(id, token || '');\n                          \n                          if (prescription) {\n                            console.log(`Found prescription with ID ${id}:`, prescription);\n                            console.log(`Status: ${prescription.status}`);\n                            \n                            // Process and display this single prescription\n                            await processPrescriptions([prescription]);\n                            setLoading(false);\n                            setError(null);\n                            return; // Exit the loop if successful\n                          }\n                        } catch (idError) {\n                          console.error(`Error fetching prescription with ID ${id}:`, idError);\n                          // Continue to next ID\n                        }\n                      }\n                      \n                      // If we get here, none of the IDs worked\n                      console.error('Could not find any specific prescriptions');\n                      setError(`Không thể tìm thấy đơn thuốc cụ thể. Hãy kiểm tra lại ID hoặc quyền truy cập.`);\n                      setLoading(false);\n                    } catch (err: any) {\n                      console.error('Error in specific prescription check:', err);\n                      setError(`Lỗi khi tìm đơn thuốc cụ thể: ${err.message || err}`);\n                      setLoading(false);\n                    }\n                  }}\n                  className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 transition-colors\"\n                >\n                  Kiểm tra đơn thuốc cụ thể\n                </button>\n                \n                <button \n                  onClick={showDebugPrescription}\n                  className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-orange-600 hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 transition-colors\"\n                >\n                  Hiển thị dữ liệu từ debug\n                </button>\n              </div>\n              \n              <div className=\"mt-4 text-sm text-gray-500\">\n                <p>Trạng thái đơn thuốc hợp lệ:</p>\n                <ul className=\"mt-2 inline-flex flex-wrap gap-2 justify-center\">\n                  <li className=\"px-2 py-1 bg-yellow-100 text-yellow-800 rounded-md\">PENDING_DISPENSE</li>\n                  <li className=\"px-2 py-1 bg-green-100 text-green-800 rounded-md\">DISPENSED</li>\n                  <li className=\"px-2 py-1 bg-red-100 text-red-800 rounded-md\">CANCELLED</li>\n                </ul>\n                \n                {debugInfo && (\n                  <div className=\"mt-6 p-4 border border-dashed border-gray-300 rounded-lg bg-gray-50 text-left overflow-auto\">\n                    <h4 className=\"font-medium mb-2 text-gray-800\">Debug Information:</h4>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <p><b>User Role:</b> {debugInfo.userRole || 'Unknown'}</p>\n                        <p><b>User ID:</b> {debugInfo.userId || 'Unknown'}</p>\n                        <p><b>Total Prescriptions:</b> {debugInfo.totalPrescriptions || 0}</p>\n                      </div>\n                      <div>\n                        <p><b>Status Counts:</b></p>\n                        <ul className=\"list-disc pl-5\">\n                          {debugInfo.statusCounts && Object.entries(debugInfo.statusCounts).map(([status, count]) => (\n                            <li key={status}>{status}: {String(count)}</li>\n                          ))}\n                        </ul>\n                      </div>\n                    </div>\n                    {debugInfo.firstPrescription && (\n                      <div className=\"mt-3\">\n                        <p><b>First Prescription:</b></p>\n                        <pre className=\"text-xs bg-gray-100 p-2 mt-1 max-h-40 overflow-auto rounded\">\n                          {JSON.stringify(debugInfo.firstPrescription, null, 2)}\n                        </pre>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n          \n          {/* Pagination */}\n          <div className=\"mt-8 flex flex-col md:flex-row justify-between items-center border-t border-gray-200 pt-5 gap-4\">\n            <div className=\"flex items-center gap-2 text-sm text-black\">\n              <p>\n                Hiển thị {filteredMedications.length > 0 ? \n                  `${indexOfFirstRecord + 1} - ${Math.min(indexOfLastRecord, filteredMedications.length)} của ${filteredMedications.length} kết quả` : \n                  \"0 kết quả\"}\n              </p>\n              \n              <select \n                className=\"ml-2 border border-gray-300 rounded-md py-1 px-2 focus:outline-none focus:ring-2 focus:ring-black focus:border-black\"\n                value={recordsPerPage}\n                onChange={(e) => {\n                  setRecordsPerPage(Number(e.target.value));\n                  setCurrentPage(1); // Reset to first page when changing items per page\n                }}\n              >\n                <option value={10}>10 mỗi trang</option>\n                <option value={20}>20 mỗi trang</option>\n                <option value={50}>50 mỗi trang</option>\n                <option value={100}>100 mỗi trang</option>\n                <option value={filteredMedications.length}>Hiển thị tất cả</option>\n              </select>\n            </div>\n            \n            {totalPages > 1 && (\n              <div className=\"inline-flex shadow-sm rounded-md\">\n                <button \n                  onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n                  disabled={currentPage === 1}\n                  className={`px-4 py-2 border border-gray-300 text-sm font-medium rounded-l-md ${\n                    currentPage === 1 ? 'bg-gray-100 text-gray-400 cursor-not-allowed' : 'bg-white text-black hover:bg-gray-50'\n                  } focus:z-10 focus:outline-none focus:ring-1 focus:ring-black focus:border-black transition-colors`}\n                >\n                  Trước\n                </button>\n                \n                {/* Show page numbers */}\n                {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                  // Logic to show pages around current page\n                  let pageToShow;\n                  if (totalPages <= 5) {\n                    pageToShow = i + 1;\n                  } else if (currentPage <= 3) {\n                    pageToShow = i + 1;\n                  } else if (currentPage >= totalPages - 2) {\n                    pageToShow = totalPages - 4 + i;\n                  } else {\n                    pageToShow = currentPage - 2 + i;\n                  }\n                  \n                  if (pageToShow > 0 && pageToShow <= totalPages) {\n                    return (\n                      <button\n                        key={pageToShow}\n                        onClick={() => setCurrentPage(pageToShow)}\n                        className={`px-4 py-2 border border-gray-300 relative -ml-px ${\n                          currentPage === pageToShow\n                            ? 'bg-blue-600 text-white'\n                            : 'bg-white text-black hover:bg-gray-50'\n                        } text-sm font-medium focus:z-10 focus:outline-none focus:ring-1 focus:ring-black focus:border-black transition-colors`}\n                      >\n                        {pageToShow}\n                      </button>\n                    );\n                  }\n                  return null;\n                })}\n                \n                <button \n                  onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n                  disabled={currentPage === totalPages}\n                  className={`px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md ${\n                    currentPage === totalPages ? 'bg-gray-100 text-gray-400 cursor-not-allowed' : 'bg-white text-black hover:bg-gray-50'\n                  } focus:z-10 focus:outline-none focus:ring-1 focus:ring-black focus:border-black transition-colors`}\n                >\n                  Sau\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6815, "column": 0}, "map": {"version":3,"sources":["file:///D:/%C4%90%E1%BB%93%20%C3%A1n%20A/hospitality-website-main/hospitality-website-main/my-app/src/app/receptionistPage/components/Appointments/AppointmentForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { XIcon, UserIcon, SearchIcon } from 'lucide-react';\nimport { User, searchUsers, getAllUsers, addQueue } from '../../../datats/mockPatients';\nimport * as apiService from '../../../services/api.service';\nimport { useAuth } from '../../../context/AuthContext';\n\ninterface AppointmentFormProps {\n  onClose: () => void;\n}\n\nexport function AppointmentForm({\n  onClose\n}: AppointmentFormProps) {\n  const [formData, setFormData] = useState({\n    patientId: '', // Lưu trữ ID của bệnh nhân\n    patientName: '',\n    patientPhone: '',\n    appointmentDate: new Date().toISOString().split('T')[0], // Today's date as default\n    appointmentTime: '09:00', // Default time\n    status: 'pending' // Default status for appointments\n  });\n  \n  const [selectedPatient, setSelectedPatient] = useState<User | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState<User[]>([]);\n  const [patients, setPatients] = useState<User[]>([]);\n  const [loading, setLoading] = useState(false);\n  const { token } = useAuth();\n  \n  // Tải dữ liệu bệnh nhân khi component được tạo\n  useEffect(() => {\n    const loadPatients = async () => {\n      const allUsers = await getAllUsers();\n      const patientUsers = allUsers.filter(user => user.role === 'PATIENT');\n      setPatients(patientUsers);\n    };\n    \n    loadPatients();\n  }, []);\n\n  // Xử lý tìm kiếm bệnh nhân\n  useEffect(() => {\n    const searchPatientsAsync = async () => {\n      if (searchTerm.length > 0) {\n        // Sử dụng hàm searchUsers từ mockPatients.ts và lọc chỉ lấy các user có role='PATIENT'\n        const results = await searchUsers(searchTerm);\n        const filteredResults = results.filter(user => user.role === 'PATIENT');\n        setSearchResults(filteredResults);\n      } else {\n        setSearchResults([]);\n      }\n    };\n    \n    searchPatientsAsync();\n  }, [searchTerm]);\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const selectPatient = (patient: User) => {\n    setSelectedPatient(patient);\n    setFormData({\n      ...formData,\n      patientId: patient._id,\n      patientName: patient.fullName,\n      patientPhone: patient.phone\n    });\n    setSearchTerm('');\n    setSearchResults([]);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!selectedPatient) {\n      alert('Vui lòng chọn bệnh nhân');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      \n      // Create appointment object\n      const appointmentData = {\n        patientId: formData.patientId,\n        patientName: formData.patientName,\n        patientPhone: formData.patientPhone,\n        appointmentDate: formData.appointmentDate,\n        appointmentTime: formData.appointmentTime,\n        status: formData.status\n      };\n      \n      // Create appointment via API if token exists\n      let success = false;\n      if (token) {\n        try {\n          const createdAppointment = await apiService.createAppointment(appointmentData, token);\n          if (createdAppointment && createdAppointment._id) {\n            success = true;\n          }\n        } catch (apiError) {\n          console.error(\"API Error creating appointment:\", apiError);\n        }\n      }\n      \n      // Fallback: Add to queue directly if API fails or no token\n      if (!success) {\n        // Add the patient to queue as a fallback\n        const queueStatus = 'waiting' as const;\n        const newQueue = await addQueue(formData.patientId, queueStatus);\n        \n        if (newQueue) {\n          console.log('Patient added to queue as fallback:', newQueue);\n          success = true;\n        }\n      }\n      \n      if (success) {\n        alert(`Đã đặt lịch hẹn cho bệnh nhân ${selectedPatient.fullName}!`);\n        onClose();\n      } else {\n        alert('Không thể đặt lịch hẹn. Vui lòng thử lại sau.');\n      }\n    } catch (error) {\n      console.error(\"Error creating appointment:\", error);\n      alert('Đã xảy ra lỗi khi đặt lịch hẹn. Vui lòng thử lại sau.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return (\n    <div className=\"bg-white rounded-lg shadow\">\n      <div className=\"flex justify-between items-center border-b p-4\">\n        <h2 className=\"text-xl font-semibold text-gray-800\">Đặt lịch khám</h2>\n        <div className=\"flex items-center\">\n          <span className=\"text-sm text-gray-500 mr-3\">ID và version sẽ được tạo tự động</span>\n          <button onClick={onClose} className=\"p-1 rounded-full hover:bg-gray-200\">\n            <XIcon size={20} className=\"text-gray-500\" />\n          </button>\n        </div>\n      </div>\n      \n      <form onSubmit={handleSubmit} className=\"p-6\">\n        {/* Tìm kiếm bệnh nhân */}\n        <div className=\"mb-6\">\n          <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n            Tìm bệnh nhân (patient) <span className=\"text-red-500\">*</span>\n          </label>\n          \n          <div className=\"relative\">\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <SearchIcon size={18} className=\"text-gray-400\" />\n            </div>\n            <input\n              type=\"text\"\n              placeholder=\"Tìm theo tên, CCCD hoặc số điện thoại...\"\n              className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-md w-full text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              value={searchTerm}\n              onChange={handleSearchChange}\n            />\n          </div>\n          \n          {searchResults.length > 0 && (\n            <div className=\"mt-2 border border-gray-200 rounded-md max-h-60 overflow-y-auto bg-white shadow-md\">\n              {searchResults.map((patient) => (\n                <div\n                  key={patient._id}\n                  className=\"p-3 border-b border-gray-100 hover:bg-blue-50 cursor-pointer flex items-center\"\n                  onClick={() => selectPatient(patient)}\n                >\n                  <UserIcon size={20} className=\"text-gray-500 mr-2\" />\n                  <div>\n                    <p className=\"font-medium text-gray-800\">{patient.fullName}</p>\n                    <div className=\"text-sm text-gray-500\">\n                      ID: {patient.userId} | SĐT: {patient.phone}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n          \n          {/* Hiển thị bệnh nhân đã chọn */}\n          {selectedPatient && (\n            <div className=\"mt-4 p-3 border border-blue-200 rounded-md bg-blue-50\">\n              <div className=\"flex justify-between\">\n                <div className=\"flex items-center\">\n                  <UserIcon size={20} className=\"text-blue-500 mr-2\" />\n                  <div>\n                    <p className=\"font-medium text-gray-800\">{selectedPatient.fullName}</p>\n                    <div className=\"text-sm text-gray-600\">\n                      ID: {selectedPatient.userId} | SĐT: {selectedPatient.phone}\n                    </div>\n                  </div>\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setSelectedPatient(null);\n                    setFormData({...formData, patientId: '', patientName: '', patientPhone: ''});\n                  }}\n                  className=\"text-gray-500 hover:text-red-500\"\n                >\n                  <XIcon size={18} />\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n        \n        {/* Date and Time */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n          {/* Appointment Date */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\" htmlFor=\"appointmentDate\">\n              Ngày hẹn <span className=\"text-red-500\">*</span>\n            </label>\n            <input\n              type=\"date\"\n              id=\"appointmentDate\"\n              name=\"appointmentDate\"\n              min={new Date().toISOString().split('T')[0]}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              value={formData.appointmentDate}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n          \n          {/* Appointment Time */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-700 mb-2\" htmlFor=\"appointmentTime\">\n              Thời gian <span className=\"text-red-500\">*</span>\n            </label>\n            <input\n              type=\"time\"\n              id=\"appointmentTime\"\n              name=\"appointmentTime\"\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              value={formData.appointmentTime}\n              onChange={handleInputChange}\n              required\n            />\n          </div>\n        </div>\n        \n        {/* Trạng thái */}\n        <div className=\"mb-6\">\n          <label className=\"block text-sm font-semibold text-gray-700 mb-2\" htmlFor=\"status\">\n            Trạng thái cuộc hẹn\n          </label>\n          <select\n            id=\"status\"\n            name=\"status\"\n            className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            value={formData.status}\n            onChange={handleInputChange}\n          >\n            <option value=\"pending\">Đang chờ xác nhận (pending)</option>\n            <option value=\"confirmed\">Đã xác nhận (confirmed)</option>\n            <option value=\"canceled\">Đã hủy (canceled)</option>\n          </select>\n        </div>\n        \n        <div className=\"mt-8 flex justify-end space-x-3\">\n          <button\n            type=\"button\"\n            onClick={onClose}\n            className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n            disabled={loading}\n          >\n            Hủy bỏ\n          </button>\n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-blue-300 disabled:cursor-not-allowed\"\n            disabled={!selectedPatient || loading}\n          >\n            {loading ? 'Đang xử lý...' : 'Đặt lịch'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7396, "column": 0}, "map": {"version":3,"sources":["file:///D:/%C4%90%E1%BB%93%20%C3%A1n%20A/hospitality-website-main/hospitality-website-main/my-app/src/app/receptionistPage/AppointmentBooking.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { CalendarIcon, SearchIcon, CheckCircleIcon, XIcon } from 'lucide-react';\nimport { AppointmentForm } from './components/Appointments/AppointmentForm';\nimport { \n  getAllPatients, \n  getQueuesByStatus, \n  addQueue\n} from '../datats/mockPatients';\nimport { User } from '../datats/mockPatients';\nimport axiosInstance from '../services/axios.customize.service';\nimport * as apiService from '../services/api.service';\nimport { useAuth } from '../context/AuthContext';\n\ninterface AppointmentBookingProps {\n  onBack: () => void;\n}\n\n// Interface for our appointment data structure\ninterface Appointment {\n  id: string;\n  name: string;\n  userId: string;\n  phone: string;\n  appointmentDate: string;\n  appointmentTime: string;\n  status: 'pending' | 'confirmed' | 'completed' | 'canceled';\n}\n\nexport function AppointmentBooking({ onBack }: AppointmentBookingProps) {\n  const [showForm, setShowForm] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const { token } = useAuth();\n\n  // Load appointments from API\n  useEffect(() => {\n    const loadAppointments = async () => {\n      try {\n        setLoading(true);\n        \n        // Get patients for mapping \n        const patients = await getAllPatients();\n        \n        // In a real implementation, fetch appointments from the API\n        // For now, generate mock appointments from patient data\n        if (token) {\n          // Try to get appointments from API\n          try {\n            const apiAppointments = await apiService.getAppointments(token);\n            if (apiAppointments && Array.isArray(apiAppointments)) {\n              // Format appointments from API\n              const formattedAppointments = apiAppointments.map((appt: any) => ({\n                id: appt._id,\n                name: appt.patientName || 'Unknown',\n                userId: appt.patientId || '',\n                phone: appt.patientPhone || '',\n                appointmentDate: new Date(appt.appointmentDate).toISOString().split('T')[0],\n                appointmentTime: appt.appointmentTime,\n                status: appt.status as 'pending' | 'confirmed' | 'completed' | 'canceled'\n              }));\n              setAppointments(formattedAppointments);\n              setLoading(false);\n              return;\n            }\n          } catch (apiError) {\n            console.log('Could not fetch appointments from API, falling back to mock data', apiError);\n          }\n        }\n\n        // Fallback: Generate mock appointments from patient data\n        const today = new Date();\n        const mockAppointments = patients.slice(0, 5).map((patient, index) => {\n          const appointmentHour = 9 + index;\n          const appointmentDate = new Date();\n          appointmentDate.setDate(today.getDate() + (index % 3)); // Distribute over next 3 days\n          \n          return {\n            id: patient._id,\n            name: patient.fullName,\n            userId: patient.userId,\n            phone: patient.phone,\n            appointmentDate: appointmentDate.toISOString().split('T')[0],\n            appointmentTime: `${appointmentHour < 10 ? '0' + appointmentHour : appointmentHour}:00`,\n            status: (index % 2 === 0) ? 'pending' : 'confirmed'\n          } as Appointment;\n        });\n        \n        setAppointments(mockAppointments);\n      } catch (err) {\n        console.error(\"Error loading appointments:\", err);\n        setError(\"Could not load appointments. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadAppointments();\n  }, [token]);\n  \n  const filteredAppointments = appointments.filter(appointment => \n    appointment.name.toLowerCase().includes(searchTerm.toLowerCase()) || \n    appointment.userId.includes(searchTerm) ||\n    appointment.phone.includes(searchTerm)\n  );\n  \n  const handleMoveToQueue = async (appointmentId: string) => {\n    try {\n      // Add patient to queue using the addQueue function (now async)\n      const result = await addQueue(appointmentId, 'waiting');\n      \n      if (result) {\n        // Update appointment status\n        setAppointments(appointments.map(appt => \n          appt.id === appointmentId ? {...appt, status: 'completed' as const} : appt\n        ));\n        \n        // In a real implementation, update the appointment status in the API\n        if (token) {\n          try {\n            const appointmentToUpdate = appointments.find(a => a.id === appointmentId);\n            if (appointmentToUpdate) {\n              await apiService.updateAppointment(\n                appointmentId, \n                { status: 'completed' }, \n                token\n              );\n            }\n          } catch (apiError) {\n            console.error(\"Failed to update appointment status in API:\", apiError);\n          }\n        }\n        \n        alert('Đã chuyển bệnh nhân vào phòng chờ!');\n      } else {\n        alert('Bệnh nhân đã có trong phòng chờ hoặc không thể thêm!');\n      }\n    } catch (error) {\n      console.error(\"Error adding patient to queue:\", error);\n      alert('Đã xảy ra lỗi khi chuyển bệnh nhân vào phòng chờ!');\n    }\n  };\n  \n  if (loading) return <div className=\"p-8 text-center\">Đang tải dữ liệu...</div>;\n  \n  if (error) return <div className=\"p-8 text-center text-red-500\">{error}</div>;\n  \n  return <div>\n      <div className=\"flex items-center mb-4\">\n        <button \n          onClick={onBack}\n          className=\"mr-4 px-3 py-1 bg-gray-200 hover:bg-gray-300 rounded-md flex items-center text-gray-700\"\n        >\n          ← Quay lại\n        </button>\n      </div>\n      <div className=\"mb-8 border-b border-gray-200 pb-5\">\n        <h1 className=\"text-3xl font-bold text-black tracking-tight\">Đặt lịch khám</h1>\n        <p className=\"text-black mt-2\">\n          Quản lý các cuộc hẹn khám bệnh và điều phối lịch\n        </p>\n      </div>\n      \n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n        <div className=\"lg:col-span-2\">\n          <div className=\"bg-white rounded-xl shadow border border-gray-200 overflow-hidden\">\n            <div className=\"flex justify-between items-center p-6 border-b border-gray-200\">\n              <h2 className=\"text-xl font-semibold text-black\">Lịch hẹn</h2>\n              <button \n                onClick={() => setShowForm(true)}\n                className=\"bg-blue-600 hover:bg-blue-700 text-white rounded-lg px-4 py-2 flex items-center text-sm font-medium transition-colors\"\n              >\n                <CalendarIcon className=\"w-4 h-4 mr-2\" />\n                Thêm lịch hẹn\n              </button>\n            </div>\n            \n            <div className=\"p-6 border-b border-gray-200\">\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <SearchIcon size={18} className=\"text-black\" />\n                </div>\n                <input \n                  type=\"text\" \n                  placeholder=\"Tìm kiếm theo tên, ID hoặc số điện thoại...\" \n                  className=\"pl-10 pr-4 py-2.5 border border-gray-300 rounded-lg w-full focus:outline-none focus:ring-2 focus:ring-black focus:border-black shadow-sm\" \n                  value={searchTerm}\n                  onChange={e => setSearchTerm(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Bệnh nhân\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Thời gian\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Trạng thái\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Thao tác\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {filteredAppointments.length > 0 ? (\n                    filteredAppointments.map((appointment) => (\n                      <tr key={appointment.id} className=\"hover:bg-gray-50\">\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm font-medium text-gray-900\">{appointment.name}</div>\n                          <div className=\"text-sm text-gray-500\">ID: {appointment.userId}</div>\n                          <div className=\"text-sm text-gray-500\">SĐT: {appointment.phone}</div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-900\">\n                            {new Date(appointment.appointmentDate).toLocaleDateString('vi-VN')}\n                          </div>\n                          <div className=\"text-sm text-gray-500\">{appointment.appointmentTime}</div>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                            appointment.status === 'confirmed' \n                              ? 'bg-green-100 text-green-800' \n                              : appointment.status === 'canceled'\n                              ? 'bg-red-100 text-red-800'\n                              : appointment.status === 'completed'\n                              ? 'bg-blue-100 text-blue-800'\n                              : 'bg-yellow-100 text-yellow-800'\n                          }`}>\n                            {appointment.status === 'confirmed' \n                              ? 'Đã xác nhận' \n                              : appointment.status === 'canceled'\n                              ? 'Đã hủy'\n                              : appointment.status === 'completed'\n                              ? 'Đã hoàn thành'\n                              : 'Đang chờ'}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                          {appointment.status !== 'completed' && appointment.status !== 'canceled' && (\n                            <button \n                              onClick={() => handleMoveToQueue(appointment.id)}\n                              className=\"text-white bg-blue-600 hover:bg-blue-700 px-3 py-1.5 rounded-md mr-2 flex items-center\"\n                            >\n                              <CheckCircleIcon className=\"w-4 h-4 mr-1\" />\n                              Chuyển vào phòng chờ\n                            </button>\n                          )}\n                        </td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan={4} className=\"px-6 py-10 text-center text-sm text-gray-500\">\n                        Không tìm thấy lịch hẹn nào\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n            \n            <div className=\"p-4 bg-gray-50 border-t border-gray-200\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"text-sm text-gray-700\">\n                  Hiển thị {filteredAppointments.length} trong tổng số {appointments.length} lịch hẹn\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div>\n          <div className=\"bg-white rounded-xl shadow border border-gray-200 overflow-hidden\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <h2 className=\"text-xl font-semibold text-black\">Lịch hẹn hôm nay</h2>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                {new Date().toLocaleDateString('vi-VN', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}\n              </p>\n            </div>\n            <div className=\"p-6\">\n              {appointments.filter(a => a.appointmentDate === new Date().toISOString().split('T')[0]).length > 0 ? (\n                <ul className=\"divide-y divide-gray-200\">\n                  {appointments\n                    .filter(a => a.appointmentDate === new Date().toISOString().split('T')[0])\n                    .map(appointment => (\n                      <li key={appointment.id} className=\"py-4\">\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-sm font-medium text-black\">{appointment.appointmentTime}</p>\n                            <p className=\"text-sm text-gray-600 mt-1\">{appointment.name}</p>\n                          </div>\n                          <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                            appointment.status === 'confirmed' \n                              ? 'bg-green-100 text-green-800' \n                              : appointment.status === 'canceled'\n                              ? 'bg-red-100 text-red-800'\n                              : appointment.status === 'completed'\n                              ? 'bg-blue-100 text-blue-800'\n                              : 'bg-yellow-100 text-yellow-800'\n                          }`}>\n                            {appointment.status === 'confirmed' \n                              ? 'Đã xác nhận' \n                              : appointment.status === 'canceled'\n                              ? 'Đã hủy'\n                              : appointment.status === 'completed'\n                              ? 'Đã hoàn thành'\n                              : 'Đang chờ'}\n                          </span>\n                        </div>\n                      </li>\n                    ))\n                  }\n                </ul>\n              ) : (\n                <div className=\"text-center py-8\">\n                  <CalendarIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\n                  <h3 className=\"mt-2 text-sm font-medium text-gray-900\">Không có lịch hẹn hôm nay</h3>\n                  <p className=\"mt-1 text-sm text-gray-500\">\n                    Chưa có lịch hẹn nào được đặt cho hôm nay.\n                  </p>\n                  <div className=\"mt-6\">\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowForm(true)}\n                      className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                    >\n                      <CalendarIcon className=\"-ml-1 mr-2 h-5 w-5\" aria-hidden=\"true\" />\n                      Thêm lịch hẹn\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Appointment Form Modal */}\n      {showForm && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n            <AppointmentForm onClose={() => setShowForm(false)} />\n          </div>\n        </div>\n      )}\n    </div>;\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8102, "column": 0}, "map": {"version":3,"sources":["file:///D:/%C4%90%E1%BB%93%20%C3%A1n%20A/hospitality-website-main/hospitality-website-main/my-app/src/app/receptionistPage/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useRouter } from 'next/navigation';\nimport { Dashboard } from './Dashboard';\nimport { PatientManagement } from './PatientManagement';\nimport { QueueManagement } from './QueueManagement';\nimport { MedicationHistory } from './MedicationHistory';\nimport { AppointmentBooking } from './AppointmentBooking';\n\nexport default function ReceptionistPage() {\n  const { user, isAuthenticated, logout } = useAuth();\n  const router = useRouter();\n  const [currentView, setCurrentView] = useState('Dashboard');\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      router.push('/login');\n    } else if (user?.role !== 'RECEPTIONIST') {\n      logout();\n      router.push('/login');\n    }\n  }, [isAuthenticated, router, user, logout]);\n\n  if (!isAuthenticated || !user) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  const renderCurrentView = () => {\n    switch(currentView) {\n      case 'PatientManagement':\n        return <PatientManagement onBack={() => setCurrentView('Dashboard')} />;\n      case 'QueueManagement':\n        return <QueueManagement onBack={() => setCurrentView('Dashboard')} />;\n      case 'MedicationHistory':\n        return <MedicationHistory onBack={() => setCurrentView('Dashboard')} />;\n      case 'AppointmentBooking':  // Thêm case này để xử lý AppointmentBooking\n        return <AppointmentBooking onBack={() => setCurrentView('Dashboard')} />;\n      case 'Dashboard':\n      default:\n        return <Dashboard onNavigate={(view) => setCurrentView(view)} />;\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col w-full min-h-screen bg-gray-50\">\n      {renderCurrentView()}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;;AAWe,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,UAAO,AAAD;IAChD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,iBAAiB;YACpB,OAAO,IAAI,CAAC;QACd,OAAO,IAAI,MAAM,SAAS,gBAAgB;YACxC;YACA,OAAO,IAAI,CAAC;QACd;IACF,GAAG;QAAC;QAAiB;QAAQ;QAAM;KAAO;IAE1C,IAAI,CAAC,mBAAmB,CAAC,MAAM;QAC7B,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,MAAM,oBAAoB;QACxB,OAAO;YACL,KAAK;gBACH,qBAAO,8OAAC,oJAAA,CAAA,oBAAiB;oBAAC,QAAQ,IAAM,eAAe;;;;;;YACzD,KAAK;gBACH,qBAAO,8OAAC,kJAAA,CAAA,kBAAe;oBAAC,QAAQ,IAAM,eAAe;;;;;;YACvD,KAAK;gBACH,qBAAO,8OAAC,oJAAA,CAAA,oBAAiB;oBAAC,QAAQ,IAAM,eAAe;;;;;;YACzD,KAAK;gBACH,qBAAO,8OAAC,qJAAA,CAAA,qBAAkB;oBAAC,QAAQ,IAAM,eAAe;;;;;;YAC1D,KAAK;YACL;gBACE,qBAAO,8OAAC,4IAAA,CAAA,YAAS;oBAAC,YAAY,CAAC,OAAS,eAAe;;;;;;QAC3D;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ;;;;;;AAGP","debugId":null}}]
}