{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/pharmacyPage/PatientList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { UserIcon, RefreshCw, AlertCircle, ClipboardList } from 'lucide-react';\r\nimport { PharmacyPatient, getPatientsWithPendingPrescriptions } from './pharmacyUtils';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\ninterface PatientListProps {\r\n  patients: PharmacyPatient[];\r\n  onPatientSelect: (patient: PharmacyPatient) => void;\r\n  onRefresh?: () => void;\r\n  isLoading?: boolean;\r\n  error?: string | null;\r\n}\r\n\r\nexport const PatientList = ({\r\n  patients,\r\n  onPatientSelect,\r\n  onRefresh,\r\n  isLoading = false,\r\n  error = null\r\n}: PatientListProps) => {\r\n  const { token } = useAuth();\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  \r\n  // Function to handle manual refresh\r\n  const handleRefresh = async () => {\r\n    if (isRefreshing || isLoading) return;\r\n    \r\n    setIsRefreshing(true);\r\n    try {\r\n      if (onRefresh) {\r\n        await onRefresh();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error refreshing patient list:\", error);\r\n    } finally {\r\n      // Add a small delay for better UX\r\n      setTimeout(() => {\r\n        setIsRefreshing(false);\r\n      }, 800);\r\n    }\r\n  };\r\n  \r\n  return <div className=\"bg-white shadow rounded-lg overflow-hidden\">\r\n      <div className=\"bg-blue-600 px-4 py-3 flex justify-between items-center\">\r\n        <div className=\"flex items-center\">\r\n          <ClipboardList className=\"h-5 w-5 text-white mr-2\" />\r\n          <h2 className=\"text-lg font-medium text-white\">\r\n            Danh Sách Chờ Phát Thuốc\r\n          </h2>\r\n          {patients.length > 0 && (\r\n            <span className=\"ml-2 bg-white text-blue-600 rounded-full px-2 py-0.5 text-xs font-medium\">\r\n              {patients.length}\r\n            </span>\r\n          )}\r\n        </div>\r\n        <button \r\n          onClick={handleRefresh} \r\n          className={`p-1.5 rounded-full text-white hover:bg-blue-700 transition-all focus:outline-none ${isRefreshing ? 'animate-spin' : ''}`}\r\n          disabled={isRefreshing || isLoading}\r\n          title=\"Làm mới danh sách\"\r\n        >\r\n          <RefreshCw size={18} />\r\n        </button>\r\n      </div>\r\n      <div className=\"divide-y divide-gray-200 max-h-96 overflow-y-auto\">\r\n        {isRefreshing || isLoading ? (\r\n          <div className=\"flex items-center justify-center p-8\">\r\n            <div className=\"text-center\">\r\n              <RefreshCw size={24} className=\"animate-spin mx-auto text-blue-600 mb-2\" />\r\n              <p className=\"text-sm text-gray-600\">{isRefreshing ? 'Đang cập nhật danh sách...' : 'Đang tải danh sách...'}</p>\r\n            </div>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"p-6 text-center\">\r\n            <div className=\"rounded-full bg-red-100 p-3 w-12 h-12 mx-auto mb-4 flex items-center justify-center\">\r\n              <AlertCircle className=\"h-6 w-6 text-red-600\" />\r\n            </div>\r\n            <p className=\"text-red-600 font-medium\">Không thể tải dữ liệu</p>\r\n            <p className=\"text-sm text-gray-600 mt-2 mb-4\">{error}</p>\r\n            <button \r\n              onClick={handleRefresh}\r\n              className=\"inline-flex items-center px-4 py-2 border border-red-300 rounded-md shadow-sm text-sm font-medium text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\r\n            >\r\n              <RefreshCw size={16} className=\"mr-2\" /> Thử lại\r\n            </button>\r\n          </div>\r\n        ) : patients.length > 0 ? (\r\n          patients.map(patient => (\r\n            <div key={patient.id} className=\"p-4 hover:bg-gray-50 transition-colors\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"bg-blue-100 rounded-full p-2 mr-3\">\r\n                    <UserIcon className=\"h-5 w-5 text-blue-600\" />\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"font-medium text-gray-900\">\r\n                      {patient.serialNumber} - {patient.fullName}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-500\">\r\n                      {patient.phone || 'Không có SĐT'}\r\n                    </p>\r\n                    <div className=\"flex items-center text-xs text-blue-600 mt-1\">\r\n                      <span className=\"font-medium\">Bác sĩ:</span> \r\n                      <span className=\"ml-1\">{patient.doctor}</span>\r\n                    </div>\r\n                    <div className=\"flex flex-col mt-1\">\r\n                      {patient.diagnosis && (\r\n                        <div className=\"text-xs text-gray-700\">\r\n                          <span className=\"font-medium\">Chẩn đoán:</span> \r\n                          <span className=\"ml-1 line-clamp-1\">{patient.diagnosis}</span>\r\n                        </div>\r\n                      )}\r\n                      {patient.prescription && (\r\n                        <div className=\"text-xs text-green-600 mt-0.5\">\r\n                          <span className=\"font-medium\">{patient.prescription.length} loại thuốc</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <button \r\n                  onClick={() => onPatientSelect(patient)} \r\n                  className=\"inline-flex items-center px-3 py-1.5 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors\"\r\n                >\r\n                  Phát thuốc\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"p-8 text-center\">\r\n            <div className=\"rounded-full bg-gray-100 p-3 w-12 h-12 mx-auto mb-4 flex items-center justify-center\">\r\n              <UserIcon className=\"h-6 w-6 text-gray-400\" />\r\n            </div>\r\n            <p className=\"text-gray-600 font-medium\">Không có bệnh nhân nào trong danh sách chờ.</p>\r\n            <p className=\"text-sm text-gray-500 mt-1\">Tất cả đơn thuốc đã được phát.</p>\r\n            <button \r\n              onClick={handleRefresh}\r\n              className=\"mt-4 inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n            >\r\n              <RefreshCw size={16} className=\"mr-2\" /> Kiểm tra lại\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>;\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 444, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/pharmacyPage/Invoice.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ArrowLeftIcon, PrinterIcon, AlertTriangle } from 'lucide-react';\r\nimport { PharmacyPatient, PharmacyMedicine } from './pharmacyUtils';\r\n\r\ninterface InvoiceProps {\r\n  patient: PharmacyPatient;\r\n  onClose: () => void;\r\n  onComplete: () => void;\r\n}\r\n\r\nexport const Invoice = ({\r\n  patient,\r\n  onClose,\r\n  onComplete\r\n}: InvoiceProps) => {\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  const currentDate = new Date().toLocaleDateString('vi-VN');\r\n  \r\n  const calculateTotal = () => {\r\n    return patient.prescription.reduce((total: number, med: PharmacyMedicine) => {\r\n      return total + med.price * med.quantity;\r\n    }, 0);\r\n  };\r\n  \r\n  const handlePrint = async () => {\r\n    setIsProcessing(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // In thực tế, ở đây sẽ gọi API để in và lưu hoá đơn\r\n      // Sau đó mới gọi onComplete để xác nhận đã phát thuốc\r\n      \r\n      // Giả lập thời gian chờ để UX tốt hơn\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      onComplete();\r\n    } catch (err: any) {\r\n      console.error(\"Error completing invoice:\", err);\r\n      setError(err.message || \"Không thể hoàn tất hóa đơn. Vui lòng thử lại.\");\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n  return <div className=\"bg-white shadow rounded-lg overflow-hidden\">\r\n      <div className=\"bg-blue-600 px-4 py-3 flex justify-between items-center\">\r\n        <div className=\"flex items-center\">\r\n          <button onClick={onClose} className=\"mr-2 text-white hover:text-blue-100\">\r\n            <ArrowLeftIcon className=\"h-5 w-5\" />\r\n          </button>\r\n          <h2 className=\"text-lg font-medium text-white\">Hóa Đơn Thuốc</h2>\r\n        </div>\r\n        {error ? (\r\n          <div className=\"flex items-center text-red-600 bg-red-50 px-3 py-1 rounded-md border border-red-200\">\r\n            <AlertTriangle className=\"h-4 w-4 mr-1\" />\r\n            <span className=\"text-sm\">{error}</span>\r\n          </div>\r\n        ) : (\r\n          <button \r\n            onClick={handlePrint} \r\n            disabled={isProcessing}\r\n            className={`inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md transition-colors ${\r\n              isProcessing \r\n                ? 'bg-gray-400 text-white cursor-not-allowed' \r\n                : 'text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500'\r\n            }`}\r\n          >\r\n            {isProcessing ? (\r\n              <>\r\n                <span className=\"animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full mr-1\"></span>\r\n                Đang xử lý...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <PrinterIcon className=\"h-4 w-4 mr-1\" /> In & hoàn tất\r\n              </>\r\n            )}\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"p-6\">\r\n        <div className=\"border border-gray-200 rounded-lg p-6 mb-6\">\r\n          <div className=\"text-center mb-6\">\r\n            <h3 className=\"text-xl font-bold text-blue-800\">\r\n              PHÒNG KHÁM ĐA KHOA\r\n            </h3>\r\n            <p className=\"text-gray-500\">123 Nguyễn Huệ, Quận 1, TP.HCM</p>\r\n            <p className=\"text-gray-500\">Điện thoại: (028) 3822 1234</p>\r\n            <div className=\"mt-4 border-t pt-4\">\r\n              <h2 className=\"text-xl font-bold\">HÓA ĐƠN THUỐC</h2>\r\n              <p className=\"text-gray-500\">Ngày: {currentDate}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Họ và tên bệnh nhân</p>\r\n              <p className=\"font-medium\">{patient.fullName}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Số điện thoại</p>\r\n              <p className=\"font-medium\">{patient.phone}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Mã đơn thuốc</p>\r\n              <p className=\"font-medium\">{patient.serialNumber}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Chẩn đoán</p>\r\n              <p className=\"font-medium\">{patient.diagnosis}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Bác sĩ kê đơn</p>\r\n              <p className=\"font-medium\">{patient.doctor}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Nhân viên phát thuốc</p>\r\n              <p className=\"font-medium\">Nguyễn Thị Hà</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"overflow-x-auto mb-6\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    STT\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Tên thuốc\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Số lượng\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Liều dùng\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Đơn giá\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Thành tiền\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {patient.prescription.map((medicine: PharmacyMedicine, index: number) => <tr key={index}>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {index + 1}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {medicine.name}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {medicine.quantity}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {medicine.dosage}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {medicine.price.toLocaleString('vi-VN')} đ\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {(medicine.price * medicine.quantity).toLocaleString('vi-VN')}{' '}\r\n                      đ\r\n                    </td>\r\n                  </tr>)}\r\n                <tr className=\"bg-gray-50\">\r\n                  <td colSpan={5} className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 text-right\">\r\n                    Tổng cộng:\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-700\">\r\n                    {calculateTotal().toLocaleString('vi-VN')} đ\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"grid grid-cols-2 gap-4 mt-8\">\r\n            <div className=\"text-center\">\r\n              <p className=\"font-medium\">Người lập phiếu</p>\r\n              <p className=\"text-gray-500 text-sm\">(Ký, ghi rõ họ tên)</p>\r\n              <div className=\"h-16\"></div>\r\n              <p>Nguyễn Thị Hà</p>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <p className=\"font-medium\">Người nhận thuốc</p>\r\n              <p className=\"text-gray-500 text-sm\">(Ký, ghi rõ họ tên)</p>\r\n              <div className=\"h-16\"></div>\r\n              <p>{patient.fullName}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>;\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1095, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/pharmacyPage/pharmacyUtils.ts"],"sourcesContent":["import * as apiService from '../services/api.service';\r\n\r\n// Type definitions to match the pharmacy page UI needs\r\nexport interface PharmacyPatient {\r\n  _id: string;\r\n  prescriptionId: string;\r\n  customPrescriptionId: string;\r\n  fullName: string;\r\n  phone: string;\r\n  dateOfBirth?: string;\r\n  gender?: string;\r\n  diagnosis: string;\r\n  doctorName: string;\r\n  status: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  medications: PharmacyMedication[];\r\n}\r\n\r\nexport interface PharmacyMedication {\r\n  _id: string;\r\n  customPrescriptionDetailId: string;\r\n  medicineId: string;\r\n  medicineName: string;\r\n  medicineUnit: string;\r\n  quantity: number;\r\n  dosage: string;\r\n  price: number;\r\n  total: number;\r\n}\r\n\r\nexport interface PharmacyInvoice {\r\n  id: string;\r\n  date: string;\r\n  patientId: string;\r\n  pharmacistName: string;\r\n  totalAmount: number;\r\n}\r\n\r\n// Function to get patients with pending prescriptions for the pharmacy\r\nexport const getPatientsWithPendingPrescriptions = async (): Promise<PharmacyPatient[]> => {\r\n  try {\r\n    // Try to get authentication token from localStorage\r\n    const tokenFromStorage = localStorage.getItem('token');\r\n    \r\n    if (!tokenFromStorage) {\r\n      console.error(\"No authentication token found\");\r\n      return [];\r\n    }\r\n    \r\n    console.log('Fetching pending prescriptions with status PENDING_DISPENSE from API');\r\n    \r\n    // Fetch all prescriptions with status PENDING_DISPENSE\r\n    const prescriptions = await apiService.getPendingDispensePrescriptions(tokenFromStorage);\r\n    console.log(`Fetched ${prescriptions.length} prescriptions with status PENDING_DISPENSE`);\r\n    \r\n    const result: PharmacyPatient[] = [];\r\n    \r\n    for (const prescription of prescriptions) {\r\n      try {\r\n        // Get patient details\r\n        const patient = await apiService.getPatientById(prescription.patientId, tokenFromStorage);\r\n        if (!patient) {\r\n          console.warn(`Patient with ID ${prescription.patientId} not found for prescription ${prescription._id}`);\r\n          continue;\r\n        }\r\n        \r\n        // Get doctor details\r\n        const doctor = await apiService.getPatientById(prescription.doctorId, tokenFromStorage);\r\n        if (!doctor) {\r\n          console.warn(`Doctor with ID ${prescription.doctorId} not found for prescription ${prescription._id}`);\r\n          continue;\r\n        }\r\n        \r\n        // Get prescription details\r\n        const prescriptionDetails = await apiService.getPrescriptionDetailsById(prescription._id, tokenFromStorage);\r\n        console.log(`Found ${prescriptionDetails.length} prescription details for prescription ${prescription._id}`);\r\n        \r\n        // Map prescription details to medications\r\n        const medications: PharmacyMedication[] = [];\r\n        \r\n        for (const detail of prescriptionDetails) {\r\n          try {\r\n            const medicine = await apiService.getMedicineById(detail.medicineId, tokenFromStorage);\r\n            if (!medicine) {\r\n              console.warn(`Medicine with ID ${detail.medicineId} not found`);\r\n              continue;\r\n            }\r\n            \r\n            // Calculate total price for this medication\r\n            const total = medicine.price * detail.quantity;\r\n            \r\n            medications.push({\r\n              _id: detail._id,\r\n              customPrescriptionDetailId: detail.customPrescriptionDetailId || detail._id,\r\n              medicineId: detail.medicineId,\r\n              medicineName: medicine.name,\r\n              medicineUnit: medicine.unit || 'unit',\r\n              quantity: detail.quantity,\r\n              dosage: detail.dosage,\r\n              price: medicine.price,\r\n              total: total\r\n            });\r\n          } catch (medError) {\r\n            console.error(`Error processing medicine for detail ${detail._id}:`, medError);\r\n          }\r\n        }\r\n        \r\n        // Create pharmacy patient object\r\n        result.push({\r\n          _id: prescription._id,\r\n          prescriptionId: prescription._id,\r\n          customPrescriptionId: prescription.customPrescriptionId || prescription._id,\r\n          fullName: patient.fullName,\r\n          phone: patient.phone || 'N/A',\r\n          dateOfBirth: patient.dateOfBirth || patient.dob,\r\n          gender: patient.gender,\r\n          diagnosis: prescription.diagnosis,\r\n          doctorName: doctor.fullName,\r\n          status: prescription.status,\r\n          createdAt: prescription.createdAt,\r\n          updatedAt: prescription.updatedAt,\r\n          medications: medications\r\n        });\r\n      } catch (detailsError) {\r\n        console.error(`Error processing prescription ${prescription._id}:`, detailsError);\r\n      }\r\n    }\r\n    \r\n    console.log(`Prepared ${result.length} pharmacy patients with their prescription details`);\r\n    return result;\r\n  } catch (error) {\r\n    console.error(\"Error fetching pending prescriptions:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Create a pharmacy invoice and mark prescription as dispensed\r\nexport const createPharmacyInvoice = async (prescriptionId: string, totalAmount: number, token: string): Promise<boolean> => {\r\n  try {\r\n    console.log(`Creating invoice for prescription ${prescriptionId}`);\r\n    \r\n    // Update prescription status to DISPENSED\r\n    await apiService.updatePrescriptionStatus(prescriptionId, 'DISPENSED', token);\r\n    \r\n    // In a real app, we would also create a proper invoice record in the database here\r\n    console.log(`Updated prescription ${prescriptionId} status to DISPENSED`);\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error creating pharmacy invoice:\", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Function to get pharmacy invoice data\r\nexport const getPharmacyInvoices = async (): Promise<PharmacyInvoice[]> => {\r\n  try {\r\n    // Try to get authentication token from localStorage\r\n    const tokenFromStorage = localStorage.getItem('token');\r\n    \r\n    if (!tokenFromStorage) {\r\n      console.error(\"No authentication token found\");\r\n      return [];\r\n    }\r\n\r\n    // In a real application, we would fetch invoice data from MongoDB here\r\n    // For now, we'll return a sample set of invoices for demonstration\r\n    const today = new Date();\r\n    const yesterday = new Date(today);\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n    \r\n    return [\r\n      {\r\n        id: 'INV-' + Date.now().toString().slice(-8) + '-0001',\r\n        date: today.toISOString(),\r\n        patientId: 'sample-patient-id-1',\r\n        pharmacistName: 'Nguyễn Thị Hà',\r\n        totalAmount: 250000\r\n      },\r\n      {\r\n        id: 'INV-' + Date.now().toString().slice(-8) + '-0002',\r\n        date: yesterday.toISOString(),\r\n        patientId: 'sample-patient-id-2',\r\n        pharmacistName: 'Nguyễn Thị Hà',\r\n        totalAmount: 350000\r\n      }\r\n    ];\r\n  } catch (error) {\r\n    console.error(\"Error fetching pharmacy invoices:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Function to get daily revenue data for statistics\r\nexport const getDailyRevenue = async () => {\r\n  try {\r\n    // Try to get authentication token from localStorage\r\n    const tokenFromStorage = localStorage.getItem('token');\r\n    \r\n    if (!tokenFromStorage) {\r\n      console.error(\"No authentication token found\");\r\n      return [];\r\n    }\r\n\r\n    // In a real application, we would fetch revenue data from MongoDB here\r\n    // For now, we'll generate sample data for the last 7 days\r\n    const result = [];\r\n    const today = new Date();\r\n    \r\n    // Generate data for the last 7 days\r\n    for (let i = 0; i < 7; i++) {\r\n      const date = new Date(today);\r\n      date.setDate(date.getDate() - i);\r\n      const dateStr = date.toISOString().split('T')[0]; // Format as YYYY-MM-DD\r\n      \r\n      result.push({\r\n        date: dateStr,\r\n        amount: Math.floor(Math.random() * 500000) + 200000 // Random amount between 200,000 and 700,000\r\n      });\r\n    }\r\n    \r\n    // Sort by date ascending for easier chart rendering\r\n    return result.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\r\n  } catch (error) {\r\n    console.error(\"Error getting daily revenue:\", error);\r\n    return [];\r\n  }\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1268, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/pharmacyPage/PatientDetails.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ClipboardListIcon, PrinterIcon, UserIcon, PillIcon, AlertTriangle } from 'lucide-react';\r\nimport { Invoice } from './Invoice';\r\nimport { PharmacyPatient, createPharmacyInvoice } from './pharmacyUtils';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\ninterface PatientDetailsProps {\r\n  patient: PharmacyPatient;\r\n  onPatientComplete: (id: string) => void;\r\n}\r\n\r\nexport const PatientDetails = ({\r\n  patient,\r\n  onPatientComplete\r\n}: PatientDetailsProps) => {\r\n  const { token } = useAuth();\r\n  const [showInvoice, setShowInvoice] = useState(false);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  // Handler for showing invoice\r\n  const handleShowInvoice = async () => {\r\n    setProcessing(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      setShowInvoice(true);\r\n    } catch (err: any) {\r\n      console.error(\"Error preparing invoice:\", err);\r\n      setError(err.message || \"Không thể tạo hóa đơn. Vui lòng thử lại.\");\r\n    } finally {\r\n      setProcessing(false);\r\n    }\r\n  };\r\n  \r\n  // Handler for completing prescription\r\n  const handleComplete = async () => {\r\n    setProcessing(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      if (!token) {\r\n        throw new Error(\"Bạn chưa đăng nhập hoặc phiên đăng nhập đã hết hạn.\");\r\n      }\r\n      \r\n      const totalAmount = calculateTotal();\r\n      \r\n      // Mark prescription as dispensed\r\n      const success = await createPharmacyInvoice(patient.id, totalAmount, token);\r\n      \r\n      if (success) {\r\n        // Close invoice and notify parent component\r\n        setShowInvoice(false);\r\n        onPatientComplete(patient.id);\r\n      } else {\r\n        throw new Error(\"Không thể cập nhật trạng thái đơn thuốc.\");\r\n      }\r\n    } catch (err: any) {\r\n      console.error(\"Error completing prescription:\", err);\r\n      setError(err.message || \"Không thể hoàn thành phát thuốc. Vui lòng thử lại.\");\r\n    } finally {\r\n      setProcessing(false);\r\n    }\r\n  };\r\n  \r\n  if (showInvoice) {\r\n    return <Invoice \r\n      patient={patient} \r\n      onClose={() => setShowInvoice(false)} \r\n      onComplete={handleComplete} \r\n    />;\r\n  }\r\n  \r\n  const calculateTotal = () => {\r\n    return patient.prescription.reduce((total, med) => {\r\n      return total + med.price * med.quantity;\r\n    }, 0);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"bg-white border border-gray-300 rounded-lg shadow-sm overflow-hidden\">\r\n      <div className=\"bg-gray-50 px-6 py-4 border-b border-gray-300 flex justify-between items-center\">\r\n        <h2 className=\"text-lg font-semibold text-black flex items-center\">\r\n          <PillIcon size={20} className=\"mr-2 text-black\" />\r\n          Chi Tiết Đơn Thuốc\r\n        </h2>\r\n        {error ? (\r\n          <div className=\"flex items-center text-red-600\">\r\n            <AlertTriangle size={16} className=\"mr-1\" />\r\n            <span className=\"text-sm\">{error}</span>\r\n          </div>\r\n        ) : (\r\n          <button \r\n            onClick={handleShowInvoice} \r\n            disabled={processing}\r\n            className={`inline-flex items-center px-4 py-2 text-sm font-medium rounded-lg text-white transition-colors shadow-sm ${\r\n              processing \r\n                ? 'bg-gray-400 cursor-not-allowed' \r\n                : 'bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2'\r\n            }`}\r\n          >\r\n            {processing ? (\r\n              <>\r\n                <span className=\"animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full mr-2\"></span>\r\n                Đang xử lý...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <PrinterIcon size={16} className=\"mr-2\" /> \r\n                Xuất hóa đơn thuốc\r\n              </>\r\n            )}\r\n          </button>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"p-6 space-y-6\">\r\n        {/* Patient Information */}\r\n        <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-300\">\r\n          <div className=\"flex items-center mb-4\">\r\n            <UserIcon size={18} className=\"text-black mr-2\" />\r\n            <h3 className=\"text-lg font-medium text-black\">\r\n              Thông tin bệnh nhân\r\n            </h3>\r\n          </div>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-black mb-1\">Họ và tên</p>\r\n              <p className=\"text-black\">{patient.fullName}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-medium text-black mb-1\">Số điện thoại</p>\r\n              <p className=\"text-black\">{patient.phone}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-medium text-black mb-1\">Mã đơn thuốc</p>\r\n              <p className=\"text-black\">{patient.serialNumber}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Medical Information */}\r\n        <div className=\"border border-gray-300 rounded-lg p-4\">\r\n          <div className=\"flex items-center mb-4\">\r\n            <ClipboardListIcon size={18} className=\"text-black mr-2\" />\r\n            <h3 className=\"text-lg font-medium text-black\">\r\n              Thông tin y tế\r\n            </h3>\r\n          </div>\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <p className=\"text-sm font-medium text-black mb-1\">Chẩn đoán</p>\r\n              <p className=\"text-black\">{patient.diagnosis}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-medium text-black mb-1\">Bác sĩ</p>\r\n              <p className=\"text-black\">{patient.doctor}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Prescription */}\r\n        <div>\r\n          <h3 className=\"text-lg font-medium text-black mb-4 flex items-center\">\r\n            <PillIcon size={18} className=\"mr-2 text-black\" />\r\n            Đơn thuốc\r\n          </h3>\r\n          \r\n          <div className=\"overflow-x-auto border border-gray-300 rounded-lg\">\r\n            <table className=\"min-w-full divide-y divide-gray-300\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                    STT\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                    Tên thuốc\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                    Số lượng\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                    Liều dùng\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                    Đơn giá\r\n                  </th>\r\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                    Thành tiền\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              \r\n              <tbody className=\"bg-white divide-y divide-gray-300\">\r\n                {patient.prescription.map((medicine, index) => (\r\n                  <tr key={index} className={index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                      {index + 1}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                      {medicine.name}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                      {medicine.quantity}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                      {medicine.dosage}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                      {medicine.price.toLocaleString('vi-VN')} đ\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                      {(medicine.price * medicine.quantity).toLocaleString('vi-VN')} đ\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n                \r\n                <tr className=\"bg-gray-100\">\r\n                  <td colSpan={5} className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-black text-right border-t border-gray-400\">\r\n                    Tổng cộng:\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-bold text-black border-t border-gray-400\">\r\n                    {calculateTotal().toLocaleString('vi-VN')} đ\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1873, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/pharmacyPage/InvoiceDetailModal.tsx"],"sourcesContent":["import React from 'react';\r\nimport { XIcon, FileTextIcon, PrinterIcon } from 'lucide-react';\r\nimport { PharmacyPatient, PharmacyMedicine, PharmacyInvoice } from './pharmacyUtils';\r\n\r\ninterface InvoiceDetailModalProps {\r\n  invoice: PharmacyInvoice;\r\n  patient: PharmacyPatient;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const InvoiceDetailModal = ({\r\n  invoice,\r\n  patient,\r\n  onClose\r\n}: InvoiceDetailModalProps) => {\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"bg-gray-50 border-b border-gray-300\">\r\n          <div className=\"px-6 py-4 flex items-center justify-between\">\r\n            <h2 className=\"text-xl font-bold text-black flex items-center\">\r\n              <FileTextIcon size={20} className=\"mr-2 text-black\" />\r\n              Chi Tiết Hóa Đơn #{invoice.id}\r\n            </h2>\r\n            <button \r\n              onClick={onClose} \r\n              className=\"p-1.5 rounded-full hover:bg-gray-200 text-black transition-colors\"\r\n            >\r\n              <XIcon size={20} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"p-6\">\r\n          <div className=\"border border-gray-300 rounded-lg p-6\">\r\n            <div className=\"text-center mb-6\">\r\n              <h3 className=\"text-xl font-bold text-black\">\r\n                PHÒNG KHÁM ĐA KHOA\r\n              </h3>\r\n              <p className=\"text-black mt-1\">123 Nguyễn Huệ, Quận 1, TP.HCM</p>\r\n              <p className=\"text-black\">Điện thoại: (028) 3822 1234</p>\r\n              <div className=\"mt-4 border-t border-gray-300 pt-4\">\r\n                <h2 className=\"text-xl font-bold text-black\">HÓA ĐƠN THUỐC</h2>\r\n                <p className=\"text-black mt-1\">\r\n                  Ngày: {new Date(invoice.date).toLocaleDateString('vi-VN')}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6 bg-gray-50 p-4 rounded-lg border border-gray-200\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-black mb-1\">Họ và tên bệnh nhân</p>\r\n                <p className=\"text-black\">{patient.fullName}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-black mb-1\">Số điện thoại</p>\r\n                <p className=\"text-black\">{patient.phone}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-black mb-1\">Mã đơn thuốc</p>\r\n                <p className=\"text-black\">{patient.serialNumber}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-black mb-1\">Chẩn đoán</p>\r\n                <p className=\"text-black\">{patient.diagnosis}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-black mb-1\">Bác sĩ kê đơn</p>\r\n                <p className=\"text-black\">{patient.doctor}</p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-black mb-1\">Nhân viên phát thuốc</p>\r\n                <p className=\"text-black\">{invoice.pharmacistName}</p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"overflow-x-auto mb-6 border border-gray-300 rounded-lg\">\r\n              <table className=\"min-w-full divide-y divide-gray-300\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                      STT\r\n                    </th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                      Tên thuốc\r\n                    </th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                      Số lượng\r\n                    </th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                      Liều dùng\r\n                    </th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                      Đơn giá\r\n                    </th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-black uppercase tracking-wider border-b border-gray-300\">\r\n                      Thành tiền\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {patient.prescription.map((medicine: PharmacyMedicine, index: number) => (\r\n                    <tr key={index} className={index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                        {index + 1}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                        {medicine.name}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                        {medicine.quantity}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                        {medicine.dosage}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                        {medicine.price.toLocaleString('vi-VN')} đ\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-black\">\r\n                        {(medicine.price * medicine.quantity).toLocaleString('vi-VN')} đ\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                  <tr className=\"bg-gray-100\">\r\n                    <td colSpan={5} className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-black text-right border-t border-gray-400\">\r\n                      Tổng cộng:\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-bold text-black border-t border-gray-400\">\r\n                      {invoice.totalAmount.toLocaleString('vi-VN')} đ\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            \r\n            <div className=\"flex justify-end mt-6\">\r\n              <button className=\"px-5 py-2.5 bg-green-600 hover:bg-green-700 text-white rounded-lg flex items-center transition-colors shadow-sm\">\r\n                <PrinterIcon size={18} className=\"mr-2\" />\r\n                In hóa đơn\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2397, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/pharmacyPage/Statistics.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { CalendarIcon, SearchIcon, ChevronDownIcon } from 'lucide-react';\r\nimport { InvoiceDetailModal } from './InvoiceDetailModal';\r\nimport { \r\n  PharmacyPatient, \r\n  PharmacyInvoice, \r\n  getPharmacyInvoices, \r\n  getDailyRevenue,\r\n  getPatientsWithPendingPrescriptions\r\n} from './pharmacyUtils';\r\n\r\nexport const Statistics = () => {\r\n  const [selectedPeriod, setSelectedPeriod] = useState<string>('day');\r\n  const [showDetails, setShowDetails] = useState<boolean>(false);\r\n  const [selectedDate, setSelectedDate] = useState<string>('2025-06-29');\r\n  const [selectedInvoice, setSelectedInvoice] = useState<{invoice: PharmacyInvoice, patient: PharmacyPatient | undefined} | null>(null);\r\n  const [revenueData, setRevenueData] = useState<Array<{date: string, amount: number}>>([]);\r\n  const [invoicesData, setInvoicesData] = useState<PharmacyInvoice[]>([]);\r\n  const [patients, setPatients] = useState<PharmacyPatient[]>([]);\r\n  \r\n  // Tải dữ liệu doanh thu và hóa đơn từ API\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Lấy dữ liệu thống kê, hóa đơn, và danh sách bệnh nhân từ MongoDB API\r\n        const [revenue, invoices, patientsList] = await Promise.all([\r\n          getDailyRevenue(),\r\n          getPharmacyInvoices(),\r\n          getPatientsWithPendingPrescriptions()\r\n        ]);\r\n        \r\n        setRevenueData(revenue);\r\n        setInvoicesData(invoices);\r\n        setPatients(patientsList);\r\n        \r\n        // Mặc định chọn ngày hôm nay nếu có dữ liệu\r\n        if (revenue && revenue.length > 0) {\r\n          // Lấy ngày đầu tiên trong danh sách doanh thu (thường là ngày gần nhất)\r\n          setSelectedDate(revenue[0].date);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching statistics data:\", error);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, []);\r\n  \r\n  const formatDate = (dateString: string): string => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('vi-VN');\r\n  };\r\n  \r\n  const getTotalRevenue = (): number => {\r\n    return revenueData.find(item => item.date === selectedDate)?.amount || 0;\r\n  };\r\n  \r\n  const getInvoicesForDate = (): PharmacyInvoice[] => {\r\n    return invoicesData.filter(invoice => {\r\n      // Lấy phần ngày từ định dạng ISO\r\n      const invoiceDate = new Date(invoice.date).toISOString().split('T')[0];\r\n      return invoiceDate === selectedDate;\r\n    });\r\n  };\r\n  \r\n  const getPatientById = (id: string): PharmacyPatient | undefined => {\r\n    return patients.find(patient => patient._id === id);\r\n  };\r\n  // Render thống kê doanh thu và danh sách hóa đơn\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Bảng thống kê */}\r\n      <div className=\"bg-white shadow rounded-lg overflow-hidden\">\r\n        <div className=\"bg-blue-600 px-4 py-3\">\r\n          <h2 className=\"text-lg font-medium text-white\">\r\n            Xem Thống Kê Doanh Thu\r\n          </h2>\r\n        </div>\r\n        <div className=\"p-6\">\r\n          {/* Bộ lọc và công cụ */}\r\n          <div className=\"flex flex-wrap items-center gap-5 mb-6\">\r\n            {/* Chọn ngày */}\r\n            <div>\r\n              <label htmlFor=\"date\" className=\"block text-sm font-medium text-black mb-2\">\r\n                Chọn ngày\r\n              </label>\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <CalendarIcon size={18} className=\"text-black\" />\r\n                </div>\r\n                <input \r\n                  type=\"date\" \r\n                  id=\"date\" \r\n                  value={selectedDate} \r\n                  onChange={e => setSelectedDate(e.target.value)} \r\n                  className=\"pl-10 pr-4 py-2.5 block w-full rounded-lg border-gray-300 shadow-sm focus:ring-2 focus:ring-black focus:border-black text-black border\" \r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex-grow\"></div>\r\n            \r\n            {/* Nút xem chi tiết */}\r\n            <div className=\"flex items-end\">\r\n              <button \r\n                onClick={() => setShowDetails(!showDetails)} \r\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n              >\r\n                <SearchIcon className=\"h-4 w-4 mr-1\" /> \r\n                {showDetails ? 'Ẩn chi tiết' : 'Xem chi tiết'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Hiển thị tổng doanh thu */}\r\n          <div className=\"bg-blue-50 rounded-lg p-6 mb-6\">\r\n            <h3 className=\"text-lg font-medium text-blue-800 mb-2\">\r\n              Tổng doanh thu\r\n            </h3>\r\n            <div className=\"flex items-baseline\">\r\n              <span className=\"text-3xl font-bold text-blue-600\">\r\n                {getTotalRevenue().toLocaleString('vi-VN')} đ\r\n              </span>\r\n              <span className=\"ml-2 text-sm text-gray-500\">\r\n                Ngày {formatDate(selectedDate)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Bảng chi tiết hóa đơn */}\r\n          {showDetails && (\r\n            <div>\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n                Chi tiết hóa đơn\r\n              </h3>\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"min-w-full divide-y divide-gray-200\">\r\n                  <thead className=\"bg-gray-50\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Mã hóa đơn\r\n                      </th>\r\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Tên bệnh nhân\r\n                      </th>\r\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Nhân viên phát thuốc\r\n                      </th>\r\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Tổng tiền\r\n                      </th>\r\n                      <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        Thao tác\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                    {getInvoicesForDate().map(invoice => {\r\n                      // Lấy thông tin bệnh nhân từ ID\r\n                      const patient = getPatientById(invoice.patientId);\r\n                      \r\n                      return (\r\n                        <tr key={invoice.id}>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600\">\r\n                            #{invoice.id}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                            {patient?.fullName || 'N/A'}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                            {invoice.pharmacistName}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                            {invoice.totalAmount.toLocaleString('vi-VN')} đ\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                            <button \r\n                              onClick={() => setSelectedInvoice({ invoice, patient })} \r\n                              className=\"text-blue-600 hover:text-blue-800\"\r\n                              disabled={!patient}\r\n                            >\r\n                              Xem chi tiết\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                    \r\n                    {/* Hiển thị khi không có hóa đơn */}\r\n                    {getInvoicesForDate().length === 0 && (\r\n                      <tr>\r\n                        <td colSpan={5} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center\">\r\n                          Không có hóa đơn nào cho ngày đã chọn.\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Hiển thị modal chi tiết hóa đơn khi được chọn */}\r\n      {selectedInvoice && selectedInvoice.patient && (\r\n        <InvoiceDetailModal \r\n          invoice={selectedInvoice.invoice} \r\n          patient={selectedInvoice.patient} \r\n          onClose={() => setSelectedInvoice(null)} \r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2846, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/pharmacyPage/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { LogOutIcon, PillIcon, BarChartIcon, AlertTriangle, UserIcon } from 'lucide-react';\r\nimport { PatientList } from './PatientList';\r\nimport { PatientDetails } from './PatientDetails';\r\nimport { Statistics } from './Statistics';\r\nimport { PharmacyPatient, getPatientsWithPendingPrescriptions } from './pharmacyUtils';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\n// User interface for authentication context\r\ninterface User {\r\n  fullName: string; // Changed from 'name' to 'fullName' to match User in mockPatients\r\n  role: string;\r\n  // Other user properties (optional)\r\n  _id?: string;\r\n  username?: string;\r\n  email?: string;\r\n}\r\n\r\ninterface DashboardProps {\r\n  user: User | null; // Assuming user can be null if not logged in\r\n  onLogout: () => void;\r\n}\r\n\r\nexport const Dashboard = ({\r\n  user,\r\n  onLogout\r\n}: DashboardProps) => {\r\n  const [activeTab, setActiveTab] = useState('dispense'); // 'dispense' or 'statistics'\r\n  const [selectedPatient, setSelectedPatient] = useState<PharmacyPatient | null>(null);\r\n  const [waitingPatients, setWaitingPatients] = useState<PharmacyPatient[]>([]);\r\n  \r\n  // State cho loading và error\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  // Tải dữ liệu bệnh nhân chờ phát thuốc từ API\r\n  const fetchPatients = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Fetch prescriptions with status PENDING_DISPENSE\r\n      const patients = await getPatientsWithPendingPrescriptions();\r\n      setWaitingPatients(patients);\r\n      console.log(`Fetched ${patients.length} patients with pending prescriptions`);\r\n      \r\n      if (patients.length === 0) {\r\n        // Reset selected patient if no patients are waiting\r\n        setSelectedPatient(null);\r\n      }\r\n    } catch (error: any) {\r\n      console.error(\"Error fetching patients:\", error);\r\n      setError(error.message || \"Không thể tải danh sách bệnh nhân\");\r\n      setWaitingPatients([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Fetch patients on mount and when user changes\r\n  // Initial fetch\r\n  useEffect(() => {\r\n    fetchPatients();\r\n  }, [user]);\r\n  \r\n  // Setup polling for auto-refresh\r\n  useEffect(() => {\r\n    // Set up polling for real-time updates\r\n    const intervalId = setInterval(() => {\r\n      // Only auto-refresh if not viewing a patient's details\r\n      if (!selectedPatient && !isLoading) {\r\n        console.log(\"Auto-refreshing patient list...\");\r\n        fetchPatients();\r\n      }\r\n    }, 60000); // Poll every minute\r\n    \r\n    return () => clearInterval(intervalId);\r\n  }, [selectedPatient, isLoading]);\r\n\r\n  const handlePatientSelect = (patient: PharmacyPatient) => {\r\n    setSelectedPatient(patient);\r\n  };\r\n\r\n  const handlePatientRemove = (patientId: string) => {\r\n    console.log(`Removing patient ${patientId} from waiting list after dispensing`);\r\n    setWaitingPatients(prevPatients => prevPatients.filter(p => p._id !== patientId));\r\n    setSelectedPatient(null);\r\n    \r\n    // Also refresh the list to ensure our counts are accurate\r\n    setTimeout(() => {\r\n      fetchPatients();\r\n    }, 1000); // Give the backend a moment to update\r\n  };\r\n\r\n  return <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-blue-700 text-white shadow\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-4 sm:px-6 lg:px-8 flex justify-between items-center\">\r\n          <h1 className=\"text-2xl font-bold\">Hệ Thống Quản Lý Nhà Thuốc</h1>\r\n          <div className=\"flex items-center space-x-4\">\r\n            <span className=\"text-sm\">\r\n              Xin chào, {user?.fullName || 'Nhân viên'}\r\n            </span>\r\n            <button onClick={onLogout} className=\"inline-flex items-center px-3 py-1 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-blue-800 hover:bg-blue-900 focus:outline-none focus:border-blue-900 focus:shadow-outline-blue active:bg-blue-900 transition duration-150 ease-in-out\">\r\n              <LogOutIcon className=\"h-4 w-4 mr-1\" /> Đăng Xuất\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      {/* Navigation */}\r\n      <nav className=\"bg-white shadow\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-center h-16\">\r\n            <div className=\"flex space-x-8\">\r\n              <button onClick={() => {\r\n              setActiveTab('dispense');\r\n              setSelectedPatient(null);\r\n            }} className={`inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium leading-5 focus:outline-none transition duration-150 ease-in-out ${activeTab === 'dispense' ? 'border-blue-500 text-gray-900' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`}>\r\n                <PillIcon className=\"h-5 w-5 mr-1\" /> Phát Thuốc\r\n              </button>\r\n              <button onClick={() => {\r\n              setActiveTab('statistics');\r\n              setSelectedPatient(null);\r\n            }} className={`inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium leading-5 focus:outline-none transition duration-150 ease-in-out ${activeTab === 'statistics' ? 'border-blue-500 text-gray-900' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`}>\r\n                <BarChartIcon className=\"h-5 w-5 mr-1\" /> Xem Thống Kê Doanh Thu\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      {/* Main Content */}\r\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\r\n        {activeTab === 'dispense' ? <div className=\"flex flex-col md:flex-row gap-6\">\r\n            <div className=\"w-full md:w-1/3\">\r\n              <PatientList \r\n                patients={waitingPatients} \r\n                onPatientSelect={handlePatientSelect} \r\n                onRefresh={fetchPatients}\r\n                isLoading={isLoading}\r\n                error={error}\r\n              />\r\n            </div>\r\n            <div className=\"w-full md:w-2/3\">\r\n              {isLoading && !selectedPatient ? (\r\n                <div className=\"bg-white shadow rounded-lg p-6 h-96 flex items-center justify-center\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"animate-spin h-8 w-8 border-4 border-blue-500 border-t-transparent rounded-full mx-auto mb-4\"></div>\r\n                    <p className=\"text-gray-600\">Đang tải danh sách bệnh nhân...</p>\r\n                  </div>\r\n                </div>\r\n              ) : error && !selectedPatient ? (\r\n                <div className=\"bg-white shadow rounded-lg p-6 h-96 flex items-center justify-center\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"bg-red-100 p-3 rounded-full mx-auto mb-4 w-16 h-16 flex items-center justify-center\">\r\n                      <AlertTriangle className=\"h-8 w-8 text-red-600\" />\r\n                    </div>\r\n                    <p className=\"text-red-600 font-medium mb-2\">Không thể tải dữ liệu</p>\r\n                    <p className=\"text-gray-600 mb-4\">{error}</p>\r\n                    <button \r\n                      onClick={fetchPatients}\r\n                      className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\r\n                    >\r\n                      Thử lại\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ) : selectedPatient ? (\r\n                <PatientDetails patient={selectedPatient} onPatientComplete={handlePatientRemove} />\r\n              ) : (\r\n                <div className=\"bg-white shadow rounded-lg p-6 h-96 flex items-center justify-center\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"bg-blue-100 p-3 rounded-full mx-auto mb-4 w-16 h-16 flex items-center justify-center\">\r\n                      <UserIcon className=\"h-8 w-8 text-blue-600\" />\r\n                    </div>\r\n                    <p className=\"text-gray-700 font-medium mb-2\">Chưa có bệnh nhân nào được chọn</p>\r\n                    <p className=\"text-gray-500\">\r\n                      Vui lòng chọn bệnh nhân từ danh sách để xem chi tiết đơn thuốc.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div> : <Statistics />}\r\n      </main>\r\n      {/* Footer */}\r\n      <footer className=\"bg-white border-t border-gray-200 py-4\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <p className=\"text-center text-sm text-gray-500\">\r\n            © 2023 Hệ Thống Quản Lý Nhà Thuốc. Bản quyền thuộc về Phòng Khám.\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    </div>;\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3283, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/pharmacyPage/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useRouter } from 'next/navigation';\r\nimport { Dashboard } from './Dashboard';\r\n\r\nexport default function PharmacyPage() {\r\n  const { user, isAuthenticated, logout } = useAuth();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      router.push('/login');\r\n    } else if (user?.role !== 'PHARMACIST') {\r\n      // Nếu người dùng không phải là dược sĩ, chuyển hướng về trang đăng nhập\r\n      logout();\r\n      router.push('/login');\r\n    }\r\n  }, [isAuthenticated, router, user, logout]);\r\n\r\n  if (!isAuthenticated || !user) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-full min-h-screen bg-gray-50\">\r\n      <Dashboard user={user} onLogout={logout} />\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOe,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,UAAO,AAAD;IAChD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,iBAAiB;YACpB,OAAO,IAAI,CAAC;QACd,OAAO,IAAI,MAAM,SAAS,cAAc;YACtC,wEAAwE;YACxE;YACA,OAAO,IAAI,CAAC;QACd;IACF,GAAG;QAAC;QAAiB;QAAQ;QAAM;KAAO;IAE1C,IAAI,CAAC,mBAAmB,CAAC,MAAM;QAC7B,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,wIAAA,CAAA,YAAS;YAAC,MAAM;YAAM,UAAU;;;;;;;;;;;AAGvC","debugId":null}}]
}